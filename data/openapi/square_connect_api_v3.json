{
  "openapi": "3.0.1",
  "info": {
    "title": "Square Connect API",
    "description": "Client library for accessing the Square Connect APIs",
    "termsOfService": "https://connect.squareup.com/tos",
    "contact": {
      "name": "Square Developer Platform",
      "url": "https://squareup.com/developers",
      "email": "developers@squareup.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0"
  },
  "externalDocs": {
    "description": "Read the official documentation here:",
    "url": "https://docs.connect.squareup.com/"
  },
  "servers": [
    {
      "url": "https://connect.squareup.com/"
    }
  ],
  "paths": {
    "/mobile/authorization-code": {
      "post": {
        "tags": [
          "MobileAuthorization"
        ],
        "summary": "CreateMobileAuthorizationCode",
        "description": "Generates code to authorize a mobile application to connect to a Square card reader\n\nAuthorization codes are one-time-use and expire __60 minutes__ after being issued.\n\n__Important:__ The `Authorization` header you provide to this endpoint must have the following format:\n\n```\nAuthorization: Bearer ACCESS_TOKEN\n```\n\nReplace `ACCESS_TOKEN` with a\n[valid production authorization credential](/docs/build-basics/access-tokens).",
        "operationId": "CreateMobileAuthorizationCode",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMobileAuthorizationCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMobileAuthorizationCodeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE_IN_PERSON"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE_IN_PERSON"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/oauth2/clients/{client_id}/access-token/renew": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RenewToken",
        "description": "`RenewToken` is deprecated. For information about refreshing OAuth access tokens, see\n[Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens).\n\n\nRenews an OAuth access token before it expires.\n\nOAuth access tokens besides your application's personal access token expire after __30 days__.\nYou can also renew expired tokens within __15 days__ of their expiration.\nYou cannot renew an access token that has been expired for more than 15 days.\nInstead, the associated user must re-complete the OAuth flow from the beginning.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [application dashboard](https://connect.squareup.com/apps).",
        "operationId": "RenewToken",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "Your application ID, available from the [application dashboard](https://connect.squareup.com/apps).",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenewTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenewTokenResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/oauth2/revoke": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "RevokeToken",
        "description": "Revokes an access token generated with the OAuth flow.\n\nIf an account has more than one OAuth access token for your application, this\nendpoint revokes all of them, regardless of which token you specify. When an\nOAuth access token is revoked, all of the active subscriptions associated\nwith that OAuth token are canceled immediately.\n\n__Important:__ The `Authorization` header for this endpoint must have the\nfollowing format:\n\n```\nAuthorization: Client APPLICATION_SECRET\n```\n\nReplace `APPLICATION_SECRET` with the application secret on the Credentials\npage in the [Developer Dashboard](https://developer.squareup.com/apps).",
        "operationId": "RevokeToken",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeTokenResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2ClientSecret": []
          }
        ],
        "x-release-status": "PUBLIC",
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "ObtainToken",
        "description": "Returns an OAuth access token.\n\nThe endpoint supports distinct methods of obtaining OAuth access tokens.\nApplications specify a method by adding the `grant_type` parameter\nin the request and also provide relevant information.\n\n__Note:__ Regardless of the method application specified,\nthe endpoint always returns two items; an OAuth access token and\na refresh token in the response.\n\n__OAuth tokens should only live on secure servers. Application clients\nshould never interact directly with OAuth tokens__.",
        "operationId": "ObtainToken",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObtainTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObtainTokenResponse"
                }
              }
            }
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/employees": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployees",
        "description": "Provides summary information for all of a business's employees.",
        "operationId": "ListEmployees",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_updated_at",
            "in": "query",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_updated_at",
            "in": "query",
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_created_at",
            "in": "query",
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_created_at",
            "in": "query",
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_id",
            "in": "query",
            "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1Employee"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployee",
        "description": " Use the CreateEmployee endpoint to add an employee to a Square\naccount. Employees created with the Connect API have an initial status\nof `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale\nuntil they are activated from the Square Dashboard. Employee status\ncannot be changed with the Connect API.\n\nEmployee entities cannot be deleted. To disable employee profiles,\nset the employee's status to <code>INACTIVE</code>",
        "operationId": "CreateEmployee",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Employee"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/employees/{employee_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployee",
        "description": "Provides the details for a single employee.",
        "operationId": "RetrieveEmployee",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The employee's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Employee"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployee",
        "operationId": "UpdateEmployee",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the role to modify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Employee"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/me/roles": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "ListEmployeeRoles",
        "description": "Provides summary information for all of a business's employee roles.",
        "operationId": "ListEmployeeRoles",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1EmployeeRole"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "V1Employees"
        ],
        "summary": "CreateEmployeeRole",
        "description": "Creates an employee role you can then assign to employees.\n\nSquare accounts can include any number of roles that can be assigned to\nemployees. These roles define the actions and permissions granted to an\nemployee with that role. For example, an employee with a \"Shift Manager\"\nrole might be able to issue refunds in Square Point of Sale, whereas an\nemployee with a \"Clerk\" role might not.\n\nRoles are assigned with the [V1UpdateEmployee](#endpoint-v1updateemployee)\nendpoint. An employee can have only one role at a time.\n\nIf an employee has no role, they have none of the permissions associated\nwith roles. All employees can accept payments with Square Point of Sale.",
        "operationId": "CreateEmployeeRole",
        "requestBody": {
          "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1EmployeeRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EmployeeRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "employee_role"
      }
    },
    "/v1/me/roles/{role_id}": {
      "get": {
        "tags": [
          "V1Employees"
        ],
        "summary": "RetrieveEmployeeRole",
        "description": "Provides the details for a single employee role.",
        "operationId": "RetrieveEmployeeRole",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "The role's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EmployeeRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "V1Employees"
        ],
        "summary": "UpdateEmployeeRole",
        "description": "Modifies the details of an employee role.",
        "operationId": "UpdateEmployeeRole",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "The ID of the role to modify.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1EmployeeRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EmployeeRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{location_id}/orders": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListOrders",
        "description": "Provides summary information for a merchant's online store orders.",
        "operationId": "ListOrders",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list online store orders for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which payments are listed in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1Order"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v1/{location_id}/orders/{order_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveOrder",
        "description": "Provides comprehensive information for a single online store order, including the order's history.",
        "operationId": "RetrieveOrder",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the order's associated location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Order"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "UpdateOrder",
        "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the order's associated location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1UpdateOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Order"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{location_id}/payments": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListPayments",
        "description": "Provides summary information for all payments taken for a given\nSquare account during a date range. Date ranges cannot exceed 1 year in\nlength. See Date ranges for details of inclusive and exclusive dates.\n\n*Note**: Details for payments processed with Square Point of Sale while\nin offline mode may not be transmitted to Square for up to 72 hours.\nOffline payments have a `created_at` value that reflects the time the\npayment was originally processed, not the time it was subsequently\ntransmitted to Square. Consequently, the ListPayments endpoint might\nlist an offline payment chronologically between online payments that\nwere seen in a previous request.",
        "operationId": "ListPayments",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which payments are listed in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_partial",
            "in": "query",
            "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1Payment"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v1/{location_id}/payments/{payment_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrievePayment",
        "description": "Provides comprehensive information for a single payment.",
        "operationId": "RetrievePayment",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the payment's associated location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_id",
            "in": "path",
            "description": "The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v1/{location_id}/refunds": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListRefunds",
        "description": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "operationId": "ListRefunds",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list refunds for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which payments are listed in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1Refund"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "CreateRefund",
        "description": "Issues a refund for a previously processed payment. You must issue\na refund within 60 days of the associated payment.\n\nYou cannot issue a partial refund for a split tender payment. You must\ninstead issue a full or partial refund for a particular tender, by\nproviding the applicable tender id to the V1CreateRefund endpoint.\nIssuing a full refund for a split tender payment refunds all tenders\nassociated with the payment.\n\nIssuing a refund for a card payment is not reversible. For development\npurposes, you can create fake cash payments in Square Point of Sale and\nrefund them.",
        "operationId": "CreateRefund",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the original payment's associated location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V1CreateRefundRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Refund"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/{location_id}/settlements": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "ListSettlements",
        "description": "Provides summary information for all deposits and withdrawals\ninitiated by Square to a linked bank account during a date range. Date\nranges cannot exceed one year in length.\n\n*Note**: the ListSettlements endpoint does not provide entry\ninformation.",
        "operationId": "ListSettlements",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns settlements aggregated from all of the business's locations.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which settlements are listed in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of settlements to return in a single response. This value cannot exceed 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch_token",
            "in": "query",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V1Settlement"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v1/{location_id}/settlements/{settlement_id}": {
      "get": {
        "tags": [
          "V1Transactions"
        ],
        "summary": "RetrieveSettlement",
        "description": "Provides comprehensive information for a single settlement.\n\nThe returned `Settlement` objects include an `entries` field that lists\nthe transactions that contribute to the settlement total. Most\nsettlement entries correspond to a payment payout, but settlement\nentries are also generated for less common events, like refunds, manual\nadjustments, or chargeback holds.\n\nSquare initiates its regular deposits as indicated in the\n[Deposit Options with Square](https://squareup.com/help/us/en/article/3807)\nhelp article. Details for a regular deposit are usually not available\nfrom Connect API endpoints before 10 p.m. PST the same day.\n\nSquare does not know when an initiated settlement **completes**, only\nwhether it has failed. A completed settlement is typically reflected in\na bank account within 3 business days, but in exceptional cases it may\ntake longer.",
        "operationId": "RetrieveSettlement",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the settlements's associated location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settlement_id",
            "in": "path",
            "description": "The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1Settlement"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "SETTLEMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/apple-pay/domains": {
      "post": {
        "tags": [
          "ApplePay"
        ],
        "summary": "RegisterDomain",
        "description": "Activates a domain for use with Apple Pay on the Web and Square. A validation\nis performed on this domain by Apple to ensure that it is properly set up as\nan Apple Pay enabled domain.\n\nThis endpoint provides an easy way for platform developers to bulk activate\nApple Pay on the Web with Square for merchants using their platform.\n\nTo learn more about Web Apple Pay, see\n[Add the Apple Pay on the Web Button](/docs/payment-form/add-digital-wallets/apple-pay).",
        "operationId": "RegisterDomain",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterDomainResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/bank-accounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "ListBankAccounts",
        "description": "Returns a list of [BankAccount](#type-bankaccount) objects linked to a Square account.",
        "operationId": "ListBankAccounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor returned by a previous call to this endpoint.\nUse it in the next `ListBankAccounts` request to retrieve the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Upper limit on the number of bank accounts to return in the response. \nCurrently, 1000 is the largest supported limit. You can specify a limit \nof up to 1000 bank accounts. This is also the default limit.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "Location ID. You can specify this optional filter \nto retrieve only the linked bank accounts belonging to a specific location.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBankAccountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bank-accounts/by-v1-id/{v1_bank_account_id}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "GetBankAccountByV1Id",
        "description": "Returns details of a [BankAccount](#type-bankaccount) identified by V1 bank account ID.",
        "operationId": "GetBankAccountByV1Id",
        "parameters": [
          {
            "name": "v1_bank_account_id",
            "in": "path",
            "description": "Connect V1 ID of the desired `BankAccount`. For more information, see \n[Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankAccountByV1IdResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bank-accounts/{bank_account_id}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "GetBankAccount",
        "description": "Returns details of a [BankAccount](#type-bankaccount) \nlinked to a Square account.",
        "operationId": "GetBankAccount",
        "parameters": [
          {
            "name": "bank_account_id",
            "in": "path",
            "description": "Square-issued ID of the desired `BankAccount`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankAccountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "BANK_ACCOUNTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bookings": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "CreateBooking",
        "description": "Creates a booking.",
        "operationId": "CreateBooking",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/bookings/availability/search": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "SearchAvailability",
        "description": "Searches for availabilities for booking.",
        "operationId": "SearchAvailability",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAvailabilityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAvailabilityResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/bookings/business-booking-profile": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "RetrieveBusinessBookingProfile",
        "description": "Retrieves a seller's booking profile.",
        "operationId": "RetrieveBusinessBookingProfile",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBusinessBookingProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_BUSINESS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_BUSINESS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bookings/team-member-booking-profiles": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "ListTeamMemberBookingProfiles",
        "description": "Lists booking profiles for team members.",
        "operationId": "ListTeamMemberBookingProfiles",
        "parameters": [
          {
            "name": "bookable_only",
            "in": "query",
            "description": "Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`).",
            "schema": {
              "type": "boolean",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return.",
            "schema": {
              "type": "integer",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The cursor for paginating through the results.",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "Indicates whether to include only team members enabled at the given location in the returned result.",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTeamMemberBookingProfilesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_BUSINESS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_BUSINESS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bookings/team-member-booking-profiles/{team_member_id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "RetrieveTeamMemberBookingProfile",
        "description": "Retrieves a team member's booking profile.",
        "operationId": "RetrieveTeamMemberBookingProfile",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "description": "The ID of the team member to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTeamMemberBookingProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_BUSINESS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_BUSINESS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/bookings/{booking_id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "RetrieveBooking",
        "description": "Retrieves a booking.",
        "operationId": "RetrieveBooking",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "description": "The ID of the `Booking` object representing the to-be-retrieved booking.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBookingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Bookings"
        ],
        "summary": "UpdateBooking",
        "description": "Updates a booking.",
        "operationId": "UpdateBooking",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "description": "The ID of the `Booking` object representing the to-be-updated booking.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/bookings/{booking_id}/cancel": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "CancelBooking",
        "description": "Cancels an existing booking.",
        "operationId": "CancelBooking",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "description": "The ID of the `Booking` object representing the to-be-cancelled booking.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelBookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelBookingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "APPOINTMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "APPOINTMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/cash-drawers/shifts": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "ListCashDrawerShifts",
        "description": "Provides the details for all of the cash drawer shifts for a location\nin a date range.",
        "operationId": "ListCashDrawerShifts",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "description": "The ID of the location to query for a list of cash drawer shifts.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The order in which cash drawer shifts are listed in the response,\nbased on their opened_at field. Default value: ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The inclusive start time of the query on opened_at, in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The exclusive end date of the query on opened_at, in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of cash drawer shift events in a page of results (200 by\ndefault, 1000 max).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Opaque cursor for fetching the next page of results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCashDrawerShiftsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/cash-drawers/shifts/{shift_id}": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "RetrieveCashDrawerShift",
        "description": "Provides the summary details for a single cash drawer shift. See\n[ListCashDrawerShiftEvents](#endpoint-CashDrawers-ListCashDrawerShiftEvents) for a list of cash drawer shift events.",
        "operationId": "RetrieveCashDrawerShift",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "description": "The ID of the location to retrieve cash drawer shifts from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shift_id",
            "in": "path",
            "description": "The shift ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCashDrawerShiftResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/cash-drawers/shifts/{shift_id}/events": {
      "get": {
        "tags": [
          "CashDrawers"
        ],
        "summary": "ListCashDrawerShiftEvents",
        "description": "Provides a paginated list of events for a single cash drawer shift.",
        "operationId": "ListCashDrawerShiftEvents",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "description": "The ID of the location to list cash drawer shifts for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shift_id",
            "in": "path",
            "description": "The shift ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of resources to be returned in a page of results (200 by\ndefault, 1000 max).",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Opaque cursor for fetching the next page of results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCashDrawerShiftEventsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CASH_DRAWER_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CASH_DRAWER_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/catalog/batch-delete": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchDeleteCatalogObjects",
        "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only include IDs that were\nactually deleted.",
        "operationId": "BatchDeleteCatalogObjects",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteCatalogObjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDeleteCatalogObjectsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/batch-retrieve": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchRetrieveCatalogObjects",
        "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "operationId": "BatchRetrieveCatalogObjects",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRetrieveCatalogObjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRetrieveCatalogObjectsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/batch-upsert": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "BatchUpsertCatalogObjects",
        "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as the total object count for the\nrequest (items, variations, modifier lists, discounts, and taxes) is no more\nthan 10,000.",
        "operationId": "BatchUpsertCatalogObjects",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpsertCatalogObjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpsertCatalogObjectsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/info": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "CatalogInfo",
        "description": "Retrieves information about the Square Catalog API, such as batch size\nlimits that can be used by the `BatchUpsertCatalogObjects` endpoint.",
        "operationId": "CatalogInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogInfoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/catalog/list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "ListCatalog",
        "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The `types` parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`.\n\n__Important:__ ListCatalog does not return deleted catalog items. To retrieve\ndeleted catalog items, use [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects)\nand set the `include_deleted_objects` attribute value to `true`.",
        "operationId": "ListCatalog",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.\n\nThe legal values are taken from the CatalogObjectType enum:\n`ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,\n`MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catalog_version",
            "in": "query",
            "description": "The specific version of the catalog objects to be included in the response. \nThis allows you to retrieve historical\nversions of objects. The specified version value is matched against\nthe `CatalogObject`s' `version` attribute.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCatalogResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/catalog/object": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpsertCatalogObject",
        "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
        "operationId": "UpsertCatalogObject",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertCatalogObjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertCatalogObjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/object/{object_id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "RetrieveCatalogObject",
        "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "operationId": "RetrieveCatalogObject",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "description": "The object ID of any type of catalog objects to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_related_objects",
            "in": "query",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a `CatalogItem`, its associated\n`CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will\nbe returned in the `related_objects` field of the response. If the `object` field of\nthe response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned\nin the `related_objects` field of the response.\n\nDefault value: `false`",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "catalog_version",
            "in": "query",
            "description": "Requests objects as of a specific version of the catalog. This allows you to retrieve historical\nversions of objects. The value to retrieve a specific version of an object can be found\nin the version field of `CatalogObject`s.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCatalogObjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "DeleteCatalogObject",
        "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
        "operationId": "DeleteCatalogObject",
        "parameters": [
          {
            "name": "object_id",
            "in": "path",
            "description": "The ID of the catalog object to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\ncatalog item will delete its catalog item variations).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCatalogObjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/catalog/search": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogObjects",
        "description": "Searches for [CatalogObject](#type-CatalogObject) of any type by matching supported search attribute values,\nexcluding custom attribute values on items or item variations, against one or more of the specified query expressions.\n\nThis (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)\nendpoint in the following aspects:\n\n- `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects.\n- `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does.\n- The both endpoints have different call conventions, including the query filter formats.",
        "operationId": "SearchCatalogObjects",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCatalogObjectsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCatalogObjectsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/search-catalog-items": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "SearchCatalogItems",
        "description": "Searches for catalog items or item variations by matching supported search attribute values, including\ncustom attribute values, against one or more of the specified query expressions.\n\nThis (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects)\nendpoint in the following aspects:\n\n- `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects.\n- `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not.\n- `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does.\n- The both endpoints use different call conventions, including the query filter formats.",
        "operationId": "SearchCatalogItems",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCatalogItemsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCatalogItemsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ITEMS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/update-item-modifier-lists": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemModifierLists",
        "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
        "operationId": "UpdateItemModifierLists",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemModifierListsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItemModifierListsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/catalog/update-item-taxes": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "UpdateItemTaxes",
        "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
        "operationId": "UpdateItemTaxes",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemTaxesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItemTaxesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "ListCustomers",
        "description": "Lists customer profiles associated with a Square account.\n\nUnder normal operating conditions, newly created or updated customer profiles become available\nfor the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated\nprofiles can take closer to one minute or longer, especially during network incidents and outages.",
        "operationId": "ListCustomers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_field",
            "in": "query",
            "description": "Indicates how Customers should be sorted.\n\nDefault: `DEFAULT`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order.\n\nDefault: `ASC`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomer",
        "description": "Creates a new customer for a business, which can have associated cards on file.\n\nYou must provide __at least one__ of the following values in your request to this\nendpoint:\n\n- `given_name`\n- `family_name`\n- `company_name`\n- `email_address`\n- `phone_number`",
        "operationId": "CreateCustomer",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/customers/groups": {
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "ListCustomerGroups",
        "description": "Retrieves the list of customer groups of a business.",
        "operationId": "ListCustomerGroups",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerGroupsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "CreateCustomerGroup",
        "description": "Creates a new customer group for a business. \n\nThe request must include the `name` value of the group.",
        "operationId": "CreateCustomerGroup",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerGroupResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/customers/groups/{group_id}": {
      "get": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "RetrieveCustomerGroup",
        "description": "Retrieves a specific customer group as identified by the `group_id` value.",
        "operationId": "RetrieveCustomerGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the customer group to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCustomerGroupResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "UpdateCustomerGroup",
        "description": "Updates a customer group as identified by the `group_id` value.",
        "operationId": "UpdateCustomerGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the customer group to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerGroupResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE",
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE",
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "CustomerGroups"
        ],
        "summary": "DeleteCustomerGroup",
        "description": "Deletes a customer group as identified by the `group_id` value.",
        "operationId": "DeleteCustomerGroup",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the customer group to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomerGroupResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/customers/search": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "SearchCustomers",
        "description": "Searches the customer profiles associated with a Square account using a supported query filter.\n\nCalling `SearchCustomers` without any explicit query filter returns all\ncustomer profiles ordered alphabetically based on `given_name` and\n`family_name`.\n\nUnder normal operating conditions, newly created or updated customer profiles become available\nfor the search operation in well under 30 seconds. Occasionally, propagation of the new or updated\nprofiles can take closer to one minute or longer, especially during network incidents and outages.",
        "operationId": "SearchCustomers",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchCustomersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCustomersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/customers/segments": {
      "get": {
        "tags": [
          "CustomerSegments"
        ],
        "summary": "ListCustomerSegments",
        "description": "Retrieves the list of customer segments of a business.",
        "operationId": "ListCustomerSegments",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by previous calls to __ListCustomerSegments__.\nUsed to retrieve the next set of query results.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomerSegmentsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/customers/segments/{segment_id}": {
      "get": {
        "tags": [
          "CustomerSegments"
        ],
        "summary": "RetrieveCustomerSegment",
        "description": "Retrieves a specific customer segment as identified by the `segment_id` value.",
        "operationId": "RetrieveCustomerSegment",
        "parameters": [
          {
            "name": "segment_id",
            "in": "path",
            "description": "The Square-issued ID of the customer segment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCustomerSegmentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/customers/{customer_id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "RetrieveCustomer",
        "description": "Returns details for a single customer.",
        "operationId": "RetrieveCustomer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "UpdateCustomer",
        "description": "Updates the details of an existing customer. When two profiles are merged\ninto a single profile, that profile is assigned a new `customer_id`. You must use\nthe new `customer_id` to update merged profiles.\n\nYou cannot edit a customer's cards on file with this endpoint. To make changes\nto a card on file, you must delete the existing card on file with the\n[DeleteCustomerCard](#endpoint-Customers-deletecustomercard) endpoint, then create a new one with the\n[CreateCustomerCard](#endpoint-Customers-createcustomercard) endpoint.",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomer",
        "description": "Deletes a customer from a business, along with any linked cards on file. When two profiles\nare merged into a single profile, that profile is assigned a new `customer_id`. You must use the\nnew `customer_id` to delete merged profiles.",
        "operationId": "DeleteCustomer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/customers/{customer_id}/cards": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "CreateCustomerCard",
        "description": "Adds a card on file to an existing customer.\n\nAs with charges, calls to `CreateCustomerCard` are idempotent. Multiple\ncalls with the same card nonce return the same card record that was created\nwith the provided nonce during the _first_ call.",
        "operationId": "CreateCustomerCard",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Square ID of the customer profile the card is linked to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerCardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerCardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/customers/{customer_id}/cards/{card_id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "DeleteCustomerCard",
        "description": "Removes a card on file from a customer.",
        "operationId": "DeleteCustomerCard",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer that the card on file belongs to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The ID of the card on file to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomerCardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/customers/{customer_id}/groups/{group_id}": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "AddGroupToCustomer",
        "description": "Adds a group membership to a customer. \n\nThe customer is identified by the `customer_id` value \nand the customer group is identified by the `group_id` value.",
        "operationId": "AddGroupToCustomer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer to add to a group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the customer group to add the customer to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGroupToCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "RemoveGroupFromCustomer",
        "description": "Removes a group membership from a customer. \n\nThe customer is identified by the `customer_id` value \nand the customer group is identified by the `group_id` value.",
        "operationId": "RemoveGroupFromCustomer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The ID of the customer to remove from the group.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the customer group to remove the customer from.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveGroupFromCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/devices/codes": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "ListDeviceCodes",
        "description": "Lists all DeviceCodes associated with the merchant.",
        "operationId": "ListDeviceCodes",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "If specified, only returns DeviceCodes of the specified location.\nReturns DeviceCodes of all locations if empty.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_type",
            "in": "query",
            "description": "If specified, only returns DeviceCodes targeting the specified product type.\nReturns DeviceCodes of all product types if empty.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If specified, returns DeviceCodes with the specified statuses.\nReturns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDeviceCodesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "CreateDeviceCode",
        "description": "Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected\nterminal mode.",
        "operationId": "CreateDeviceCode",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeviceCodeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/devices/codes/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "GetDeviceCode",
        "description": "Retrieves DeviceCode with the associated ID.",
        "operationId": "GetDeviceCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the device code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceCodeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "DEVICE_CREDENTIAL_MANAGEMENT"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "DEVICE_CREDENTIAL_MANAGEMENT"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "ListDisputes",
        "description": "Returns a list of disputes associated with a particular account.",
        "operationId": "ListDisputes",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "states",
            "in": "query",
            "description": "The dispute states to filter the result.\nIf not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`,\nor `LOST`).",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "The ID of the location for which to return a list of disputes. If not specified, the endpoint returns\nall open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations.",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDisputesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes/{dispute_id}": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "RetrieveDispute",
        "description": "Returns details about a specific dispute.",
        "operationId": "RetrieveDispute",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute you want more details about.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDisputeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes/{dispute_id}/accept": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "AcceptDispute",
        "description": "Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and\nupdates the dispute state to ACCEPTED.\n\nSquare debits the disputed amount from the seller’s Square account. If the Square account\ndoes not have sufficient funds, Square debits the associated bank account.",
        "operationId": "AcceptDispute",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute you want to accept.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptDisputeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes/{dispute_id}/evidence": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "ListDisputeEvidence",
        "description": "Returns a list of evidence associated with a dispute.",
        "operationId": "ListDisputeEvidence",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDisputeEvidenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes/{dispute_id}/evidence/{evidence_id}": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "summary": "RetrieveDisputeEvidence",
        "description": "Returns the specific evidence metadata associated with a specific dispute.\n\nYou must maintain a copy of the evidence you upload if you want to reference it later. You cannot\ndownload the evidence after you upload it.",
        "operationId": "RetrieveDisputeEvidence",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute that you want to retrieve evidence from.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "evidence_id",
            "in": "path",
            "description": "The ID of the evidence to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDisputeEvidenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "delete": {
        "tags": [
          "Disputes"
        ],
        "summary": "RemoveDisputeEvidence",
        "description": "Removes specified evidence from a dispute.\n\nSquare does not send the bank any evidence that is removed. Also, you cannot remove evidence after\nsubmitting it to the bank using [SubmitEvidence](/reference/square/disputes-api/submit-evidence).",
        "operationId": "RemoveDisputeEvidence",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute you want to remove evidence from.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "evidence_id",
            "in": "path",
            "description": "The ID of the evidence you want to remove.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveDisputeEvidenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/disputes/{dispute_id}/evidence_text": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "CreateDisputeEvidenceText",
        "description": "Uploads text to use as evidence for a dispute challenge.",
        "operationId": "CreateDisputeEvidenceText",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute you want to upload evidence for.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDisputeEvidenceTextRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDisputeEvidenceTextResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/disputes/{dispute_id}/submit-evidence": {
      "post": {
        "tags": [
          "Disputes"
        ],
        "summary": "SubmitEvidence",
        "description": "Submits evidence to the cardholder's bank.\n\nBefore submitting evidence, Square compiles all available evidence. This includes evidence uploaded\nusing the [CreateDisputeEvidenceFile](/reference/square/disputes-api/create-dispute-evidence-file) and\n[CreateDisputeEvidenceText](/reference/square/disputes-api/create-dispute-evidence-text) endpoints and\nevidence automatically provided by Square, when available.",
        "operationId": "SubmitEvidence",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "The ID of the dispute that you want to submit evidence for.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitEvidenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "ListEmployees",
        "operationId": "ListEmployees",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "Specifies the EmployeeStatus to filter the employee by.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of employees to be returned on each page.",
            "schema": {
              "type": "integer",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The token required to retrieve the specified page of results.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEmployeesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "RetrieveEmployee",
        "operationId": "RetrieveEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the employee that was requested.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveEmployeeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/inventory/adjustment/{adjustment_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryAdjustment",
        "description": "Returns the [InventoryAdjustment](#type-inventoryadjustment) object\nwith the provided `adjustment_id`.",
        "operationId": "RetrieveInventoryAdjustment",
        "parameters": [
          {
            "name": "adjustment_id",
            "in": "path",
            "description": "ID of the `InventoryAdjustment` to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveInventoryAdjustmentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/inventory/batch-change": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchChangeInventory",
        "description": "Applies adjustments and counts to the provided item quantities.\n\nOn success: returns the current calculated counts for all objects\nreferenced in the request.\nOn failure: returns a list of related errors.",
        "operationId": "BatchChangeInventory",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchChangeInventoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchChangeInventoryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/inventory/batch-retrieve-changes": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryChanges",
        "description": "Returns historical physical counts and adjustments based on the\nprovided filter criteria.\n\nResults are paginated and sorted in ascending order according their\n`occurred_at` timestamp (oldest first).\n\nBatchRetrieveInventoryChanges is a catch-all query endpoint for queries\nthat cannot be handled by other, simpler endpoints.",
        "operationId": "BatchRetrieveInventoryChanges",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRetrieveInventoryChangesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRetrieveInventoryChangesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/inventory/batch-retrieve-counts": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchRetrieveInventoryCounts",
        "description": "Returns current counts for the provided\n[CatalogObject](#type-catalogobject)s at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`calculated_at` timestamp (newest first).\n\nWhen `updated_after` is specified, only counts that have changed since that\ntime (based on the server timestamp for the most recent change) are\nreturned. This allows clients to perform a \"sync\" operation, for example\nin response to receiving a Webhook notification.",
        "operationId": "BatchRetrieveInventoryCounts",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRetrieveInventoryCountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRetrieveInventoryCountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/inventory/physical-count/{physical_count_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryPhysicalCount",
        "description": "Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount)\nobject with the provided `physical_count_id`.",
        "operationId": "RetrieveInventoryPhysicalCount",
        "parameters": [
          {
            "name": "physical_count_id",
            "in": "path",
            "description": "ID of the\n`InventoryPhysicalCount` to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveInventoryPhysicalCountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/inventory/{catalog_object_id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryCount",
        "description": "Retrieves the current calculated stock count for a given\n[CatalogObject](#type-catalogobject) at a given set of\n[Location](#type-location)s. Responses are paginated and unsorted.\nFor more sophisticated queries, use a batch endpoint.",
        "operationId": "RetrieveInventoryCount",
        "parameters": [
          {
            "name": "catalog_object_id",
            "in": "path",
            "description": "ID of the `CatalogObject` to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_ids",
            "in": "query",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveInventoryCountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/inventory/{catalog_object_id}/changes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "RetrieveInventoryChanges",
        "description": "Returns a set of physical counts and inventory adjustments for the\nprovided [CatalogObject](#type-catalogobject) at the requested\n[Location](#type-location)s.\n\nResults are paginated and sorted in descending order according to their\n`occurred_at` timestamp (newest first).\n\nThere are no limits on how far back the caller can page. This endpoint can be \nused to display recent changes for a specific item. For more\nsophisticated queries, use a batch endpoint.",
        "operationId": "RetrieveInventoryChanges",
        "parameters": [
          {
            "name": "catalog_object_id",
            "in": "path",
            "description": "ID of the `CatalogObject` to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_ids",
            "in": "query",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveInventoryChangesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVENTORY_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "INVENTORY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "ListInvoices",
        "description": "Returns a list of invoices for a given location. The response \nis paginated. If truncated, the response includes a `cursor` that you    \nuse in a subsequent request to fetch the next set of invoices.",
        "operationId": "ListInvoices",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "description": "The ID of the location for which to list invoices.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices.",
            "schema": {
              "type": "integer",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInvoicesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "CreateInvoice",
        "description": "Creates a draft [invoice](#type-invoice) \nfor an order created using the Orders API.\n\nA draft invoice remains in your account and no action is taken. \nYou must publish the invoice before Square can process it (send it to the customer's email address or charge the customer’s card on file).",
        "operationId": "CreateInvoice",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/invoices/search": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "SearchInvoices",
        "description": "Searches for invoices from a location specified in \nthe filter. You can optionally specify customers in the filter for whom to \nretrieve invoices. In the current implementation, you can only specify one location and \noptionally one customer.\n\nThe response is paginated. If truncated, the response includes a `cursor` \nthat you use in a subsequent request to fetch the next set of invoices.",
        "operationId": "SearchInvoices",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchInvoicesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInvoicesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "GetInvoice",
        "description": "Retrieves an invoice by invoice ID.",
        "operationId": "GetInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The id of the invoice to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "INVOICES_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "INVOICES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "UpdateInvoice",
        "description": "Updates an invoice by modifying fields, clearing fields, or both. For most updates, you can use a sparse \n`Invoice` object to add fields or change values, and use the `fields_to_clear` field to specify fields to clear. \nHowever, some restrictions apply. For example, you cannot change the `order_id` or `location_id` field, and you \nmust provide the complete `custom_fields` list to update a custom field. Published invoices have additional restrictions.",
        "operationId": "UpdateInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the invoice to update.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "DeleteInvoice",
        "description": "Deletes the specified invoice. When an invoice is deleted, the \nassociated Order status changes to CANCELED. You can only delete a draft \ninvoice (you cannot delete a published invoice, including one that is scheduled for processing).",
        "operationId": "DeleteInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the invoice to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version of the `invoice` to delete.\nIf you do not know the version, you can call `GetInvoice` or \n`ListInvoices`.",
            "schema": {
              "type": "integer",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/invoices/{invoice_id}/cancel": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "CancelInvoice",
        "description": "Cancels an invoice. The seller cannot collect payments for \nthe canceled invoice.\n\nYou cannot cancel an invoice in the `DRAFT` state or in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`.",
        "operationId": "CancelInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the `invoice` to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/invoices/{invoice_id}/publish": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "PublishInvoice",
        "description": "Publishes the specified draft invoice. \n\nAfter an invoice is published, Square \nfollows up based on the invoice configuration. For example, Square \nsends the invoice to the customer's email address, charges the customer's card on file, or does \nnothing. Square also makes the invoice available on a Square-hosted invoice page. \n\nThe invoice `status` also changes from `DRAFT` to a status \nbased on the invoice configuration. For example, the status changes to `UNPAID` if \nSquare emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the \ninvoice amount).",
        "operationId": "PublishInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The id of the invoice to publish.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishInvoiceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/labor/break-types": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListBreakTypes",
        "description": "Returns a paginated list of `BreakType` instances for a business.",
        "operationId": "ListBreakTypes",
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "description": "Filter Break Types returned to only those that are associated with the\nspecified location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pointer to the next page of Break Type results to fetch.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBreakTypesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateBreakType",
        "description": "Creates a new `BreakType`.\n\nA `BreakType` is a template for creating `Break` objects.\nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `break_name`\n- `expected_duration`\n- `is_paid`\n\nYou can only have 3 `BreakType` instances per location. If you attempt to add a 4th\n`BreakType` for a location, an `INVALID_REQUEST_ERROR` \"Exceeded limit of 3 breaks per location.\"\nis returned.",
        "operationId": "CreateBreakType",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBreakTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBreakTypeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/labor/break-types/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetBreakType",
        "description": "Returns a single `BreakType` specified by id.",
        "operationId": "GetBreakType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `BreakType` being retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBreakTypeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateBreakType",
        "description": "Updates an existing `BreakType`.",
        "operationId": "UpdateBreakType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `BreakType` being updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBreakTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBreakTypeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteBreakType",
        "description": "Deletes an existing `BreakType`.\n\nA `BreakType` can be deleted even if it is referenced from a `Shift`.",
        "operationId": "DeleteBreakType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `BreakType` being deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBreakTypeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/employee-wages": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListEmployeeWages",
        "description": "Returns a paginated list of `EmployeeWage` instances for a business.",
        "operationId": "ListEmployeeWages",
        "parameters": [
          {
            "name": "employee_id",
            "in": "query",
            "description": "Filter wages returned to only those that are associated with the specified employee.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200.",
            "schema": {
              "type": "integer",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pointer to the next page of Employee Wage results to fetch.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEmployeeWagesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/employee-wages/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetEmployeeWage",
        "description": "Returns a single `EmployeeWage` specified by id.",
        "operationId": "GetEmployeeWage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `EmployeeWage` being retrieved.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEmployeeWageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/shifts": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "CreateShift",
        "description": "Creates a new `Shift`.\n\nA `Shift` represents a complete work day for a single employee.\nYou must provide the following values in your request to this\nendpoint:\n\n- `location_id`\n- `employee_id`\n- `start_at`\n\nAn attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:\n- The `status` of the new `Shift` is `OPEN` and the employee has another\nshift with an `OPEN` status.\n- The `start_at` date is in the future\n- the `start_at` or `end_at` overlaps another shift for the same employee\n- If `Break`s are set in the request, a break `start_at`\nmust not be before the `Shift.start_at`. A break `end_at` must not be after\nthe `Shift.end_at`",
        "operationId": "CreateShift",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShiftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateShiftResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/labor/shifts/search": {
      "post": {
        "tags": [
          "Labor"
        ],
        "summary": "SearchShifts",
        "description": "Returns a paginated list of `Shift` records for a business.\nThe list to be returned can be filtered by:\n- Location IDs **and**\n- employee IDs **and**\n- shift status (`OPEN`, `CLOSED`) **and**\n- shift start **and**\n- shift end **and**\n- work day details\n\nThe list can be sorted by:\n- `start_at`\n- `end_at`\n- `created_at`\n- `updated_at`",
        "operationId": "SearchShifts",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchShiftsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchShiftsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/labor/shifts/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetShift",
        "description": "Returns a single `Shift` specified by id.",
        "operationId": "GetShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `Shift` being retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShiftResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateShift",
        "description": "Updates an existing `Shift`.\n\nWhen adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have\nthe `end_at` property set to a valid RFC-3339 datetime string.\n\nWhen closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`\nset on each `Break`.",
        "operationId": "UpdateShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the object being updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShiftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateShiftResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE",
              "TIMECARDS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE",
          "TIMECARDS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Labor"
        ],
        "summary": "DeleteShift",
        "description": "Deletes a `Shift`.",
        "operationId": "DeleteShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `Shift` being deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteShiftResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/team-member-wages": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListTeamMemberWages",
        "description": "Returns a paginated list of `TeamMemberWage` instances for a business.",
        "operationId": "ListTeamMemberWages",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "query",
            "description": "Filter wages returned to only those that are associated with the\nspecified team member.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of Team Member Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pointer to the next page of Employee Wage results to fetch.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTeamMemberWagesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/team-member-wages/{id}": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "GetTeamMemberWage",
        "description": "Returns a single `TeamMemberWage` specified by id.",
        "operationId": "GetTeamMemberWage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `TeamMemberWage` being retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamMemberWageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/workweek-configs": {
      "get": {
        "tags": [
          "Labor"
        ],
        "summary": "ListWorkweekConfigs",
        "description": "Returns a list of `WorkweekConfig` instances for a business.",
        "operationId": "ListWorkweekConfigs",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of Workweek Configs to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pointer to the next page of Workweek Config results to fetch.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorkweekConfigsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/labor/workweek-configs/{id}": {
      "put": {
        "tags": [
          "Labor"
        ],
        "summary": "UpdateWorkweekConfig",
        "description": "Updates a `WorkweekConfig`.",
        "operationId": "UpdateWorkweekConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID for the `WorkweekConfig` object being updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkweekConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkweekConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_SETTINGS_WRITE",
              "TIMECARDS_SETTINGS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "TIMECARDS_SETTINGS_WRITE",
          "TIMECARDS_SETTINGS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "ListLocations",
        "description": "Provides information of all locations of a business.\n\nMany Square API endpoints require a `location_id` parameter.\nThe `id` field of the [`Location`](#type-location) objects returned by this\nendpoint correspond to that `location_id` parameter.",
        "operationId": "ListLocations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLocationsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "CreateLocation",
        "description": "Creates a location.",
        "operationId": "CreateLocation",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLocationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations/{location_id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "RetrieveLocation",
        "description": "Retrieves details of a location. You can specify \"main\" \nas the location ID to retrieve details of the \nmain location.",
        "operationId": "RetrieveLocation",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to retrieve. If you specify the string \"main\",\nthen the endpoint returns the main location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "UpdateLocation",
        "description": "Updates a location.",
        "operationId": "UpdateLocation",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to update.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateLocationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations/{location_id}/checkouts": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "CreateCheckout",
        "description": "Links a `checkoutId` to a `checkout_page_url` that customers are\ndirected to in order to provide their payment information using a\npayment processing workflow hosted on connect.squareup.com.",
        "operationId": "CreateCheckout",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the business location to associate the checkout with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckoutResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations/{location_id}/refunds": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListRefunds",
        "description": "Lists refunds for one of a business's locations.\n\nIn addition to full or partial tender refunds processed through Square APIs,\nrefunds may result from itemized returns or exchanges through Square's\nPoint of Sale applications.\n\nRefunds with a `status` of `PENDING` are not currently included in this\nendpoint's response.\n\nMax results per [page](#paginatingresults): 50",
        "operationId": "ListRefunds",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list refunds for.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRefundsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/locations/{location_id}/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "ListTransactions",
        "description": "Lists transactions for a particular location.\n\nTransactions include payment information from sales and exchanges and refund\ninformation from returns and exchanges.\n\nMax results per [page](#paginatingresults): 50",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to list transactions for.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "begin_time",
            "in": "query",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTransactionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Charge",
        "description": "Charges a card represented by a card nonce or a customer's card on file.\n\nYour request to this endpoint must include _either_:\n\n- A value for the `card_nonce` parameter (to charge a card nonce generated\nwith the `SqPaymentForm`)\n- Values for the `customer_card_id` and `customer_id` parameters (to charge\na customer's card on file)\n\nIn order for an eCommerce payment to potentially qualify for\n[Square chargeback protection](https://squareup.com/help/article/5394), you\n_must_ provide values for the following parameters in your request:\n\n- `buyer_email_address`\n- At least one of `billing_address` or `shipping_address`\n\nWhen this response is returned, the amount of Square's processing fee might not yet be\ncalculated. To obtain the processing fee, wait about ten seconds and call\n[RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`\nfield of each [Tender included](#type-tender) in the transaction.",
        "operationId": "Charge",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the location to associate the created transaction with.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "RetrieveTransaction",
        "description": "Retrieves details for a single transaction.",
        "operationId": "RetrieveTransaction",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the transaction's associated location.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The ID of the transaction to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTransactionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CaptureTransaction",
        "description": "Captures a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "operationId": "CaptureTransaction",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaptureTransactionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "CreateRefund",
        "description": "Initiates a refund for a previously charged tender.\n\nYou must issue a refund within 120 days of the associated payment. See\n[this article](https://squareup.com/help/us/en/article/5060) for more information\non refund behavior.\n\nNOTE: Card-present transactions with Interac credit cards **cannot be\nrefunded using the Connect API**. Interac transactions must refunded\nin-person (e.g., dipping the card using POS app).",
        "operationId": "CreateRefund",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the original transaction's associated location.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "The ID of the original transaction that includes the tender to refund.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefundRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "VoidTransaction",
        "description": "Cancels a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\n\nSee [Delayed capture transactions](/payments/transactions/overview#delayed-capture)\nfor more information.",
        "operationId": "VoidTransaction",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          },
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-deprecated": true
            },
            "x-is-deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoidTransactionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/loyalty/accounts": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CreateLoyaltyAccount",
        "description": "Creates a loyalty account.",
        "operationId": "CreateLoyaltyAccount",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoyaltyAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLoyaltyAccountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/accounts/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyAccounts",
        "description": "Searches for loyalty accounts in a loyalty program.  \n\nYou can search for a loyalty account using the phone number or customer ID associated with the account. To return all loyalty accounts, specify an empty `query` object or omit it entirely.  \n\nSearch results are sorted by `created_at` in ascending order.",
        "operationId": "SearchLoyaltyAccounts",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLoyaltyAccountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLoyaltyAccountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/accounts/{account_id}": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RetrieveLoyaltyAccount",
        "description": "Retrieves a loyalty account.",
        "operationId": "RetrieveLoyaltyAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The ID of the `loyalty account` to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLoyaltyAccountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/loyalty/accounts/{account_id}/accumulate": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "AccumulateLoyaltyPoints",
        "description": "Adds points to a loyalty account.\n\n- If you are using the Orders API to manage orders, you only provide the `order_id`. \nThe endpoint reads the order to compute points to add to the buyer's account.\n- If you are not using the Orders API to manage orders, \nyou first perform a client-side computation to compute the points.  \nFor spend-based and visit-based programs, you can call \n[CalculateLoyaltyPoints](#endpoint-Loyalty-CalculateLoyaltyPoints) to compute the points. For more information, \nsee [Loyalty Program Overview](/docs/loyalty/overview). \nYou then provide the points in a request to this endpoint.",
        "operationId": "AccumulateLoyaltyPoints",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The `loyalty account` ID to which to add the points.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccumulateLoyaltyPointsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccumulateLoyaltyPointsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/accounts/{account_id}/adjust": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "AdjustLoyaltyPoints",
        "description": "Adds points to or subtracts points from a buyer's account. \n\nUse this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call \n[AccumulateLoyaltyPoints](#endpoint-Loyalty-AccumulateLoyaltyPoints) \nto add points when a buyer pays for the purchase.",
        "operationId": "AdjustLoyaltyPoints",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The ID of the `loyalty account` in which to adjust the points.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustLoyaltyPointsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustLoyaltyPointsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/events/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyEvents",
        "description": "Searches for loyalty events.\n\nA Square loyalty program maintains a ledger of events that occur during the lifetime of a \nbuyer's loyalty account. Each change in the point balance \n(for example, points earned, points redeemed, and points expired) is \nrecorded in the ledger. Using this endpoint, you can search the ledger for events.",
        "operationId": "SearchLoyaltyEvents",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLoyaltyEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLoyaltyEventsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/programs": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "ListLoyaltyPrograms",
        "description": "Returns a list of loyalty programs in the seller's account.\nCurrently, a seller can only have one loyalty program.",
        "operationId": "ListLoyaltyPrograms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLoyaltyProgramsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/loyalty/programs/{program_id}/calculate": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CalculateLoyaltyPoints",
        "description": "Calculates the points a purchase earns.\n\n- If you are using the Orders API to manage orders, you provide `order_id` in the request. The \nendpoint calculates the points by reading the order.\n- If you are not using the Orders API to manage orders, you provide the purchase amount in \nthe request for the endpoint to calculate the points.\n\nAn application might call this endpoint to show the points that a buyer can earn with the \nspecific purchase.",
        "operationId": "CalculateLoyaltyPoints",
        "parameters": [
          {
            "name": "program_id",
            "in": "path",
            "description": "The `loyalty program` ID, which defines the rules for accruing points.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateLoyaltyPointsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateLoyaltyPointsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/rewards": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "CreateLoyaltyReward",
        "description": "Creates a loyalty reward. In the process, the endpoint does following:\n\n- Uses the `reward_tier_id` in the request to determine the number of points \nto lock for this reward. \n- If the request includes `order_id`, it adds the reward and related discount to the order. \n\nAfter a reward is created, the points are locked and \nnot available for the buyer to redeem another reward.",
        "operationId": "CreateLoyaltyReward",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoyaltyRewardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLoyaltyRewardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/rewards/search": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "SearchLoyaltyRewards",
        "description": "Searches for loyalty rewards in a loyalty account. \n\nIn the current implementation, the endpoint supports search by the reward `status`.\n\nIf you know a reward ID, use the \n[RetrieveLoyaltyReward](#endpoint-Loyalty-RetrieveLoyaltyReward) endpoint.",
        "operationId": "SearchLoyaltyRewards",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLoyaltyRewardsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLoyaltyRewardsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/loyalty/rewards/{reward_id}": {
      "get": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RetrieveLoyaltyReward",
        "description": "Retrieves a loyalty reward.",
        "operationId": "RetrieveLoyaltyReward",
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "description": "The ID of the `loyalty reward` to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLoyaltyRewardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "delete": {
        "tags": [
          "Loyalty"
        ],
        "summary": "DeleteLoyaltyReward",
        "description": "Deletes a loyalty reward by doing the following:\n\n- Returns the loyalty points back to the loyalty account.\n- If an order ID was specified when the reward was created \n(see [CreateLoyaltyReward](#endpoint-Loyalty-CreateLoyaltyReward)), \nit updates the order by removing the reward and related \ndiscounts.\n\nYou cannot delete a reward that has reached the terminal state (REDEEMED).",
        "operationId": "DeleteLoyaltyReward",
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "description": "The ID of the `loyalty reward` to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLoyaltyRewardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/loyalty/rewards/{reward_id}/redeem": {
      "post": {
        "tags": [
          "Loyalty"
        ],
        "summary": "RedeemLoyaltyReward",
        "description": "Redeems a loyalty reward.\n\nThe endpoint sets the reward to the `REDEEMED` terminal state. \n\nIf you are using your own order processing system (not using the \nOrders API), you call this endpoint after the buyer paid for the \npurchase.\n\nAfter the reward reaches the terminal state, it cannot be deleted. \nIn other words, points used for the reward cannot be returned \nto the account.",
        "operationId": "RedeemLoyaltyReward",
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "description": "The ID of the `loyalty reward` to redeem.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemLoyaltyRewardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemLoyaltyRewardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "LOYALTY_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "LOYALTY_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/merchants": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "ListMerchants",
        "description": "Returns `Merchant` information for a given access token.\n\nIf you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token.\nYou can specify your personal access token to get your own merchant information or specify an OAuth token\nto get the information for the  merchant that granted you access.\n\nIf you know the merchant ID, you can also use the [RetrieveMerchant](#endpoint-merchants-retrievemerchant)\nendpoint to get the merchant information.",
        "operationId": "ListMerchants",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "The cursor generated by the previous response.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMerchantsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/merchants/{merchant_id}": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "RetrieveMerchant",
        "description": "Retrieve a `Merchant` object for the given `merchant_id`.",
        "operationId": "RetrieveMerchant",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "description": "The ID of the merchant to retrieve. If the string \"me\" is supplied as the ID,\nthen retrieve the merchant that is currently accessible to this call.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMerchantResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateOrder",
        "description": "Creates a new [Order](#type-order) which can include information on products for\npurchase and settings to apply to the purchase.\n\nTo pay for a created order, please refer to the [Pay for Orders](/orders-api/pay-for-orders)\nguide.\n\nYou can modify open orders using the [UpdateOrder](#endpoint-orders-updateorder) endpoint.",
        "operationId": "CreateOrder",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/orders/batch-retrieve": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "BatchRetrieveOrders",
        "description": "Retrieves a set of [Order](#type-order)s by their IDs.\n\nIf a given Order ID does not exist, the ID is ignored instead of generating an error.",
        "operationId": "BatchRetrieveOrders",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRetrieveOrdersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRetrieveOrdersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/orders/calculate": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CalculateOrder",
        "description": "Calculates an [Order](#type-order).",
        "operationId": "CalculateOrder",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/orders/search": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SearchOrders",
        "description": "Search all orders for one or more locations. Orders include all sales,\nreturns, and exchanges regardless of how or when they entered the Square\nEcosystem (e.g. Point of Sale, Invoices, Connect APIs, etc).\n\nSearchOrders requests need to specify which locations to search and define a\n[`SearchOrdersQuery`](#type-searchordersquery) object which controls\nhow to sort or filter the results. Your SearchOrdersQuery can:\n\n  Set filter criteria.\n  Set sort order.\n  Determine whether to return results as complete Order objects, or as\n[OrderEntry](#type-orderentry) objects.\n\nNote that details for orders processed with Square Point of Sale while in\noffline mode may not be transmitted to Square for up to 72 hours. Offline\norders have a `created_at` value that reflects the time the order was created,\nnot the time it was subsequently transmitted to Square.",
        "operationId": "SearchOrders",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchOrdersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOrdersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/orders/{order_id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "RetrieveOrder",
        "description": "Retrieves an [Order](#type-order) by ID.",
        "operationId": "RetrieveOrder",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The ID of the order to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "ORDERS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateOrder",
        "description": "Updates an open [Order](#type-order) by adding, replacing, or deleting\nfields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated.\n\nAn UpdateOrder request requires the following:\n\n- The `order_id` in the endpoint path, identifying the order to update.\n- The latest `version` of the order to update.\n- The [sparse order](/orders-api/manage-orders#sparse-order-objects)\ncontaining only the fields to update and the version the update is\nbeing applied to.\n- If deleting fields, the [dot notation paths](/orders-api/manage-orders#on-dot-notation)\nidentifying fields to clear.\n\nTo pay for an order, please refer to the [Pay for Orders](/orders-api/pay-for-orders) guide.",
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The ID of the order to update.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/orders/{order_id}/pay": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "PayOrder",
        "description": "Pay for an [order](#type-order) using one or more approved [payments](#type-payment),\nor settle an order with a total of `0`.\n\nThe total of the `payment_ids` listed in the request must be equal to the order\ntotal. Orders with a total amount of `0` can be marked as paid by specifying an empty\narray of `payment_ids` in the request.\n\nTo be used with PayOrder, a payment must:\n\n- Reference the order by specifying the `order_id` when [creating the payment](#endpoint-payments-createpayment).\nAny approved payments that reference the same `order_id` not specified in the\n`payment_ids` will be canceled.\n- Be approved with [delayed capture](/payments-api/take-payments#delayed-capture).\nUsing a delayed capture payment with PayOrder will complete the approved payment.",
        "operationId": "PayOrder",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The ID of the order being paid.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayOrderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "ListPayments",
        "description": "Retrieves a list of payments taken by the account making the request.\n\nThe maximum results per page is 100.",
        "operationId": "ListPayments",
        "parameters": [
          {
            "name": "begin_time",
            "in": "query",
            "description": "The timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The timestamp for the end of the reporting period, in RFC 3339 format.\n\nDefault: The current time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "Limit results to the location supplied. By default, results are returned\nfor the default (main) location associated with the seller.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total",
            "in": "query",
            "description": "The exact amount in the `total_money` for a payment.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "last_4",
            "in": "query",
            "description": "The last four digits of a payment card.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "card_brand",
            "in": "query",
            "description": "The brand of the payment card (for example, VISA).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to be returned in a single page.\nIt is possible to receive fewer results than the specified limit on a given page.\n\nThe default value of 100 is also the maximum allowed value. If the provided value is \ngreater than 100, it is ignored and the default value is used instead.\n\nDefault: `100`",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CreatePayment",
        "description": "Creates a payment using the provided source. You can use this endpoint \nto charge a card (credit/debit card or    \nSquare gift card) or record a payment that the seller received outside of Square \n(cash payment from a buyer or a payment that an external entity \nprocesed on behalf of the seller).\n\nThe endpoint creates a \n`Payment` object and returns it in the response.",
        "operationId": "CreatePayment",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/payments/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CancelPaymentByIdempotencyKey",
        "description": "Cancels (voids) a payment identified by the idempotency key that is specified in the\nrequest.\n\nUse this method when the status of a `CreatePayment` request is unknown (for example, after you send a\n`CreatePayment` request, a network error occurs and you do not get a response). In this case, you can\ndirect Square to cancel the payment using this endpoint. In the request, you provide the same\nidempotency key that you provided in your `CreatePayment` request that you want to cancel. After\ncanceling the payment, you can submit your `CreatePayment` request again.\n\nNote that if no payment with the specified idempotency key is found, no action is taken and the endpoint\nreturns successfully.",
        "operationId": "CancelPaymentByIdempotencyKey",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentByIdempotencyKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPaymentByIdempotencyKeyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/payments/{payment_id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "GetPayment",
        "description": "Retrieves details for a specific payment.",
        "operationId": "GetPayment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "description": "A unique ID for the desired payment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "UpdatePayment",
        "description": "Updates a payment with the APPROVED status.\nYou can update the `amount_money` and `tip_money` using this endpoint.",
        "operationId": "UpdatePayment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "description": "The ID of the payment to update.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/payments/{payment_id}/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CancelPayment",
        "description": "Cancels (voids) a payment. You can use this endpoint to cancel a payment with \nthe APPROVED `status`.",
        "operationId": "CancelPayment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "description": "The ID of the payment to cancel.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/payments/{payment_id}/complete": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "CompletePayment",
        "description": "Completes (captures) a payment.\nBy default, payments are set to complete immediately after they are created.\n\nYou can use this endpoint to complete a payment with the APPROVED `status`.",
        "operationId": "CompletePayment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "description": "The unique ID identifying the payment to be completed.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/refunds": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "ListPaymentRefunds",
        "description": "Retrieves a list of refunds for the account making the request.\n\nThe maximum results per page is 100.",
        "operationId": "ListPaymentRefunds",
        "parameters": [
          {
            "name": "begin_time",
            "in": "query",
            "description": "The timestamp for the beginning of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time minus one year.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "The timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the seller.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "If provided, only refunds with the given status are returned.\nFor a list of refund status values, see `PaymentRefund`.\n\nDefault: If omitted, refunds are returned regardless of their status.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_type",
            "in": "query",
            "description": "If provided, only refunds with the given source type are returned.\n- `CARD` - List refunds only for payments where `CARD` was specified as the payment\nsource.\n\nDefault: If omitted, refunds are returned regardless of the source type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to be returned in a single page.\n\nIt is possible to receive fewer results than the specified limit on a given page.\n\nIf the supplied value is greater than 100, no more than 100 results are returned.\n\nDefault: 100",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPaymentRefundsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "post": {
        "tags": [
          "Refunds"
        ],
        "summary": "RefundPayment",
        "description": "Refunds a payment. You can refund the entire payment amount or a\nportion of it. You can use this endpoint to refund a card payment or record a \nrefund of a cash or external payment. For more information, see\n[Refund Payment](https://developer.squareup.com/docs/payments-api/refund-payments).",
        "operationId": "RefundPayment",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundPaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundPaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/refunds/{refund_id}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "GetPaymentRefund",
        "description": "Retrieves a specific refund using the `refund_id`.",
        "operationId": "GetPaymentRefund",
        "parameters": [
          {
            "name": "refund_id",
            "in": "path",
            "description": "The unique ID for the desired `PaymentRefund`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentRefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "CreateSubscription",
        "description": "Creates a subscription for a customer to a subscription plan.\n\nIf you provide a card on file in the request, Square charges the card for \nthe subscription. Otherwise, Square bills an invoice to the customer's email \naddress. The subscription starts immediately, unless the request includes \nthe optional `start_date`. Each individual subscription is associated with a particular location.",
        "operationId": "CreateSubscription",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ",
              "PAYMENTS_WRITE",
              "SUBSCRIPTIONS_WRITE",
              "ITEMS_READ",
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ",
          "PAYMENTS_WRITE",
          "SUBSCRIPTIONS_WRITE",
          "ITEMS_READ",
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/subscriptions/search": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "SearchSubscriptions",
        "description": "Searches for subscriptions. \nResults are ordered chronologically by subscription creation date. If\nthe request specifies more than one location ID, \nthe endpoint orders the result \nby location ID, and then by creation date within each location. If no locations are given\nin the query, all locations are searched.\n\nYou can also optionally specify `customer_ids` to search by customer. \nIf left unset, all customers \nassociated with the specified locations are returned. \nIf the request specifies customer IDs, the endpoint orders results \nfirst by location, within location by customer ID, and within \ncustomer by subscription creation date.\n\nFor more information, see \n[Retrieve subscriptions](/docs/subscriptions-api/overview#retrieve-subscriptions).",
        "operationId": "SearchSubscriptions",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSubscriptionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSubscriptionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "RetrieveSubscription",
        "description": "Retrieves a subscription.",
        "operationId": "RetrieveSubscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "The ID of the subscription to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "UpdateSubscription",
        "description": "Updates a subscription. You can set, modify, and clear the \n`subscription` field values.",
        "operationId": "UpdateSubscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "The ID for the subscription to update.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ",
              "PAYMENTS_WRITE",
              "SUBSCRIPTIONS_WRITE",
              "ITEMS_READ",
              "ORDERS_WRITE",
              "INVOICES_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "CUSTOMERS_READ",
          "PAYMENTS_WRITE",
          "SUBSCRIPTIONS_WRITE",
          "ITEMS_READ",
          "ORDERS_WRITE",
          "INVOICES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/subscriptions/{subscription_id}/cancel": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "CancelSubscription",
        "description": "Sets the `canceled_date` field to the end of the active billing period.\nAfter this date, the status changes from ACTIVE to CANCELED.",
        "operationId": "CancelSubscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "The ID of the subscription to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_WRITE"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/subscriptions/{subscription_id}/events": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "ListSubscriptionEvents",
        "description": "Lists all events for a specific subscription.\nIn the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned.",
        "operationId": "ListSubscriptionEvents",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "The ID of the subscription to retrieve the events for.",
            "required": true,
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).",
            "schema": {
              "type": "string",
              "x-is-beta": true
            },
            "x-is-beta": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The upper limit on the number of subscription events to return \nin the response. \n\nDefault: `200`",
            "schema": {
              "type": "integer",
              "x-is-beta": true
            },
            "x-is-beta": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubscriptionEventsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SUBSCRIPTIONS_READ"
            ]
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true,
        "x-oauthpermissions": [
          "SUBSCRIPTIONS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/team-members": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "CreateTeamMember",
        "description": "Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates.\nYou must provide the following values in your request to this endpoint:\n- `given_name`\n- `family_name`\n\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#createteammember).",
        "operationId": "CreateTeamMember",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTeamMemberResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/team-members/bulk-create": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "BulkCreateTeamMembers",
        "description": "Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates.\nThis process is non-transactional and will process as much of the request as is possible. If one of the creates in\nthe request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response\nwill contain explicit error information for this particular create.\n\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkcreateteammembers).",
        "operationId": "BulkCreateTeamMembers",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateTeamMembersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkCreateTeamMembersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/team-members/bulk-update": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "BulkUpdateTeamMembers",
        "description": "Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates.\nThis process is non-transactional and will process as much of the request as is possible. If one of the updates in\nthe request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response\nwill contain explicit error information for this particular update.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#bulkupdateteammembers).",
        "operationId": "BulkUpdateTeamMembers",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateTeamMembersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateTeamMembersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/team-members/search": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "SearchTeamMembers",
        "description": "Returns a paginated list of `TeamMember` objects for a business.\nThe list to be returned can be filtered by:\n- location IDs **and**\n- `status`",
        "operationId": "SearchTeamMembers",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTeamMembersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTeamMembersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/team-members/{team_member_id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "RetrieveTeamMember",
        "description": "Retrieve a `TeamMember` object for the given `TeamMember.id`.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrieveteammember).",
        "operationId": "RetrieveTeamMember",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "description": "The ID of the team member to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTeamMemberResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "UpdateTeamMember",
        "description": "Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updateteammember).",
        "operationId": "UpdateTeamMember",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "description": "The ID of the team member to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTeamMemberResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/team-members/{team_member_id}/wage-setting": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "RetrieveWageSetting",
        "description": "Retrieve a `WageSetting` object for a team member specified\nby `TeamMember.id`.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#retrievewagesetting).",
        "operationId": "RetrieveWageSetting",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "description": "The ID of the team member to retrieve wage setting for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveWageSettingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_READ"
        ],
        "x-sq-version": "2021-03-17"
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "UpdateWageSetting",
        "description": "Creates or updates a `WageSetting` object. The object is created if a\n`WageSetting` with the specified `team_member_id` does not exist. Otherwise,\nit fully replaces the `WageSetting` object for the team member.\nThe `WageSetting` will be returned upon successful update.\nLearn about [Troubleshooting the Teams API](/docs/team/troubleshooting#updatewagesetting).",
        "operationId": "UpdateWageSetting",
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "description": "The ID of the team member to update the `WageSetting` object for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWageSettingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWageSettingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "EMPLOYEES_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/terminals/checkouts": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CreateTerminalCheckout",
        "description": "Creates a Terminal checkout request and sends it to the specified device to take a payment\nfor the requested amount.",
        "operationId": "CreateTerminalCheckout",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTerminalCheckoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTerminalCheckoutResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/terminals/checkouts/search": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "SearchTerminalCheckouts",
        "description": "Retrieves a filtered list of Terminal checkout requests created by the account making the request.",
        "operationId": "SearchTerminalCheckouts",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTerminalCheckoutsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTerminalCheckoutsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/terminals/checkouts/{checkout_id}": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "GetTerminalCheckout",
        "description": "Retrieves a Terminal checkout request by `checkout_id`.",
        "operationId": "GetTerminalCheckout",
        "parameters": [
          {
            "name": "checkout_id",
            "in": "path",
            "description": "The unique ID for the desired `TerminalCheckout`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTerminalCheckoutResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/terminals/checkouts/{checkout_id}/cancel": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CancelTerminalCheckout",
        "description": "Cancels a Terminal checkout request if the status of the request permits it.",
        "operationId": "CancelTerminalCheckout",
        "parameters": [
          {
            "name": "checkout_id",
            "in": "path",
            "description": "The unique ID for the desired `TerminalCheckout`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTerminalCheckoutResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/terminals/refunds": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CreateTerminalRefund",
        "description": "Creates a request to refund an Interac payment completed on a Square Terminal.",
        "operationId": "CreateTerminalRefund",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTerminalRefundRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTerminalRefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/terminals/refunds/search": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "SearchTerminalRefunds",
        "description": "Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request.",
        "operationId": "SearchTerminalRefunds",
        "requestBody": {
          "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTerminalRefundsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTerminalRefundsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17",
        "x-codegen-request-body-name": "body"
      }
    },
    "/v2/terminals/refunds/{terminal_refund_id}": {
      "get": {
        "tags": [
          "Terminal"
        ],
        "summary": "GetTerminalRefund",
        "description": "Retrieves an Interac Terminal refund object by ID.",
        "operationId": "GetTerminalRefund",
        "parameters": [
          {
            "name": "terminal_refund_id",
            "in": "path",
            "description": "The unique ID for the desired `TerminalRefund`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTerminalRefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ],
        "x-sq-version": "2021-03-17"
      }
    },
    "/v2/terminals/refunds/{terminal_refund_id}/cancel": {
      "post": {
        "tags": [
          "Terminal"
        ],
        "summary": "CancelTerminalRefund",
        "description": "Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it.",
        "operationId": "CancelTerminalRefund",
        "parameters": [
          {
            "name": "terminal_refund_id",
            "in": "path",
            "description": "The unique ID for the desired `TerminalRefund`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTerminalRefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "x-release-status": "PUBLIC",
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ],
        "x-sq-version": "2021-03-17"
      }
    }
  },
  "components": {
    "schemas": {
      "ActionCancelReason": {
        "type": "string",
        "description": "",
        "enum": [
          "BUYER_CANCELED",
          "SELLER_CANCELED",
          "TIMED_OUT"
        ],
        "x-enum-elements": [
          {
            "name": "BUYER_CANCELED",
            "description": "A person canceled the `TerminalCheckout` from a Square device."
          },
          {
            "name": "SELLER_CANCELED",
            "description": "A client canceled the `TerminalCheckout` using the API."
          },
          {
            "name": "TIMED_OUT",
            "description": "The `TerminalCheckout` timed out (see `deadline_duration` on the `TerminalCheckout`)."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "BankAccountStatus": {
        "type": "string",
        "description": "Indicates the current verification status of a `BankAccount` object.",
        "enum": [
          "VERIFICATION_IN_PROGRESS",
          "VERIFIED",
          "DISABLED"
        ],
        "x-enum-elements": [
          {
            "name": "VERIFICATION_IN_PROGRESS",
            "description": "Indicates that the verification process has started. Some features\n(for example, creditable or debitable) may be provisionally enabled on the bank\naccount."
          },
          {
            "name": "VERIFIED",
            "description": "Indicates that the bank account was successfully verified."
          },
          {
            "name": "DISABLED",
            "description": "Indicates that the bank account is disabled and is permanently unusable\nfor funds transfer. A bank account can be disabled because of a failed verification\nattempt or a failed deposit attempt."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "BankAccountType": {
        "type": "string",
        "description": "Indicates the financial purpose of the bank account.",
        "enum": [
          "CHECKING",
          "SAVINGS",
          "INVESTMENT",
          "OTHER",
          "BUSINESS_CHECKING"
        ],
        "x-enum-elements": [
          {
            "name": "CHECKING",
            "description": "An account at a financial institution against which checks can be\ndrawn by the account depositor."
          },
          {
            "name": "SAVINGS",
            "description": "An account at a financial institution that pays interest but cannot be\nused directly as money in the narrow sense of a medium of exchange."
          },
          {
            "name": "INVESTMENT",
            "description": "An account at a financial institution that contains a deposit of funds\nand/or securities."
          },
          {
            "name": "OTHER",
            "description": "An account at a financial institution which cannot be described by the\nother types."
          },
          {
            "name": "BUSINESS_CHECKING",
            "description": "An account at a financial institution against which checks can be\ndrawn specifically for business purposes (non-personal use)."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "BookingStatus": {
        "type": "string",
        "description": "Supported booking statuses.",
        "enum": [
          "PENDING",
          "CANCELLED_BY_CUSTOMER",
          "CANCELLED_BY_SELLER",
          "DECLINED",
          "ACCEPTED",
          "NO_SHOW"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "An unaccepted booking. It is visible to both sellers and customers."
          },
          {
            "name": "CANCELLED_BY_CUSTOMER",
            "description": "A customer-cancelled booking. It is visible to both the seller and the customer."
          },
          {
            "name": "CANCELLED_BY_SELLER",
            "description": "A seller-cancelled booking. It is visible to both the seller and the customer."
          },
          {
            "name": "DECLINED",
            "description": "A declined booking. It had once been pending, but was then declined by the seller."
          },
          {
            "name": "ACCEPTED",
            "description": "An accepted booking agreed to or accepted by the seller."
          },
          {
            "name": "NO_SHOW",
            "description": "A no-show booking. The booking was accepted at one time, but have now been marked as a no-show by\nthe seller because the client either missed the booking or cancelled it without enough notice."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessAppointmentSettingsAlignmentTime": {
        "type": "string",
        "description": "Time units of a service duration for bookings.",
        "enum": [
          "SERVICE_DURATION",
          "QUARTER_HOURLY",
          "HALF_HOURLY",
          "HOURLY"
        ],
        "x-enum-elements": [
          {
            "name": "SERVICE_DURATION",
            "description": "The service duration unit is one visit of a fixed time interval specified by the seller."
          },
          {
            "name": "QUARTER_HOURLY",
            "description": "The service duration unit is a 15-minute interval. Bookings can be scheduled every quarter hour."
          },
          {
            "name": "HALF_HOURLY",
            "description": "The service duration unit is a 30-minute interval. Bookings can be scheduled every half hour."
          },
          {
            "name": "HOURLY",
            "description": "The service duration unit is a 60-minute interval. Bookings can be scheduled every hour."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessAppointmentSettingsBookingLocationType": {
        "type": "string",
        "description": "Types of location where service is provided.",
        "enum": [
          "BUSINESS_LOCATION",
          "CUSTOMER_LOCATION",
          "PHONE"
        ],
        "x-enum-elements": [
          {
            "name": "BUSINESS_LOCATION",
            "description": "The service is provided at a seller location."
          },
          {
            "name": "CUSTOMER_LOCATION",
            "description": "The service is provided at a customer location."
          },
          {
            "name": "PHONE",
            "description": "The service is provided over the phone."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessAppointmentSettingsCancellationPolicy": {
        "type": "string",
        "description": "The category of the seller’s cancellation policy.",
        "enum": [
          "CANCELLATION_TREATED_AS_NO_SHOW",
          "CUSTOM_POLICY"
        ],
        "x-enum-elements": [
          {
            "name": "CANCELLATION_TREATED_AS_NO_SHOW",
            "description": "Cancellations are treated as no shows and may incur a fee as specified by `cancellation_fee_money`."
          },
          {
            "name": "CUSTOM_POLICY",
            "description": "Cancellations follow the seller-specified policy that is described in free-form text and not enforced automatically by Square."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType": {
        "type": "string",
        "description": "Types of daily appointment limits.",
        "enum": [
          "PER_TEAM_MEMBER",
          "PER_LOCATION"
        ],
        "x-enum-elements": [
          {
            "name": "PER_TEAM_MEMBER",
            "description": "The maximum number of daily appointments is set on a per team member basis."
          },
          {
            "name": "PER_LOCATION",
            "description": "The maximum number of daily appointments is set on a per location basis."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessBookingProfileBookingPolicy": {
        "type": "string",
        "description": "Policies for accepting bookings.",
        "enum": [
          "ACCEPT_ALL",
          "REQUIRES_ACCEPTANCE"
        ],
        "x-enum-elements": [
          {
            "name": "ACCEPT_ALL",
            "description": "The seller accepts all booking requests automatically."
          },
          {
            "name": "REQUIRES_ACCEPTANCE",
            "description": "The seller must accept requests to complete bookings."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessBookingProfileCustomerTimezoneChoice": {
        "type": "string",
        "description": "Choices of customer-facing time zone used for bookings.",
        "enum": [
          "BUSINESS_LOCATION_TIMEZONE",
          "CUSTOMER_CHOICE"
        ],
        "x-enum-elements": [
          {
            "name": "BUSINESS_LOCATION_TIMEZONE",
            "description": "Use the time zone of the business location for bookings."
          },
          {
            "name": "CUSTOMER_CHOICE",
            "description": "Use the customer-chosen time zone for bookings."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CardBrand": {
        "type": "string",
        "description": "Indicates a card's brand, such as `VISA` or `MASTERCARD`.",
        "enum": [
          "OTHER_BRAND",
          "VISA",
          "MASTERCARD",
          "AMERICAN_EXPRESS",
          "DISCOVER",
          "DISCOVER_DINERS",
          "JCB",
          "CHINA_UNIONPAY",
          "SQUARE_GIFT_CARD",
          "SQUARE_CAPITAL_CARD",
          "INTERAC",
          "EFTPOS",
          "FELICA"
        ],
        "x-enum-elements": [
          {
            "name": "OTHER_BRAND",
            "description": ""
          },
          {
            "name": "VISA",
            "description": ""
          },
          {
            "name": "MASTERCARD",
            "description": ""
          },
          {
            "name": "AMERICAN_EXPRESS",
            "description": ""
          },
          {
            "name": "DISCOVER",
            "description": ""
          },
          {
            "name": "DISCOVER_DINERS",
            "description": ""
          },
          {
            "name": "JCB",
            "description": ""
          },
          {
            "name": "CHINA_UNIONPAY",
            "description": ""
          },
          {
            "name": "SQUARE_GIFT_CARD",
            "description": ""
          },
          {
            "name": "SQUARE_CAPITAL_CARD",
            "description": ""
          },
          {
            "name": "INTERAC",
            "description": ""
          },
          {
            "name": "EFTPOS",
            "description": ""
          },
          {
            "name": "FELICA",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CardPrepaidType": {
        "type": "string",
        "description": "Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.",
        "enum": [
          "UNKNOWN_PREPAID_TYPE",
          "NOT_PREPAID",
          "PREPAID"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_PREPAID_TYPE",
            "description": ""
          },
          {
            "name": "NOT_PREPAID",
            "description": ""
          },
          {
            "name": "PREPAID",
            "description": ""
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CardSquareProduct": {
        "type": "string",
        "description": "",
        "enum": [
          "UNKNOWN_SQUARE_PRODUCT",
          "CONNECT_API",
          "DASHBOARD",
          "REGISTER_CLIENT",
          "BUYER_DASHBOARD",
          "WEB",
          "INVOICES",
          "GIFT_CARD",
          "VIRTUAL_TERMINAL",
          "READER_SDK"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_SQUARE_PRODUCT",
            "description": ""
          },
          {
            "name": "CONNECT_API",
            "description": ""
          },
          {
            "name": "DASHBOARD",
            "description": ""
          },
          {
            "name": "REGISTER_CLIENT",
            "description": ""
          },
          {
            "name": "BUYER_DASHBOARD",
            "description": ""
          },
          {
            "name": "WEB",
            "description": ""
          },
          {
            "name": "INVOICES",
            "description": ""
          },
          {
            "name": "GIFT_CARD",
            "description": ""
          },
          {
            "name": "VIRTUAL_TERMINAL",
            "description": ""
          },
          {
            "name": "READER_SDK",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CardType": {
        "type": "string",
        "description": "Indicates a card's type, such as `CREDIT` or `DEBIT`.",
        "enum": [
          "UNKNOWN_CARD_TYPE",
          "CREDIT",
          "DEBIT"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_CARD_TYPE",
            "description": ""
          },
          {
            "name": "CREDIT",
            "description": ""
          },
          {
            "name": "DEBIT",
            "description": ""
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CashDrawerEventType": {
        "type": "string",
        "description": "The types of events on a CashDrawerShift.\nEach event type represents an employee action on the actual cash drawer\nrepresented by a CashDrawerShift.",
        "enum": [
          "NO_SALE",
          "CASH_TENDER_PAYMENT",
          "OTHER_TENDER_PAYMENT",
          "CASH_TENDER_CANCELLED_PAYMENT",
          "OTHER_TENDER_CANCELLED_PAYMENT",
          "CASH_TENDER_REFUND",
          "OTHER_TENDER_REFUND",
          "PAID_IN",
          "PAID_OUT"
        ],
        "x-enum-elements": [
          {
            "name": "NO_SALE",
            "description": "Triggered when a no sale occurs on a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount."
          },
          {
            "name": "CASH_TENDER_PAYMENT",
            "description": "Triggered when a cash tender payment occurs on a cash drawer.\nA CashDrawerEvent of this type can must not have a negative amount."
          },
          {
            "name": "OTHER_TENDER_PAYMENT",
            "description": "Triggered when a check, gift card, or other non-cash payment occurs\non a cash drawer.\nA CashDrawerEvent of this type must have a zero money amount."
          },
          {
            "name": "CASH_TENDER_CANCELLED_PAYMENT",
            "description": "Triggered when a split tender bill is cancelled after cash has been\ntendered.\nA CASH_TENDER_CANCELLED_PAYMENT should have a corresponding CASH_TENDER_PAYMENT.\nA CashDrawerEvent of this type must not have a negative amount."
          },
          {
            "name": "OTHER_TENDER_CANCELLED_PAYMENT",
            "description": "Triggered when a split tender bill is cancelled after a non-cash tender\nhas been tendered. An OTHER_TENDER_CANCELLED_PAYMENT should have a corresponding\nOTHER_TENDER_PAYMENT. A CashDrawerEvent of this type must have a zero money\namount."
          },
          {
            "name": "CASH_TENDER_REFUND",
            "description": "Triggered when a cash tender refund occurs.\nA CashDrawerEvent of this type must not have a negative amount."
          },
          {
            "name": "OTHER_TENDER_REFUND",
            "description": "Triggered when an other tender refund occurs.\nA CashDrawerEvent of this type must have a zero money amount."
          },
          {
            "name": "PAID_IN",
            "description": "Triggered when money unrelated to a payment is added to the cash drawer.\nFor example, an employee adds coins to the drawer.\nA CashDrawerEvent of this type must not have a negative amount."
          },
          {
            "name": "PAID_OUT",
            "description": "Triggered when money is removed from the drawer for other reasons\nthan making change.\nFor example, an employee pays a delivery person with cash from the cash drawer.\nA CashDrawerEvent of this type must not have a negative amount."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CashDrawerShiftState": {
        "type": "string",
        "description": "The current state of a cash drawer shift.",
        "enum": [
          "OPEN",
          "ENDED",
          "CLOSED"
        ],
        "x-enum-elements": [
          {
            "name": "OPEN",
            "description": "An open cash drawer shift."
          },
          {
            "name": "ENDED",
            "description": "A cash drawer shift that is ended but has not yet had an employee content audit."
          },
          {
            "name": "CLOSED",
            "description": "An ended cash drawer shift that is closed with a completed employee\ncontent audit and recorded result."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogCustomAttributeDefinitionAppVisibility": {
        "type": "string",
        "description": "Defines the visibility of a custom attribute to applications other than their\ncreating application.",
        "enum": [
          "APP_VISIBILITY_HIDDEN",
          "APP_VISIBILITY_READ_ONLY",
          "APP_VISIBILITY_READ_WRITE_VALUES"
        ],
        "x-enum-elements": [
          {
            "name": "APP_VISIBILITY_HIDDEN",
            "description": "Other applications cannot read this custom attribute."
          },
          {
            "name": "APP_VISIBILITY_READ_ONLY",
            "description": "Other applications can read this custom attribute definition and\nvalues."
          },
          {
            "name": "APP_VISIBILITY_READ_WRITE_VALUES",
            "description": "Other applications can read and write custom attribute values on objects.\nThey can read but cannot edit the custom attribute definition."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionSellerVisibility": {
        "type": "string",
        "description": "Defines the visibility of a custom attribute to sellers in Square\nclient applications, Square APIs or in Square UIs (including Square Point\nof Sale applications and Square Dashboard).",
        "enum": [
          "SELLER_VISIBILITY_HIDDEN",
          "SELLER_VISIBILITY_READ_WRITE_VALUES"
        ],
        "x-enum-elements": [
          {
            "name": "SELLER_VISIBILITY_HIDDEN",
            "description": "Sellers cannot read this custom attribute in Square client\napplications or Square APIs."
          },
          {
            "name": "SELLER_VISIBILITY_READ_WRITE_VALUES",
            "description": "Sellers can read and write this custom attribute value in catalog objects,\nbut cannot edit the custom attribute definition."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionType": {
        "type": "string",
        "description": "Defines the possible types for a custom attribute.",
        "enum": [
          "STRING",
          "BOOLEAN",
          "NUMBER",
          "SELECTION"
        ],
        "x-enum-elements": [
          {
            "name": "STRING",
            "description": "A free-form string containing up to 255 characters."
          },
          {
            "name": "BOOLEAN",
            "description": "A `true` or `false` value."
          },
          {
            "name": "NUMBER",
            "description": "A decimal string representation of a number. Can support up to 5 digits after the decimal point."
          },
          {
            "name": "SELECTION",
            "description": "One or more choices from `allowed_selections`."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogDiscountModifyTaxBasis": {
        "type": "string",
        "description": "",
        "enum": [
          "MODIFY_TAX_BASIS",
          "DO_NOT_MODIFY_TAX_BASIS"
        ],
        "x-enum-elements": [
          {
            "name": "MODIFY_TAX_BASIS",
            "description": "Application of the discount will modify the tax basis."
          },
          {
            "name": "DO_NOT_MODIFY_TAX_BASIS",
            "description": "Application of the discount will not modify the tax basis."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogDiscountType": {
        "type": "string",
        "description": "How to apply a CatalogDiscount to a CatalogItem.",
        "enum": [
          "FIXED_PERCENTAGE",
          "FIXED_AMOUNT",
          "VARIABLE_PERCENTAGE",
          "VARIABLE_AMOUNT"
        ],
        "x-enum-elements": [
          {
            "name": "FIXED_PERCENTAGE",
            "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
          },
          {
            "name": "FIXED_AMOUNT",
            "description": "Apply the discount as a fixed amount (e.g., $1.00) off the item price."
          },
          {
            "name": "VARIABLE_PERCENTAGE",
            "description": "Apply the discount as a variable percentage off the item price. The percentage will be specified at the time of sale."
          },
          {
            "name": "VARIABLE_AMOUNT",
            "description": "Apply the discount as a variable amount off the item price. The amount will be specified at the time of sale."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogItemProductType": {
        "type": "string",
        "description": "The type of a CatalogItem. Connect V2 only allows the creation of `REGULAR` or `APPOINTMENTS_SERVICE` items.",
        "enum": [
          "REGULAR",
          "GIFT_CARD",
          "APPOINTMENTS_SERVICE"
        ],
        "x-enum-elements": [
          {
            "name": "REGULAR",
            "description": "An ordinary item."
          },
          {
            "name": "GIFT_CARD",
            "description": "A Square gift card."
          },
          {
            "name": "APPOINTMENTS_SERVICE",
            "description": "A service that can be booked using the Square Appointments app."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogModifierListSelectionType": {
        "type": "string",
        "description": "Indicates whether a CatalogModifierList supports multiple selections.",
        "enum": [
          "SINGLE",
          "MULTIPLE"
        ],
        "x-enum-elements": [
          {
            "name": "SINGLE",
            "description": "Indicates that a CatalogModifierList allows only a\nsingle CatalogModifier to be selected."
          },
          {
            "name": "MULTIPLE",
            "description": "Indicates that a CatalogModifierList allows multiple\nCatalogModifier to be selected."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogObjectType": {
        "type": "string",
        "description": "Possible types of CatalogObjects returned from the Catalog, each\ncontaining type-specific properties in the `*_data` field corresponding to the object type.",
        "enum": [
          "ITEM",
          "IMAGE",
          "CATEGORY",
          "ITEM_VARIATION",
          "TAX",
          "DISCOUNT",
          "MODIFIER_LIST",
          "MODIFIER",
          "PRICING_RULE",
          "PRODUCT_SET",
          "TIME_PERIOD",
          "MEASUREMENT_UNIT",
          "SUBSCRIPTION_PLAN",
          "ITEM_OPTION",
          "ITEM_OPTION_VAL",
          "CUSTOM_ATTRIBUTE_DEFINITION",
          "QUICK_AMOUNTS_SETTINGS"
        ],
        "x-enum-elements": [
          {
            "name": "ITEM",
            "description": "An item, corresponding to `CatalogItem`. The item-specific data\nwill be stored in the `item_data` field."
          },
          {
            "name": "IMAGE",
            "description": "An image, corresponding to `CatalogImage`. The image-specific data\nwill be stored in the `image_data` field."
          },
          {
            "name": "CATEGORY",
            "description": "A category, corresponding to `CatalogCategory`. The category-specific data\nwill be stored in the `category_data` field."
          },
          {
            "name": "ITEM_VARIATION",
            "description": "An item variation, corresponding to `CatalogItemVariation`. The\nitem variation-specific data will be stored in the `item_variation_data` field."
          },
          {
            "name": "TAX",
            "description": "A tax, corresponding to `CatalogTax`. The tax-specific data\nwill be stored in the `tax_data` field."
          },
          {
            "name": "DISCOUNT",
            "description": "A discount, corresponding to `CatalogDiscount`. The discount-specific data\nwill be stored in the `discount_data` field."
          },
          {
            "name": "MODIFIER_LIST",
            "description": "A modifier list, corresponding to `CatalogModifierList`.\nThe modifier list-specific data will be stored in the `modifier_list_data` field."
          },
          {
            "name": "MODIFIER",
            "description": "A modifier, corresponding to `CatalogModifier`. The modifier-specific data\nwill be stored in the `modifier_data` field."
          },
          {
            "name": "PRICING_RULE",
            "description": "A pricing rule, corresponding to `CatalogPricingRule`. The pricing-rule-specific data\nwill be stored in the `pricing_rule_data` field."
          },
          {
            "name": "PRODUCT_SET",
            "description": "A product set, corresponding to `CatalogProductSet`.\nThe product-set-specific data will be stored in the `product_set_data` field."
          },
          {
            "name": "TIME_PERIOD",
            "description": "A time period, corresponding to `CatalogTimePeriod`.\nThe time-period-specific data will be stored in the `time_period_data` field."
          },
          {
            "name": "MEASUREMENT_UNIT",
            "description": "A measurement unit, corresponding to `CatalogMeasurementUnit`. The unit of\nmeasure and precision in which an item variation should be sold."
          },
          {
            "name": "SUBSCRIPTION_PLAN",
            "description": "A subscription plan, corresponding to\n`CatalogSubscriptionPlan`.\n\nThe subscription plan data is stored in the `subscription_plan_data` field of the\n`CatalogObject`."
          },
          {
            "name": "ITEM_OPTION",
            "description": "Represents a list of item option values that can be assigned to item\nvariations. For example, a color option or size option for a t-shirt."
          },
          {
            "name": "ITEM_OPTION_VAL",
            "description": "Represents an option value associated with one or more item options.\nFor example, an item option of \"Size\" may have item option values such as\n\"Small\" or \"Medium\"."
          },
          {
            "name": "CUSTOM_ATTRIBUTE_DEFINITION",
            "description": "Represents the definition of a custom attribute"
          },
          {
            "name": "QUICK_AMOUNTS_SETTINGS",
            "description": "Represents a set of Quick Amounts and their settings at each location.\nFor example, a location may have a list of both AUTO and MANUAL quick amounts that are set to DISABLED."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogPricingType": {
        "type": "string",
        "description": "Indicates whether the price of a CatalogItemVariation should be entered manually at the time of sale.",
        "enum": [
          "FIXED_PRICING",
          "VARIABLE_PRICING"
        ],
        "x-enum-elements": [
          {
            "name": "FIXED_PRICING",
            "description": "The catalog item variation's price is fixed."
          },
          {
            "name": "VARIABLE_PRICING",
            "description": "The catalog item variation's price is entered at the time of sale."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CatalogQuickAmountType": {
        "type": "string",
        "description": "Determines the type of a specific Quick Amount.",
        "enum": [
          "QUICK_AMOUNT_TYPE_MANUAL",
          "QUICK_AMOUNT_TYPE_AUTO"
        ],
        "x-enum-elements": [
          {
            "name": "QUICK_AMOUNT_TYPE_MANUAL",
            "description": "Quick Amount is created manually by the seller."
          },
          {
            "name": "QUICK_AMOUNT_TYPE_AUTO",
            "description": "Quick Amount is generated automatically by machine learning algorithms."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogQuickAmountsSettingsOption": {
        "type": "string",
        "description": "Determines a seller's option on Quick Amounts feature.",
        "enum": [
          "DISABLED",
          "MANUAL",
          "AUTO"
        ],
        "x-enum-elements": [
          {
            "name": "DISABLED",
            "description": "Option for seller to disable Quick Amounts."
          },
          {
            "name": "MANUAL",
            "description": "Option for seller to choose manually created Quick Amounts."
          },
          {
            "name": "AUTO",
            "description": "Option for seller to choose automatically created Quick Amounts."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Country": {
        "type": "string",
        "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
        "enum": [
          "ZZ",
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "x-enum-elements": [
          {
            "name": "ZZ",
            "description": "Unknown"
          },
          {
            "name": "AD",
            "description": "Andorra"
          },
          {
            "name": "AE",
            "description": "United Arab Emirates"
          },
          {
            "name": "AF",
            "description": "Afghanistan"
          },
          {
            "name": "AG",
            "description": "Antigua and Barbuda"
          },
          {
            "name": "AI",
            "description": "Anguilla"
          },
          {
            "name": "AL",
            "description": "Albania"
          },
          {
            "name": "AM",
            "description": "Armenia"
          },
          {
            "name": "AO",
            "description": "Angola"
          },
          {
            "name": "AQ",
            "description": "Antartica"
          },
          {
            "name": "AR",
            "description": "Argentina"
          },
          {
            "name": "AS",
            "description": "American Samoa"
          },
          {
            "name": "AT",
            "description": "Austria"
          },
          {
            "name": "AU",
            "description": "Australia"
          },
          {
            "name": "AW",
            "description": "Aruba"
          },
          {
            "name": "AX",
            "description": "Åland Islands"
          },
          {
            "name": "AZ",
            "description": "Azerbaijan"
          },
          {
            "name": "BA",
            "description": "Bosnia and Herzegovina"
          },
          {
            "name": "BB",
            "description": "Barbados"
          },
          {
            "name": "BD",
            "description": "Bangladesh"
          },
          {
            "name": "BE",
            "description": "Belgium"
          },
          {
            "name": "BF",
            "description": "Burkina Faso"
          },
          {
            "name": "BG",
            "description": "Bulgaria"
          },
          {
            "name": "BH",
            "description": "Bahrain"
          },
          {
            "name": "BI",
            "description": "Burundi"
          },
          {
            "name": "BJ",
            "description": "Benin"
          },
          {
            "name": "BL",
            "description": "Saint Barthélemy"
          },
          {
            "name": "BM",
            "description": "Bermuda"
          },
          {
            "name": "BN",
            "description": "Brunei"
          },
          {
            "name": "BO",
            "description": "Bolivia"
          },
          {
            "name": "BQ",
            "description": "Bonaire"
          },
          {
            "name": "BR",
            "description": "Brazil"
          },
          {
            "name": "BS",
            "description": "Bahamas"
          },
          {
            "name": "BT",
            "description": "Bhutan"
          },
          {
            "name": "BV",
            "description": "Bouvet Island"
          },
          {
            "name": "BW",
            "description": "Botswana"
          },
          {
            "name": "BY",
            "description": "Belarus"
          },
          {
            "name": "BZ",
            "description": "Belize"
          },
          {
            "name": "CA",
            "description": "Canada"
          },
          {
            "name": "CC",
            "description": "Cocos Islands"
          },
          {
            "name": "CD",
            "description": "Democratic Republic of the Congo"
          },
          {
            "name": "CF",
            "description": "Central African Republic"
          },
          {
            "name": "CG",
            "description": "Congo"
          },
          {
            "name": "CH",
            "description": "Switzerland"
          },
          {
            "name": "CI",
            "description": "Ivory Coast"
          },
          {
            "name": "CK",
            "description": "Cook Islands"
          },
          {
            "name": "CL",
            "description": "Chile"
          },
          {
            "name": "CM",
            "description": "Cameroon"
          },
          {
            "name": "CN",
            "description": "China"
          },
          {
            "name": "CO",
            "description": "Colombia"
          },
          {
            "name": "CR",
            "description": "Costa Rica"
          },
          {
            "name": "CU",
            "description": "Cuba"
          },
          {
            "name": "CV",
            "description": "Cabo Verde"
          },
          {
            "name": "CW",
            "description": "Curaçao"
          },
          {
            "name": "CX",
            "description": "Christmas Island"
          },
          {
            "name": "CY",
            "description": "Cyprus"
          },
          {
            "name": "CZ",
            "description": "Czechia"
          },
          {
            "name": "DE",
            "description": "Germany"
          },
          {
            "name": "DJ",
            "description": "Djibouti"
          },
          {
            "name": "DK",
            "description": "Denmark"
          },
          {
            "name": "DM",
            "description": "Dominica"
          },
          {
            "name": "DO",
            "description": "Dominican Republic"
          },
          {
            "name": "DZ",
            "description": "Algeria"
          },
          {
            "name": "EC",
            "description": "Ecuador"
          },
          {
            "name": "EE",
            "description": "Estonia"
          },
          {
            "name": "EG",
            "description": "Egypt"
          },
          {
            "name": "EH",
            "description": "Western Sahara"
          },
          {
            "name": "ER",
            "description": "Eritrea"
          },
          {
            "name": "ES",
            "description": "Spain"
          },
          {
            "name": "ET",
            "description": "Ethiopia"
          },
          {
            "name": "FI",
            "description": "Finland"
          },
          {
            "name": "FJ",
            "description": "Fiji"
          },
          {
            "name": "FK",
            "description": "Falkland Islands"
          },
          {
            "name": "FM",
            "description": "Federated States of Micronesia"
          },
          {
            "name": "FO",
            "description": "Faroe Islands"
          },
          {
            "name": "FR",
            "description": "France"
          },
          {
            "name": "GA",
            "description": "Gabon"
          },
          {
            "name": "GB",
            "description": "United Kingdom"
          },
          {
            "name": "GD",
            "description": "Grenada"
          },
          {
            "name": "GE",
            "description": "Georgia"
          },
          {
            "name": "GF",
            "description": "French Guiana"
          },
          {
            "name": "GG",
            "description": "Guernsey"
          },
          {
            "name": "GH",
            "description": "Ghana"
          },
          {
            "name": "GI",
            "description": "Gibraltar"
          },
          {
            "name": "GL",
            "description": "Greenland"
          },
          {
            "name": "GM",
            "description": "Gambia"
          },
          {
            "name": "GN",
            "description": "Guinea"
          },
          {
            "name": "GP",
            "description": "Guadeloupe"
          },
          {
            "name": "GQ",
            "description": "Equatorial Guinea"
          },
          {
            "name": "GR",
            "description": "Greece"
          },
          {
            "name": "GS",
            "description": "South Georgia and the South Sandwich Islands"
          },
          {
            "name": "GT",
            "description": "Guatemala"
          },
          {
            "name": "GU",
            "description": "Guam"
          },
          {
            "name": "GW",
            "description": "Guinea-Bissau"
          },
          {
            "name": "GY",
            "description": "Guyana"
          },
          {
            "name": "HK",
            "description": "Hong Kong"
          },
          {
            "name": "HM",
            "description": "Heard Island and McDonald Islands"
          },
          {
            "name": "HN",
            "description": "Honduras"
          },
          {
            "name": "HR",
            "description": "Croatia"
          },
          {
            "name": "HT",
            "description": "Haiti"
          },
          {
            "name": "HU",
            "description": "Hungary"
          },
          {
            "name": "ID",
            "description": "Indonesia"
          },
          {
            "name": "IE",
            "description": "Ireland"
          },
          {
            "name": "IL",
            "description": "Israel"
          },
          {
            "name": "IM",
            "description": "Isle of Man"
          },
          {
            "name": "IN",
            "description": "India"
          },
          {
            "name": "IO",
            "description": "British Indian Ocean Territory"
          },
          {
            "name": "IQ",
            "description": "Iraq"
          },
          {
            "name": "IR",
            "description": "Iran"
          },
          {
            "name": "IS",
            "description": "Iceland"
          },
          {
            "name": "IT",
            "description": "Italy"
          },
          {
            "name": "JE",
            "description": "Jersey"
          },
          {
            "name": "JM",
            "description": "Jamaica"
          },
          {
            "name": "JO",
            "description": "Jordan"
          },
          {
            "name": "JP",
            "description": "Japan"
          },
          {
            "name": "KE",
            "description": "Kenya"
          },
          {
            "name": "KG",
            "description": "Kyrgyzstan"
          },
          {
            "name": "KH",
            "description": "Cambodia"
          },
          {
            "name": "KI",
            "description": "Kiribati"
          },
          {
            "name": "KM",
            "description": "Comoros"
          },
          {
            "name": "KN",
            "description": "Saint Kitts and Nevis"
          },
          {
            "name": "KP",
            "description": "Democratic People's Republic of Korea"
          },
          {
            "name": "KR",
            "description": "Republic of Korea"
          },
          {
            "name": "KW",
            "description": "Kuwait"
          },
          {
            "name": "KY",
            "description": "Cayman Islands"
          },
          {
            "name": "KZ",
            "description": "Kazakhstan"
          },
          {
            "name": "LA",
            "description": "Lao People's Democratic Republic"
          },
          {
            "name": "LB",
            "description": "Lebanon"
          },
          {
            "name": "LC",
            "description": "Saint Lucia"
          },
          {
            "name": "LI",
            "description": "Liechtenstein"
          },
          {
            "name": "LK",
            "description": "Sri Lanka"
          },
          {
            "name": "LR",
            "description": "Liberia"
          },
          {
            "name": "LS",
            "description": "Lesotho"
          },
          {
            "name": "LT",
            "description": "Lithuania"
          },
          {
            "name": "LU",
            "description": "Luxembourg"
          },
          {
            "name": "LV",
            "description": "Latvia"
          },
          {
            "name": "LY",
            "description": "Libya"
          },
          {
            "name": "MA",
            "description": "Morocco"
          },
          {
            "name": "MC",
            "description": "Monaco"
          },
          {
            "name": "MD",
            "description": "Moldova"
          },
          {
            "name": "ME",
            "description": "Montenegro"
          },
          {
            "name": "MF",
            "description": "Saint Martin"
          },
          {
            "name": "MG",
            "description": "Madagascar"
          },
          {
            "name": "MH",
            "description": "Marshall Islands"
          },
          {
            "name": "MK",
            "description": "North Macedonia"
          },
          {
            "name": "ML",
            "description": "Mali"
          },
          {
            "name": "MM",
            "description": "Myanmar"
          },
          {
            "name": "MN",
            "description": "Mongolia"
          },
          {
            "name": "MO",
            "description": "Macao"
          },
          {
            "name": "MP",
            "description": "Northern Mariana Islands"
          },
          {
            "name": "MQ",
            "description": "Martinique"
          },
          {
            "name": "MR",
            "description": "Mauritania"
          },
          {
            "name": "MS",
            "description": "Montserrat"
          },
          {
            "name": "MT",
            "description": "Malta"
          },
          {
            "name": "MU",
            "description": "Mauritius"
          },
          {
            "name": "MV",
            "description": "Maldives"
          },
          {
            "name": "MW",
            "description": "Malawi"
          },
          {
            "name": "MX",
            "description": "Mexico"
          },
          {
            "name": "MY",
            "description": "Malaysia"
          },
          {
            "name": "MZ",
            "description": "Mozambique"
          },
          {
            "name": "NA",
            "description": "Namibia"
          },
          {
            "name": "NC",
            "description": "New Caledonia"
          },
          {
            "name": "NE",
            "description": "Niger"
          },
          {
            "name": "NF",
            "description": "Norfolk Island"
          },
          {
            "name": "NG",
            "description": "Nigeria"
          },
          {
            "name": "NI",
            "description": "Nicaragua"
          },
          {
            "name": "NL",
            "description": "Netherlands"
          },
          {
            "name": "NO",
            "description": "Norway"
          },
          {
            "name": "NP",
            "description": "Nepal"
          },
          {
            "name": "NR",
            "description": "Nauru"
          },
          {
            "name": "NU",
            "description": "Niue"
          },
          {
            "name": "NZ",
            "description": "New Zealand"
          },
          {
            "name": "OM",
            "description": "Oman"
          },
          {
            "name": "PA",
            "description": "Panama"
          },
          {
            "name": "PE",
            "description": "Peru"
          },
          {
            "name": "PF",
            "description": "French Polynesia"
          },
          {
            "name": "PG",
            "description": "Papua New Guinea"
          },
          {
            "name": "PH",
            "description": "Philippines"
          },
          {
            "name": "PK",
            "description": "Pakistan"
          },
          {
            "name": "PL",
            "description": "Poland"
          },
          {
            "name": "PM",
            "description": "Saint Pierre and Miquelon"
          },
          {
            "name": "PN",
            "description": "Pitcairn"
          },
          {
            "name": "PR",
            "description": "Puerto Rico"
          },
          {
            "name": "PS",
            "description": "Palestine"
          },
          {
            "name": "PT",
            "description": "Portugal"
          },
          {
            "name": "PW",
            "description": "Palau"
          },
          {
            "name": "PY",
            "description": "Paraguay"
          },
          {
            "name": "QA",
            "description": "Qatar"
          },
          {
            "name": "RE",
            "description": "Réunion"
          },
          {
            "name": "RO",
            "description": "Romania"
          },
          {
            "name": "RS",
            "description": "Serbia"
          },
          {
            "name": "RU",
            "description": "Russia"
          },
          {
            "name": "RW",
            "description": "Rwanda"
          },
          {
            "name": "SA",
            "description": "Saudi Arabia"
          },
          {
            "name": "SB",
            "description": "Solomon Islands"
          },
          {
            "name": "SC",
            "description": "Seychelles"
          },
          {
            "name": "SD",
            "description": "Sudan"
          },
          {
            "name": "SE",
            "description": "Sweden"
          },
          {
            "name": "SG",
            "description": "Singapore"
          },
          {
            "name": "SH",
            "description": "Saint Helena, Ascension and Tristan da Cunha"
          },
          {
            "name": "SI",
            "description": "Slovenia"
          },
          {
            "name": "SJ",
            "description": "Svalbard and Jan Mayen"
          },
          {
            "name": "SK",
            "description": "Slovakia"
          },
          {
            "name": "SL",
            "description": "Sierra Leone"
          },
          {
            "name": "SM",
            "description": "San Marino"
          },
          {
            "name": "SN",
            "description": "Senegal"
          },
          {
            "name": "SO",
            "description": "Somalia"
          },
          {
            "name": "SR",
            "description": "Suriname"
          },
          {
            "name": "SS",
            "description": "South Sudan"
          },
          {
            "name": "ST",
            "description": "Sao Tome and Principe"
          },
          {
            "name": "SV",
            "description": "El Salvador"
          },
          {
            "name": "SX",
            "description": "Sint Maarten"
          },
          {
            "name": "SY",
            "description": "Syrian Arab Republic"
          },
          {
            "name": "SZ",
            "description": "Eswatini"
          },
          {
            "name": "TC",
            "description": "Turks and Caicos Islands"
          },
          {
            "name": "TD",
            "description": "Chad"
          },
          {
            "name": "TF",
            "description": "French Southern Territories"
          },
          {
            "name": "TG",
            "description": "Togo"
          },
          {
            "name": "TH",
            "description": "Thailand"
          },
          {
            "name": "TJ",
            "description": "Tajikistan"
          },
          {
            "name": "TK",
            "description": "Tokelau"
          },
          {
            "name": "TL",
            "description": "Timor-Leste"
          },
          {
            "name": "TM",
            "description": "Turkmenistan"
          },
          {
            "name": "TN",
            "description": "Tunisia"
          },
          {
            "name": "TO",
            "description": "Tonga"
          },
          {
            "name": "TR",
            "description": "Turkey"
          },
          {
            "name": "TT",
            "description": "Trinidad and Tobago"
          },
          {
            "name": "TV",
            "description": "Tuvalu"
          },
          {
            "name": "TW",
            "description": "Taiwan"
          },
          {
            "name": "TZ",
            "description": "Tanzania"
          },
          {
            "name": "UA",
            "description": "Ukraine"
          },
          {
            "name": "UG",
            "description": "Uganda"
          },
          {
            "name": "UM",
            "description": "United States Minor Outlying Islands"
          },
          {
            "name": "US",
            "description": "United States of America"
          },
          {
            "name": "UY",
            "description": "Uruguay"
          },
          {
            "name": "UZ",
            "description": "Uzbekistan"
          },
          {
            "name": "VA",
            "description": "Vatican City"
          },
          {
            "name": "VC",
            "description": "Saint Vincent and the Grenadines"
          },
          {
            "name": "VE",
            "description": "Venezuela"
          },
          {
            "name": "VG",
            "description": "British Virgin Islands"
          },
          {
            "name": "VI",
            "description": "U.S. Virgin Islands"
          },
          {
            "name": "VN",
            "description": "Vietnam"
          },
          {
            "name": "VU",
            "description": "Vanuatu"
          },
          {
            "name": "WF",
            "description": "Wallis and Futuna"
          },
          {
            "name": "WS",
            "description": "Samoa"
          },
          {
            "name": "YE",
            "description": "Yemen"
          },
          {
            "name": "YT",
            "description": "Mayotte"
          },
          {
            "name": "ZA",
            "description": "South Africa"
          },
          {
            "name": "ZM",
            "description": "Zambia"
          },
          {
            "name": "ZW",
            "description": "Zimbabwe"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "Currency": {
        "type": "string",
        "description": "Indicates the associated currency for an amount of money. Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
        "enum": [
          "UNKNOWN_CURRENCY",
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYR",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LTL",
          "LVL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "USS",
          "UYI",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMK",
          "ZMW",
          "BTC"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_CURRENCY",
            "description": "Unknown currency"
          },
          {
            "name": "AED",
            "description": "United Arab Emirates dirham"
          },
          {
            "name": "AFN",
            "description": "Afghan afghani"
          },
          {
            "name": "ALL",
            "description": "Albanian lek"
          },
          {
            "name": "AMD",
            "description": "Armenian dram"
          },
          {
            "name": "ANG",
            "description": "Netherlands Antillean guilder"
          },
          {
            "name": "AOA",
            "description": "Angolan kwanza"
          },
          {
            "name": "ARS",
            "description": "Argentine peso"
          },
          {
            "name": "AUD",
            "description": "Australian dollar"
          },
          {
            "name": "AWG",
            "description": "Aruban florin"
          },
          {
            "name": "AZN",
            "description": "Azerbaijani manat"
          },
          {
            "name": "BAM",
            "description": "Bosnia and Herzegovina convertible mark"
          },
          {
            "name": "BBD",
            "description": "Barbados dollar"
          },
          {
            "name": "BDT",
            "description": "Bangladeshi taka"
          },
          {
            "name": "BGN",
            "description": "Bulgarian lev"
          },
          {
            "name": "BHD",
            "description": "Bahraini dinar"
          },
          {
            "name": "BIF",
            "description": "Burundian franc"
          },
          {
            "name": "BMD",
            "description": "Bermudian dollar"
          },
          {
            "name": "BND",
            "description": "Brunei dollar"
          },
          {
            "name": "BOB",
            "description": "Boliviano"
          },
          {
            "name": "BOV",
            "description": "Bolivian Mvdol"
          },
          {
            "name": "BRL",
            "description": "Brazilian real"
          },
          {
            "name": "BSD",
            "description": "Bahamian dollar"
          },
          {
            "name": "BTN",
            "description": "Bhutanese ngultrum"
          },
          {
            "name": "BWP",
            "description": "Botswana pula"
          },
          {
            "name": "BYR",
            "description": "Belarusian ruble"
          },
          {
            "name": "BZD",
            "description": "Belize dollar"
          },
          {
            "name": "CAD",
            "description": "Canadian dollar"
          },
          {
            "name": "CDF",
            "description": "Congolese franc"
          },
          {
            "name": "CHE",
            "description": "WIR Euro"
          },
          {
            "name": "CHF",
            "description": "Swiss franc"
          },
          {
            "name": "CHW",
            "description": "WIR Franc"
          },
          {
            "name": "CLF",
            "description": "Unidad de Fomento"
          },
          {
            "name": "CLP",
            "description": "Chilean peso"
          },
          {
            "name": "CNY",
            "description": "Chinese yuan"
          },
          {
            "name": "COP",
            "description": "Colombian peso"
          },
          {
            "name": "COU",
            "description": "Unidad de Valor Real"
          },
          {
            "name": "CRC",
            "description": "Costa Rican colon"
          },
          {
            "name": "CUC",
            "description": "Cuban convertible peso"
          },
          {
            "name": "CUP",
            "description": "Cuban peso"
          },
          {
            "name": "CVE",
            "description": "Cape Verdean escudo"
          },
          {
            "name": "CZK",
            "description": "Czech koruna"
          },
          {
            "name": "DJF",
            "description": "Djiboutian franc"
          },
          {
            "name": "DKK",
            "description": "Danish krone"
          },
          {
            "name": "DOP",
            "description": "Dominican peso"
          },
          {
            "name": "DZD",
            "description": "Algerian dinar"
          },
          {
            "name": "EGP",
            "description": "Egyptian pound"
          },
          {
            "name": "ERN",
            "description": "Eritrean nakfa"
          },
          {
            "name": "ETB",
            "description": "Ethiopian birr"
          },
          {
            "name": "EUR",
            "description": "Euro"
          },
          {
            "name": "FJD",
            "description": "Fiji dollar"
          },
          {
            "name": "FKP",
            "description": "Falkland Islands pound"
          },
          {
            "name": "GBP",
            "description": "Pound sterling"
          },
          {
            "name": "GEL",
            "description": "Georgian lari"
          },
          {
            "name": "GHS",
            "description": "Ghanaian cedi"
          },
          {
            "name": "GIP",
            "description": "Gibraltar pound"
          },
          {
            "name": "GMD",
            "description": "Gambian dalasi"
          },
          {
            "name": "GNF",
            "description": "Guinean franc"
          },
          {
            "name": "GTQ",
            "description": "Guatemalan quetzal"
          },
          {
            "name": "GYD",
            "description": "Guyanese dollar"
          },
          {
            "name": "HKD",
            "description": "Hong Kong dollar"
          },
          {
            "name": "HNL",
            "description": "Honduran lempira"
          },
          {
            "name": "HRK",
            "description": "Croatian kuna"
          },
          {
            "name": "HTG",
            "description": "Haitian gourde"
          },
          {
            "name": "HUF",
            "description": "Hungarian forint"
          },
          {
            "name": "IDR",
            "description": "Indonesian rupiah"
          },
          {
            "name": "ILS",
            "description": "Israeli new shekel"
          },
          {
            "name": "INR",
            "description": "Indian rupee"
          },
          {
            "name": "IQD",
            "description": "Iraqi dinar"
          },
          {
            "name": "IRR",
            "description": "Iranian rial"
          },
          {
            "name": "ISK",
            "description": "Icelandic króna"
          },
          {
            "name": "JMD",
            "description": "Jamaican dollar"
          },
          {
            "name": "JOD",
            "description": "Jordanian dinar"
          },
          {
            "name": "JPY",
            "description": "Japanese yen"
          },
          {
            "name": "KES",
            "description": "Kenyan shilling"
          },
          {
            "name": "KGS",
            "description": "Kyrgyzstani som"
          },
          {
            "name": "KHR",
            "description": "Cambodian riel"
          },
          {
            "name": "KMF",
            "description": "Comoro franc"
          },
          {
            "name": "KPW",
            "description": "North Korean won"
          },
          {
            "name": "KRW",
            "description": "South Korean won"
          },
          {
            "name": "KWD",
            "description": "Kuwaiti dinar"
          },
          {
            "name": "KYD",
            "description": "Cayman Islands dollar"
          },
          {
            "name": "KZT",
            "description": "Kazakhstani tenge"
          },
          {
            "name": "LAK",
            "description": "Lao kip"
          },
          {
            "name": "LBP",
            "description": "Lebanese pound"
          },
          {
            "name": "LKR",
            "description": "Sri Lankan rupee"
          },
          {
            "name": "LRD",
            "description": "Liberian dollar"
          },
          {
            "name": "LSL",
            "description": "Lesotho loti"
          },
          {
            "name": "LTL",
            "description": "Lithuanian litas"
          },
          {
            "name": "LVL",
            "description": "Latvian lats"
          },
          {
            "name": "LYD",
            "description": "Libyan dinar"
          },
          {
            "name": "MAD",
            "description": "Moroccan dirham"
          },
          {
            "name": "MDL",
            "description": "Moldovan leu"
          },
          {
            "name": "MGA",
            "description": "Malagasy ariary"
          },
          {
            "name": "MKD",
            "description": "Macedonian denar"
          },
          {
            "name": "MMK",
            "description": "Myanmar kyat"
          },
          {
            "name": "MNT",
            "description": "Mongolian tögrög"
          },
          {
            "name": "MOP",
            "description": "Macanese pataca"
          },
          {
            "name": "MRO",
            "description": "Mauritanian ouguiya"
          },
          {
            "name": "MUR",
            "description": "Mauritian rupee"
          },
          {
            "name": "MVR",
            "description": "Maldivian rufiyaa"
          },
          {
            "name": "MWK",
            "description": "Malawian kwacha"
          },
          {
            "name": "MXN",
            "description": "Mexican peso"
          },
          {
            "name": "MXV",
            "description": "Mexican Unidad de Inversion"
          },
          {
            "name": "MYR",
            "description": "Malaysian ringgit"
          },
          {
            "name": "MZN",
            "description": "Mozambican metical"
          },
          {
            "name": "NAD",
            "description": "Namibian dollar"
          },
          {
            "name": "NGN",
            "description": "Nigerian naira"
          },
          {
            "name": "NIO",
            "description": "Nicaraguan córdoba"
          },
          {
            "name": "NOK",
            "description": "Norwegian krone"
          },
          {
            "name": "NPR",
            "description": "Nepalese rupee"
          },
          {
            "name": "NZD",
            "description": "New Zealand dollar"
          },
          {
            "name": "OMR",
            "description": "Omani rial"
          },
          {
            "name": "PAB",
            "description": "Panamanian balboa"
          },
          {
            "name": "PEN",
            "description": "Peruvian sol"
          },
          {
            "name": "PGK",
            "description": "Papua New Guinean kina"
          },
          {
            "name": "PHP",
            "description": "Philippine peso"
          },
          {
            "name": "PKR",
            "description": "Pakistani rupee"
          },
          {
            "name": "PLN",
            "description": "Polish złoty"
          },
          {
            "name": "PYG",
            "description": "Paraguayan guaraní"
          },
          {
            "name": "QAR",
            "description": "Qatari riyal"
          },
          {
            "name": "RON",
            "description": "Romanian leu"
          },
          {
            "name": "RSD",
            "description": "Serbian dinar"
          },
          {
            "name": "RUB",
            "description": "Russian ruble"
          },
          {
            "name": "RWF",
            "description": "Rwandan franc"
          },
          {
            "name": "SAR",
            "description": "Saudi riyal"
          },
          {
            "name": "SBD",
            "description": "Solomon Islands dollar"
          },
          {
            "name": "SCR",
            "description": "Seychelles rupee"
          },
          {
            "name": "SDG",
            "description": "Sudanese pound"
          },
          {
            "name": "SEK",
            "description": "Swedish krona"
          },
          {
            "name": "SGD",
            "description": "Singapore dollar"
          },
          {
            "name": "SHP",
            "description": "Saint Helena pound"
          },
          {
            "name": "SLL",
            "description": "Sierra Leonean leone"
          },
          {
            "name": "SOS",
            "description": "Somali shilling"
          },
          {
            "name": "SRD",
            "description": "Surinamese dollar"
          },
          {
            "name": "SSP",
            "description": "South Sudanese pound"
          },
          {
            "name": "STD",
            "description": "São Tomé and Príncipe dobra"
          },
          {
            "name": "SVC",
            "description": "Salvadoran colón"
          },
          {
            "name": "SYP",
            "description": "Syrian pound"
          },
          {
            "name": "SZL",
            "description": "Swazi lilangeni"
          },
          {
            "name": "THB",
            "description": "Thai baht"
          },
          {
            "name": "TJS",
            "description": "Tajikstani somoni"
          },
          {
            "name": "TMT",
            "description": "Turkmenistan manat"
          },
          {
            "name": "TND",
            "description": "Tunisian dinar"
          },
          {
            "name": "TOP",
            "description": "Tongan pa'anga"
          },
          {
            "name": "TRY",
            "description": "Turkish lira"
          },
          {
            "name": "TTD",
            "description": "Trinidad and Tobago dollar"
          },
          {
            "name": "TWD",
            "description": "New Taiwan dollar"
          },
          {
            "name": "TZS",
            "description": "Tanzanian shilling"
          },
          {
            "name": "UAH",
            "description": "Ukrainian hryvnia"
          },
          {
            "name": "UGX",
            "description": "Ugandan shilling"
          },
          {
            "name": "USD",
            "description": "United States dollar"
          },
          {
            "name": "USN",
            "description": "United States dollar (next day)"
          },
          {
            "name": "USS",
            "description": "United States dollar (same day)"
          },
          {
            "name": "UYI",
            "description": "Uruguay Peso en Unidedades Indexadas"
          },
          {
            "name": "UYU",
            "description": "Uruguyan peso"
          },
          {
            "name": "UZS",
            "description": "Uzbekistan som"
          },
          {
            "name": "VEF",
            "description": "Venezuelan bolívar soberano"
          },
          {
            "name": "VND",
            "description": "Vietnamese đồng"
          },
          {
            "name": "VUV",
            "description": "Vanuatu vatu"
          },
          {
            "name": "WST",
            "description": "Samoan tala"
          },
          {
            "name": "XAF",
            "description": "CFA franc BEAC"
          },
          {
            "name": "XAG",
            "description": "Silver"
          },
          {
            "name": "XAU",
            "description": "Gold"
          },
          {
            "name": "XBA",
            "description": "European Composite Unit"
          },
          {
            "name": "XBB",
            "description": "European Monetary Unit"
          },
          {
            "name": "XBC",
            "description": "European Unit of Account 9"
          },
          {
            "name": "XBD",
            "description": "European Unit of Account 17"
          },
          {
            "name": "XCD",
            "description": "East Caribbean dollar"
          },
          {
            "name": "XDR",
            "description": "Special drawing rights (International Monetary Fund)"
          },
          {
            "name": "XOF",
            "description": "CFA franc BCEAO"
          },
          {
            "name": "XPD",
            "description": "Palladium"
          },
          {
            "name": "XPF",
            "description": "CFP franc"
          },
          {
            "name": "XPT",
            "description": "Platinum"
          },
          {
            "name": "XTS",
            "description": "Code reserved for testing"
          },
          {
            "name": "XXX",
            "description": "No currency"
          },
          {
            "name": "YER",
            "description": "Yemeni rial"
          },
          {
            "name": "ZAR",
            "description": "South African rand"
          },
          {
            "name": "ZMK",
            "description": "Zambian kwacha"
          },
          {
            "name": "ZMW",
            "description": "Zambian kwacha"
          },
          {
            "name": "BTC",
            "description": "Bitcoin"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CustomerCreationSource": {
        "type": "string",
        "description": "Indicates the method used to create the customer profile.",
        "enum": [
          "OTHER",
          "APPOINTMENTS",
          "COUPON",
          "DELETION_RECOVERY",
          "DIRECTORY",
          "EGIFTING",
          "EMAIL_COLLECTION",
          "FEEDBACK",
          "IMPORT",
          "INVOICES",
          "LOYALTY",
          "MARKETING",
          "MERGE",
          "ONLINE_STORE",
          "INSTANT_PROFILE",
          "TERMINAL",
          "THIRD_PARTY",
          "THIRD_PARTY_IMPORT",
          "UNMERGE_RECOVERY"
        ],
        "x-enum-elements": [
          {
            "name": "OTHER",
            "description": "Default creation source. Typically used for backward/future\ncompatibility when the original source of a customer profile is\nunrecognized. For example, when older clients do not support newer\nsource types."
          },
          {
            "name": "APPOINTMENTS",
            "description": "Customer profile created automatically when an appointment\nwas scheduled."
          },
          {
            "name": "COUPON",
            "description": "Customer profile created automatically when a coupon was issued\nusing Square Point of Sale."
          },
          {
            "name": "DELETION_RECOVERY",
            "description": "Customer profile restored through Square's deletion recovery\nprocess."
          },
          {
            "name": "DIRECTORY",
            "description": "Customer profile created manually through Square Dashboard or\nPoint of Sale application."
          },
          {
            "name": "EGIFTING",
            "description": "Customer profile created automatically when a gift card was\nissued using Square Point of Sale. Customer profiles are created for\nboth the purchaser and the recipient of the gift card."
          },
          {
            "name": "EMAIL_COLLECTION",
            "description": "Customer profile created through Square Point of Sale when\nsigning up for marketing emails during checkout."
          },
          {
            "name": "FEEDBACK",
            "description": "Customer profile created automatically when providing feedback\nthrough a digital receipt."
          },
          {
            "name": "IMPORT",
            "description": "Customer profile created automatically when importing customer\ndata through Square Dashboard."
          },
          {
            "name": "INVOICES",
            "description": "Customer profile created automatically during an invoice payment."
          },
          {
            "name": "LOYALTY",
            "description": "Customer profile created automatically when customers provide a\nphone number for loyalty reward programs during checkout."
          },
          {
            "name": "MARKETING",
            "description": "Customer profile created as the result of a campaign managed\nthrough Square’s Facebook integration."
          },
          {
            "name": "MERGE",
            "description": "Customer profile created as the result of explicitly merging\nmultiple customer profiles through the Square Dashboard or Point of\nSale application."
          },
          {
            "name": "ONLINE_STORE",
            "description": "Customer profile created through Square's Online Store solution\n(legacy service)."
          },
          {
            "name": "INSTANT_PROFILE",
            "description": "Customer profile created automatically as the result of a successful\ntransaction that did not explicitly link to an existing customer profile."
          },
          {
            "name": "TERMINAL",
            "description": "Customer profile created through Square's Virtual Terminal."
          },
          {
            "name": "THIRD_PARTY",
            "description": "Customer profile created through a Square API call."
          },
          {
            "name": "THIRD_PARTY_IMPORT",
            "description": "Customer profile created by a third-party product and imported\nthrough an official integration."
          },
          {
            "name": "UNMERGE_RECOVERY",
            "description": "Customer profile restored through Square's unmerge recovery\nprocess."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CustomerInclusionExclusion": {
        "type": "string",
        "description": "Indicates whether customers should be included in, or excluded from,\nthe result set when they match the filtering criteria.",
        "enum": [
          "INCLUDE",
          "EXCLUDE"
        ],
        "x-enum-elements": [
          {
            "name": "INCLUDE",
            "description": "Customers should be included in the result set when they match the\nfiltering criteria."
          },
          {
            "name": "EXCLUDE",
            "description": "Customers should be excluded from the result set when they match\nthe filtering criteria."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "CustomerSortField": {
        "type": "string",
        "description": "Specifies customer attributes as the sort key to customer profiles returned from a search.",
        "enum": [
          "DEFAULT",
          "CREATED_AT"
        ],
        "x-enum-elements": [
          {
            "name": "DEFAULT",
            "description": "Use the default sort key. By default, customers are sorted\nalphanumerically by concatenating their `given_name` and `family_name`. If\nneither name field is set, string comparison is performed using one of the\nremaining fields in the following order: `company_name`, `email`,\n`phone_number`."
          },
          {
            "name": "CREATED_AT",
            "description": "Use the creation date attribute (`created_at`) of customer profiles as the sort key."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "DayOfWeek": {
        "type": "string",
        "description": "Indicates the specific day  of the week.",
        "enum": [
          "SUN",
          "MON",
          "TUE",
          "WED",
          "THU",
          "FRI",
          "SAT"
        ],
        "x-enum-elements": [
          {
            "name": "SUN",
            "description": "Sunday"
          },
          {
            "name": "MON",
            "description": "Monday"
          },
          {
            "name": "TUE",
            "description": "Tuesday"
          },
          {
            "name": "WED",
            "description": "Wednesday"
          },
          {
            "name": "THU",
            "description": "Thursday"
          },
          {
            "name": "FRI",
            "description": "Friday"
          },
          {
            "name": "SAT",
            "description": "Saturday"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "DeviceCodeStatus": {
        "type": "string",
        "description": "DeviceCode.Status enum.",
        "enum": [
          "UNKNOWN",
          "UNPAIRED",
          "PAIRED",
          "EXPIRED"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN",
            "description": "The status cannot be determined or does not exist."
          },
          {
            "name": "UNPAIRED",
            "description": "The device code is just created and unpaired."
          },
          {
            "name": "PAIRED",
            "description": "The device code has been signed in and paired to a device."
          },
          {
            "name": "EXPIRED",
            "description": "The device code was unpaired and expired before it was paired."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "DisputeEvidenceType": {
        "type": "string",
        "description": "The type of the dispute evidence.",
        "enum": [
          "GENERIC_EVIDENCE",
          "ONLINE_OR_APP_ACCESS_LOG",
          "AUTHORIZATION_DOCUMENTATION",
          "CANCELLATION_OR_REFUND_DOCUMENTATION",
          "CARDHOLDER_COMMUNICATION",
          "CARDHOLDER_INFORMATION",
          "PURCHASE_ACKNOWLEDGEMENT",
          "DUPLICATE_CHARGE_DOCUMENTATION",
          "PRODUCT_OR_SERVICE_DESCRIPTION",
          "RECEIPT",
          "SERVICE_RECEIVED_DOCUMENTATION",
          "PROOF_OF_DELIVERY_DOCUMENTATION",
          "RELATED_TRANSACTION_DOCUMENTATION",
          "REBUTTAL_EXPLANATION",
          "TRACKING_NUMBER"
        ],
        "x-enum-elements": [
          {
            "name": "GENERIC_EVIDENCE",
            "description": "Square assumes this evidence type if you do not provide a type when uploading evidence.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "ONLINE_OR_APP_ACCESS_LOG",
            "description": "Server or activity logs that show proof of the cardholder’s identity and that the\ncardholder successfully ordered and received the goods (digitally or otherwise).\nExample evidence includes IP addresses, corresponding timestamps/dates, cardholder’s name and email\naddress linked to a cardholder profile held by the seller, proof the same device and card (used\nin dispute) were previously used in prior undisputed transaction, and any related detailed activity.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "AUTHORIZATION_DOCUMENTATION",
            "description": "Evidence that the cardholder did provide authorization for the charge.\nExample evidence includes a signed credit card authorization.\n\nUse when uploading evidence as a file."
          },
          {
            "name": "CANCELLATION_OR_REFUND_DOCUMENTATION",
            "description": "Evidence that the cardholder acknowledged your refund or cancellation policy.\nExample evidence includes a signature or checkbox showing the cardholder’s acknowledgement of your\nrefund or cancellation policy.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "CARDHOLDER_COMMUNICATION",
            "description": "Evidence that shows relevant communication with the cardholder.\nExample evidence includes emails or texts that show the cardholder received goods/services or\ndemonstrate cardholder satisfaction.\n\nUse when uploading evidence as a file."
          },
          {
            "name": "CARDHOLDER_INFORMATION",
            "description": "Evidence that validates the customer's identity.\nExample evidence includes personally identifiable details such as name, email address, purchaser IP\naddress, and a copy of the cardholder ID.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "PURCHASE_ACKNOWLEDGEMENT",
            "description": "Evidence that shows proof of the sale/transaction.\nExample evidence includes an invoice, contract, or other item showing the customer’s acknowledgement\nof the purchase and your terms.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "DUPLICATE_CHARGE_DOCUMENTATION",
            "description": "Evidence that shows the charges in question are valid and distinct from one another.\nExample evidence includes receipts, shipping labels, and invoices along with their distinct payment IDs.\n\nUse when uploading evidence as a file."
          },
          {
            "name": "PRODUCT_OR_SERVICE_DESCRIPTION",
            "description": "A description of the product or service sold.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "RECEIPT",
            "description": "A receipt or message sent to the cardholder detailing the charge.\nNote: You do not need to upload the Square receipt; Square submits the receipt on your behalf.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "SERVICE_RECEIVED_DOCUMENTATION",
            "description": "Evidence that the service was provided to the cardholder or the expected date that services will be rendered.\nExample evidence includes a signed delivery form, work order, expected delivery date, or other written agreements.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "PROOF_OF_DELIVERY_DOCUMENTATION",
            "description": "Evidence that shows the product was provided to the cardholder or the expected date of delivery.\nExample evidence includes a signed delivery form or written agreement acknowledging receipt of the goods or services.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "RELATED_TRANSACTION_DOCUMENTATION",
            "description": "Evidence that shows the cardholder previously processed transactions on the same card and did not dispute them.\nNote: Square automatically provides up to five distinct Square receipts for related transactions, when available.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "REBUTTAL_EXPLANATION",
            "description": "An explanation of why the cardholder’s claim is invalid.\nExample evidence includes an explanation of why each distinct charge is a legitimate purchase, why the cardholder’s claim\nfor credit owed due to their attempt to cancel, return, or refund is invalid per your stated policy and cardholder\nagreement, or an explanation of how the cardholder did not attempt to remedy the issue with you first to receive credit.\n\nUse when uploading evidence as a file or string."
          },
          {
            "name": "TRACKING_NUMBER",
            "description": "The tracking number for the order provided by the shipping carrier. If you have multiple numbers, they need to be\nsubmitted individually as separate pieces of evidence.\n\nUse when uploading evidence as a string."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DisputeReason": {
        "type": "string",
        "description": "The list of possible reasons why a cardholder might initiate a\ndispute with their bank.",
        "enum": [
          "AMOUNT_DIFFERS",
          "CANCELLED",
          "DUPLICATE",
          "NO_KNOWLEDGE",
          "NOT_AS_DESCRIBED",
          "NOT_RECEIVED",
          "PAID_BY_OTHER_MEANS",
          "CUSTOMER_REQUESTS_CREDIT",
          "EMV_LIABILITY_SHIFT"
        ],
        "x-enum-elements": [
          {
            "name": "AMOUNT_DIFFERS",
            "description": "The cardholder claims that they were charged the wrong amount for the purchase.\nTo challenge this dispute, provide specific and concrete evidence that the cardholder agreed\nto the amount charged."
          },
          {
            "name": "CANCELLED",
            "description": "The cardholder claims that they attempted to return the goods or cancel the service.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder\nis not due a refund and that the cardholder acknowledged your cancellation policy."
          },
          {
            "name": "DUPLICATE",
            "description": "The cardholder claims that they were charged twice for the same purchase.\nTo challenge this dispute, provide specific and concrete evidence that shows both charges are\nlegitimate and independent of one another."
          },
          {
            "name": "NO_KNOWLEDGE",
            "description": "The cardholder claims that they did not make this purchase nor authorized the charge.\nTo challenge this dispute, provide specific and concrete evidence that proves that the cardholder\nidentity was verified at the time of purchase and that the purchase was authorized."
          },
          {
            "name": "NOT_AS_DESCRIBED",
            "description": "The cardholder claims the product or service was provided, but the quality of the deliverable\ndid not align with the expectations of the cardholder based on the description.\nTo challenge this dispute, provide specific and concrete evidence that shows the cardholder is in\npossession of the product as described or received the service as described and agreed on."
          },
          {
            "name": "NOT_RECEIVED",
            "description": "The cardholder claims the product or service was not received by the cardholder within the\nstated time frame.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder is\nin possession of or received the product or service sold."
          },
          {
            "name": "PAID_BY_OTHER_MEANS",
            "description": "The cardholder claims that they previously paid for this purchase.\nTo challenge this dispute, provide specific and concrete evidence that shows both charges are\nlegitimate and independent of one another or proof that you already provided a credit for the charge."
          },
          {
            "name": "CUSTOMER_REQUESTS_CREDIT",
            "description": "The cardholder claims that the purchase was canceled or returned, but they have not yet received\nthe credit.\nTo challenge this dispute, provide specific and concrete evidence to prove that the cardholder is not\ndue a refund and that they acknowledged your cancellation and/or refund policy."
          },
          {
            "name": "EMV_LIABILITY_SHIFT",
            "description": "A chip-enabled card was not processed through a compliant chip-card reader (for example, it was swiped\ninstead of dipped into a chip-card reader).\nYou cannot challenge this dispute because the payment did not comply with EMV security requirements.\nFor more information, see [What Is EMV?](https://squareup.com/emv)"
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DisputeState": {
        "type": "string",
        "description": "The list of possible dispute states.",
        "enum": [
          "UNKNOWN_STATE",
          "INQUIRY_EVIDENCE_REQUIRED",
          "INQUIRY_PROCESSING",
          "INQUIRY_CLOSED",
          "EVIDENCE_REQUIRED",
          "PROCESSING",
          "WON",
          "LOST",
          "ACCEPTED",
          "WAITING_THIRD_PARTY"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_STATE",
            "description": ""
          },
          {
            "name": "INQUIRY_EVIDENCE_REQUIRED",
            "description": ""
          },
          {
            "name": "INQUIRY_PROCESSING",
            "description": ""
          },
          {
            "name": "INQUIRY_CLOSED",
            "description": ""
          },
          {
            "name": "EVIDENCE_REQUIRED",
            "description": ""
          },
          {
            "name": "PROCESSING",
            "description": ""
          },
          {
            "name": "WON",
            "description": ""
          },
          {
            "name": "LOST",
            "description": ""
          },
          {
            "name": "ACCEPTED",
            "description": ""
          },
          {
            "name": "WAITING_THIRD_PARTY",
            "description": ""
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "EcomVisibility": {
        "type": "string",
        "description": "Determines item visibility in Ecom (Online Store) and Online Checkout.",
        "enum": [
          "UNINDEXED",
          "UNAVAILABLE",
          "HIDDEN",
          "VISIBLE"
        ],
        "x-enum-elements": [
          {
            "name": "UNINDEXED",
            "description": "Item is not synced with Ecom (Weebly). This is the default state"
          },
          {
            "name": "UNAVAILABLE",
            "description": "Item is synced but is unavailable within Ecom (Weebly) and Online Checkout"
          },
          {
            "name": "HIDDEN",
            "description": "Option for seller to choose manually created Quick Amounts."
          },
          {
            "name": "VISIBLE",
            "description": "Item is synced but available within Ecom (Weebly) and Online Checkout but is hidden from Ecom Store."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "EmployeeStatus": {
        "type": "string",
        "description": "The status of the Employee being retrieved.",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": "Specifies that the employee is in the Active state."
          },
          {
            "name": "INACTIVE",
            "description": "Specifies that the employee is in the Inactive state."
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ErrorCategory": {
        "type": "string",
        "description": "Indicates which high-level category of error has occurred during a\nrequest to the Connect API.",
        "enum": [
          "API_ERROR",
          "AUTHENTICATION_ERROR",
          "INVALID_REQUEST_ERROR",
          "RATE_LIMIT_ERROR",
          "PAYMENT_METHOD_ERROR",
          "REFUND_ERROR"
        ],
        "x-enum-elements": [
          {
            "name": "API_ERROR",
            "description": "An error occurred with the Connect API itself."
          },
          {
            "name": "AUTHENTICATION_ERROR",
            "description": "An authentication error occurred. Most commonly, the request had\na missing, malformed, or otherwise invalid `Authorization` header."
          },
          {
            "name": "INVALID_REQUEST_ERROR",
            "description": "The request was invalid. Most commonly, a required parameter was\nmissing, or a provided parameter had an invalid value."
          },
          {
            "name": "RATE_LIMIT_ERROR",
            "description": "Your application reached the Connect API rate limit. Retry your\nrequest after a while."
          },
          {
            "name": "PAYMENT_METHOD_ERROR",
            "description": "An error occurred while processing a payment method. Most commonly,\nthe details of the payment method were invalid (such as a card's CVV\nor expiration date)."
          },
          {
            "name": "REFUND_ERROR",
            "description": "An error occurred while attempting to process a refund."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ErrorCode": {
        "type": "string",
        "description": "Indicates the specific error that occurred during a request to a\nSquare API.",
        "enum": [
          "INTERNAL_SERVER_ERROR",
          "UNAUTHORIZED",
          "ACCESS_TOKEN_EXPIRED",
          "ACCESS_TOKEN_REVOKED",
          "CLIENT_DISABLED",
          "FORBIDDEN",
          "INSUFFICIENT_SCOPES",
          "APPLICATION_DISABLED",
          "V1_APPLICATION",
          "V1_ACCESS_TOKEN",
          "CARD_PROCESSING_NOT_ENABLED",
          "BAD_REQUEST",
          "MISSING_REQUIRED_PARAMETER",
          "INCORRECT_TYPE",
          "INVALID_TIME",
          "INVALID_TIME_RANGE",
          "INVALID_VALUE",
          "INVALID_CURSOR",
          "UNKNOWN_QUERY_PARAMETER",
          "CONFLICTING_PARAMETERS",
          "EXPECTED_JSON_BODY",
          "INVALID_SORT_ORDER",
          "VALUE_REGEX_MISMATCH",
          "VALUE_TOO_SHORT",
          "VALUE_TOO_LONG",
          "VALUE_TOO_LOW",
          "VALUE_TOO_HIGH",
          "VALUE_EMPTY",
          "ARRAY_LENGTH_TOO_LONG",
          "ARRAY_LENGTH_TOO_SHORT",
          "ARRAY_EMPTY",
          "EXPECTED_BOOLEAN",
          "EXPECTED_INTEGER",
          "EXPECTED_FLOAT",
          "EXPECTED_STRING",
          "EXPECTED_OBJECT",
          "EXPECTED_ARRAY",
          "EXPECTED_MAP",
          "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
          "INVALID_ARRAY_VALUE",
          "INVALID_ENUM_VALUE",
          "INVALID_CONTENT_TYPE",
          "INVALID_FORM_VALUE",
          "CUSTOMER_NOT_FOUND",
          "ONE_INSTRUMENT_EXPECTED",
          "NO_FIELDS_SET",
          "TOO_MANY_MAP_ENTRIES",
          "MAP_KEY_LENGTH_TOO_SHORT",
          "MAP_KEY_LENGTH_TOO_LONG",
          "CARD_EXPIRED",
          "INVALID_EXPIRATION",
          "INVALID_EXPIRATION_YEAR",
          "INVALID_EXPIRATION_DATE",
          "UNSUPPORTED_CARD_BRAND",
          "UNSUPPORTED_ENTRY_METHOD",
          "INVALID_ENCRYPTED_CARD",
          "INVALID_CARD",
          "GENERIC_DECLINE",
          "CVV_FAILURE",
          "ADDRESS_VERIFICATION_FAILURE",
          "INVALID_ACCOUNT",
          "CURRENCY_MISMATCH",
          "INSUFFICIENT_FUNDS",
          "INSUFFICIENT_PERMISSIONS",
          "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
          "INVALID_LOCATION",
          "TRANSACTION_LIMIT",
          "VOICE_FAILURE",
          "PAN_FAILURE",
          "EXPIRATION_FAILURE",
          "CARD_NOT_SUPPORTED",
          "INVALID_PIN",
          "INVALID_POSTAL_CODE",
          "INVALID_FEES",
          "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
          "PAYMENT_LIMIT_EXCEEDED",
          "GIFT_CARD_AVAILABLE_AMOUNT",
          "DELAYED_TRANSACTION_EXPIRED",
          "DELAYED_TRANSACTION_CANCELED",
          "DELAYED_TRANSACTION_CAPTURED",
          "DELAYED_TRANSACTION_FAILED",
          "CARD_TOKEN_EXPIRED",
          "CARD_TOKEN_USED",
          "AMOUNT_TOO_HIGH",
          "UNSUPPORTED_INSTRUMENT_TYPE",
          "REFUND_AMOUNT_INVALID",
          "REFUND_ALREADY_PENDING",
          "PAYMENT_NOT_REFUNDABLE",
          "REFUND_DECLINED",
          "INVALID_CARD_DATA",
          "SOURCE_USED",
          "SOURCE_EXPIRED",
          "UNSUPPORTED_LOYALTY_REWARD_TIER",
          "LOCATION_MISMATCH",
          "IDEMPOTENCY_KEY_REUSED",
          "UNEXPECTED_VALUE",
          "SANDBOX_NOT_SUPPORTED",
          "INVALID_EMAIL_ADDRESS",
          "INVALID_PHONE_NUMBER",
          "CHECKOUT_EXPIRED",
          "BAD_CERTIFICATE",
          "INVALID_SQUARE_VERSION_FORMAT",
          "API_VERSION_INCOMPATIBLE",
          "CARD_DECLINED",
          "VERIFY_CVV_FAILURE",
          "VERIFY_AVS_FAILURE",
          "CARD_DECLINED_CALL_ISSUER",
          "CARD_DECLINED_VERIFICATION_REQUIRED",
          "BAD_EXPIRATION",
          "CHIP_INSERTION_REQUIRED",
          "ALLOWABLE_PIN_TRIES_EXCEEDED",
          "RESERVATION_DECLINED",
          "NOT_FOUND",
          "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
          "METHOD_NOT_ALLOWED",
          "NOT_ACCEPTABLE",
          "REQUEST_TIMEOUT",
          "CONFLICT",
          "GONE",
          "REQUEST_ENTITY_TOO_LARGE",
          "UNSUPPORTED_MEDIA_TYPE",
          "UNPROCESSABLE_ENTITY",
          "RATE_LIMITED",
          "NOT_IMPLEMENTED",
          "BAD_GATEWAY",
          "SERVICE_UNAVAILABLE",
          "TEMPORARY_ERROR",
          "GATEWAY_TIMEOUT"
        ],
        "x-enum-elements": [
          {
            "name": "INTERNAL_SERVER_ERROR",
            "description": "A general server error occurred."
          },
          {
            "name": "UNAUTHORIZED",
            "description": "A general authorization error occurred."
          },
          {
            "name": "ACCESS_TOKEN_EXPIRED",
            "description": "The provided access token has expired."
          },
          {
            "name": "ACCESS_TOKEN_REVOKED",
            "description": "The provided access token has been revoked."
          },
          {
            "name": "CLIENT_DISABLED",
            "description": "The provided client has been disabled."
          },
          {
            "name": "FORBIDDEN",
            "description": "A general access error occurred."
          },
          {
            "name": "INSUFFICIENT_SCOPES",
            "description": "The provided access token does not have permission\nto execute the requested action."
          },
          {
            "name": "APPLICATION_DISABLED",
            "description": "The calling application was disabled."
          },
          {
            "name": "V1_APPLICATION",
            "description": "The calling application was created prior to\n2016-03-30 and is not compatible with v2 Square API calls."
          },
          {
            "name": "V1_ACCESS_TOKEN",
            "description": "The calling application is using an access token\ncreated prior to 2016-03-30 and is not compatible with v2 Square API\ncalls."
          },
          {
            "name": "CARD_PROCESSING_NOT_ENABLED",
            "description": "The location provided in the API call is not\nenabled for credit card processing."
          },
          {
            "name": "BAD_REQUEST",
            "description": "A general error occurred with the request."
          },
          {
            "name": "MISSING_REQUIRED_PARAMETER",
            "description": "The request is missing a required path, query, or\nbody parameter."
          },
          {
            "name": "INCORRECT_TYPE",
            "description": "The value provided in the request is the wrong\ntype. For example, a string instead of an integer."
          },
          {
            "name": "INVALID_TIME",
            "description": "Formatting for the provided time value is\nincorrect."
          },
          {
            "name": "INVALID_TIME_RANGE",
            "description": "The time range provided in the request is invalid.\nFor example, the end time is before the start time."
          },
          {
            "name": "INVALID_VALUE",
            "description": "The provided value is invalid. For example,\nincluding `%` in a phone number."
          },
          {
            "name": "INVALID_CURSOR",
            "description": "The pagination cursor included in the request is\ninvalid."
          },
          {
            "name": "UNKNOWN_QUERY_PARAMETER",
            "description": "The query parameters provided is invalid for the\nrequested endpoint."
          },
          {
            "name": "CONFLICTING_PARAMETERS",
            "description": "One or more of the request parameters conflict with\neach other."
          },
          {
            "name": "EXPECTED_JSON_BODY",
            "description": "The request body is not a JSON object."
          },
          {
            "name": "INVALID_SORT_ORDER",
            "description": "The provided sort order is not a valid key.\nCurrently, sort order must be `ASC` or `DESC`."
          },
          {
            "name": "VALUE_REGEX_MISMATCH",
            "description": "The provided value does not match an expected\nregular expression."
          },
          {
            "name": "VALUE_TOO_SHORT",
            "description": "The provided string value is shorter than the\nminimum length allowed."
          },
          {
            "name": "VALUE_TOO_LONG",
            "description": "The provided string value is longer than the\nmaximum length allowed."
          },
          {
            "name": "VALUE_TOO_LOW",
            "description": "The provided value is less than the supported\nminimum."
          },
          {
            "name": "VALUE_TOO_HIGH",
            "description": "The provided value is greater than the supported\nmaximum."
          },
          {
            "name": "VALUE_EMPTY",
            "description": "The provided value has a default (empty) value\nsuch as a blank string."
          },
          {
            "name": "ARRAY_LENGTH_TOO_LONG",
            "description": "The provided array has too many elements."
          },
          {
            "name": "ARRAY_LENGTH_TOO_SHORT",
            "description": "The provided array has too few elements."
          },
          {
            "name": "ARRAY_EMPTY",
            "description": "The provided array is empty."
          },
          {
            "name": "EXPECTED_BOOLEAN",
            "description": "The endpoint expected the provided value to be a\nboolean."
          },
          {
            "name": "EXPECTED_INTEGER",
            "description": "The endpoint expected the provided value to be an\ninteger."
          },
          {
            "name": "EXPECTED_FLOAT",
            "description": "The endpoint expected the provided value to be a\nfloat."
          },
          {
            "name": "EXPECTED_STRING",
            "description": "The endpoint expected the provided value to be a\nstring."
          },
          {
            "name": "EXPECTED_OBJECT",
            "description": "The endpoint expected the provided value to be a\nJSON object."
          },
          {
            "name": "EXPECTED_ARRAY",
            "description": "The endpoint expected the provided value to be an\narray or list."
          },
          {
            "name": "EXPECTED_MAP",
            "description": "The endpoint expected the provided value to be a\nmap or associative array."
          },
          {
            "name": "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
            "description": "The endpoint expected the provided value to be an\narray encoded in base64."
          },
          {
            "name": "INVALID_ARRAY_VALUE",
            "description": "One or more objects in the array does not match the\narray type."
          },
          {
            "name": "INVALID_ENUM_VALUE",
            "description": "The provided static string is not valid for the\nfield."
          },
          {
            "name": "INVALID_CONTENT_TYPE",
            "description": "Invalid content type header."
          },
          {
            "name": "INVALID_FORM_VALUE",
            "description": "Only relevant for applications created prior to\n2016-03-30. Indicates there was an error while parsing form values."
          },
          {
            "name": "CUSTOMER_NOT_FOUND",
            "description": "The provided customer id can't be found in the merchant's customers list."
          },
          {
            "name": "ONE_INSTRUMENT_EXPECTED",
            "description": "A general error occurred."
          },
          {
            "name": "NO_FIELDS_SET",
            "description": "A general error occurred."
          },
          {
            "name": "TOO_MANY_MAP_ENTRIES",
            "description": "Too many entries in the map field."
          },
          {
            "name": "MAP_KEY_LENGTH_TOO_SHORT",
            "description": "The length of one of the provided keys in the map is too short."
          },
          {
            "name": "MAP_KEY_LENGTH_TOO_LONG",
            "description": "The length of one of the provided keys in the map is too long."
          },
          {
            "name": "CARD_EXPIRED",
            "description": "The card issuer declined the request because the card is expired."
          },
          {
            "name": "INVALID_EXPIRATION",
            "description": "The expiration date for the payment card is invalid. For example,\nit indicates a date in the past."
          },
          {
            "name": "INVALID_EXPIRATION_YEAR",
            "description": "The expiration year for the payment card is invalid. For example,\nit indicates a year in the past or contains invalid characters."
          },
          {
            "name": "INVALID_EXPIRATION_DATE",
            "description": "The expiration date for the payment card is invalid. For example,\nit contains invalid characters."
          },
          {
            "name": "UNSUPPORTED_CARD_BRAND",
            "description": "The credit card provided is not from a supported issuer."
          },
          {
            "name": "UNSUPPORTED_ENTRY_METHOD",
            "description": "The entry method for the credit card (swipe, dip, tap) is not supported."
          },
          {
            "name": "INVALID_ENCRYPTED_CARD",
            "description": "The encrypted card information is invalid."
          },
          {
            "name": "INVALID_CARD",
            "description": "The credit card cannot be validated based on the provided details."
          },
          {
            "name": "GENERIC_DECLINE",
            "description": "Square received a decline from the cardholder's bank without any \nadditional information. If the card information seems correct, the card \nholder can contact their card issuer to ask for more information."
          },
          {
            "name": "CVV_FAILURE",
            "description": "The card issuer declined the request because the CVV value is invalid."
          },
          {
            "name": "ADDRESS_VERIFICATION_FAILURE",
            "description": "The card issuer declined the request because the postal code is invalid."
          },
          {
            "name": "INVALID_ACCOUNT",
            "description": "The card issuer was not able to locate account on record."
          },
          {
            "name": "CURRENCY_MISMATCH",
            "description": "The currency associated with the payment is not valid for the provided\nfunding source. For example, a gift card funded in USD cannot be used to process\npayments in GBP."
          },
          {
            "name": "INSUFFICIENT_FUNDS",
            "description": "The funding source has insufficient funds to cover the payment."
          },
          {
            "name": "INSUFFICIENT_PERMISSIONS",
            "description": "The Square account does not have the permissions to accept\nthis payment. For example, Square may limit which merchants are\nallowed to receive gift card payments."
          },
          {
            "name": "CARDHOLDER_INSUFFICIENT_PERMISSIONS",
            "description": "The card issuer has declined the transaction due to restrictions on where the card can be used.\nFor example, a gift card is limited to a single merchant."
          },
          {
            "name": "INVALID_LOCATION",
            "description": "The Square account cannot take payments in the specified region.\nA Square account can take payments only from the region where the account was created."
          },
          {
            "name": "TRANSACTION_LIMIT",
            "description": "The card issuer has determined the payment amount is either too high or too low.\nThe API returns the error code mostly for credit cards (for example, the card reached\nthe credit limit). However, sometimes the issuer bank can indicate the error for debit\nor prepaid cards (for example, card has insufficient funds)."
          },
          {
            "name": "VOICE_FAILURE",
            "description": "The card issuer declined the request because the issuer requires voice authorization from the cardholder."
          },
          {
            "name": "PAN_FAILURE",
            "description": "The specified card number is invalid. For example, it is of\nincorrect length or is incorrectly formatted."
          },
          {
            "name": "EXPIRATION_FAILURE",
            "description": "The card expiration date is either invalid or indicates that the\ncard is expired."
          },
          {
            "name": "CARD_NOT_SUPPORTED",
            "description": "The card is not supported either in the geographic region or by\nthe MCC [merchant category code](https://developer.squareup.com/docs/docs/api/connect/v2#navsection-connectapibasics)"
          },
          {
            "name": "INVALID_PIN",
            "description": "The card issuer declined the request because the PIN is invalid."
          },
          {
            "name": "INVALID_POSTAL_CODE",
            "description": "The postal code is incorrectly formatted."
          },
          {
            "name": "INVALID_FEES",
            "description": "The app_fee_money on a payment is too high."
          },
          {
            "name": "MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED",
            "description": "The card must be swiped, tapped, or dipped. Payments attempted by manually entering the card number are declined."
          },
          {
            "name": "PAYMENT_LIMIT_EXCEEDED",
            "description": "Square declined the request because the payment amount exceeded the processing limit for this merchant."
          },
          {
            "name": "GIFT_CARD_AVAILABLE_AMOUNT",
            "description": "When a Gift Card is a payment source, you can allow taking a partial payment \nby adding the `accept_partial_authorization` parameter in the request. \nHowever, taking such a partial payment does not work if your request also includes \n`tip_money`, `app_fee_money`, or both. Square declines such payments and returns \nthe `GIFT_CARD_AVAILABLE_AMOUNT` error. \nFor more information, see \n[CreatePayment errors (additional information)](https://developer.squareup.com/docs/docs/payments-api/error-codes#createpayment-errors-additional-information)."
          },
          {
            "name": "DELAYED_TRANSACTION_EXPIRED",
            "description": "The application tried to update a delayed-capture payment that has expired."
          },
          {
            "name": "DELAYED_TRANSACTION_CANCELED",
            "description": "The application tried to cancel a delayed-capture payment that was already cancelled."
          },
          {
            "name": "DELAYED_TRANSACTION_CAPTURED",
            "description": "The application tried to capture a delayed-capture payment that was already captured."
          },
          {
            "name": "DELAYED_TRANSACTION_FAILED",
            "description": "The application tried to update a delayed-capture payment that failed."
          },
          {
            "name": "CARD_TOKEN_EXPIRED",
            "description": "The provided card token (nonce) has expired."
          },
          {
            "name": "CARD_TOKEN_USED",
            "description": "The provided card token (nonce) was already used to process payment."
          },
          {
            "name": "AMOUNT_TOO_HIGH",
            "description": "The requested payment amount is too high for the provided payment source."
          },
          {
            "name": "UNSUPPORTED_INSTRUMENT_TYPE",
            "description": "The API request references an unsupported instrument type/"
          },
          {
            "name": "REFUND_AMOUNT_INVALID",
            "description": "The requested refund amount exceeds the amount available to refund."
          },
          {
            "name": "REFUND_ALREADY_PENDING",
            "description": "The payment already has a pending refund."
          },
          {
            "name": "PAYMENT_NOT_REFUNDABLE",
            "description": "The payment is not refundable. For example, a previous refund has\nalready been rejected and no new refunds can be accepted."
          },
          {
            "name": "REFUND_DECLINED",
            "description": "Request failed - The card issuer declined the refund."
          },
          {
            "name": "INVALID_CARD_DATA",
            "description": "Generic error - the provided card data is invalid."
          },
          {
            "name": "SOURCE_USED",
            "description": "The provided source id was already used to create a card."
          },
          {
            "name": "SOURCE_EXPIRED",
            "description": "The provided source id has expired."
          },
          {
            "name": "UNSUPPORTED_LOYALTY_REWARD_TIER",
            "description": "The referenced loyalty program reward tier is not supported.\nThis could happen if the reward tier created in a first party\napplication is incompatible with the Loyalty API."
          },
          {
            "name": "LOCATION_MISMATCH",
            "description": "Generic error - the given location does not matching what is expected."
          },
          {
            "name": "IDEMPOTENCY_KEY_REUSED",
            "description": "The provided idempotency key has already been used."
          },
          {
            "name": "UNEXPECTED_VALUE",
            "description": "General error - the value provided was unexpected."
          },
          {
            "name": "SANDBOX_NOT_SUPPORTED",
            "description": "The API request is not supported in sandbox."
          },
          {
            "name": "INVALID_EMAIL_ADDRESS",
            "description": "The provided email address is invalid."
          },
          {
            "name": "INVALID_PHONE_NUMBER",
            "description": "The provided phone number is invalid."
          },
          {
            "name": "CHECKOUT_EXPIRED",
            "description": "The provided checkout URL has expired."
          },
          {
            "name": "BAD_CERTIFICATE",
            "description": "Bad certificate."
          },
          {
            "name": "INVALID_SQUARE_VERSION_FORMAT",
            "description": "The provided Square-Version is incorrectly formatted."
          },
          {
            "name": "API_VERSION_INCOMPATIBLE",
            "description": "The provided Square-Version is incompatible with the requested action."
          },
          {
            "name": "CARD_DECLINED",
            "description": "The card was declined."
          },
          {
            "name": "VERIFY_CVV_FAILURE",
            "description": "The CVV could not be verified."
          },
          {
            "name": "VERIFY_AVS_FAILURE",
            "description": "The AVS could not be verified."
          },
          {
            "name": "CARD_DECLINED_CALL_ISSUER",
            "description": "The payment card was declined with a request\nfor the card holder to call the issuer."
          },
          {
            "name": "CARD_DECLINED_VERIFICATION_REQUIRED",
            "description": "The payment card was declined with a request\nfor additional verification."
          },
          {
            "name": "BAD_EXPIRATION",
            "description": "The card expiration date is either missing or\nincorrectly formatted."
          },
          {
            "name": "CHIP_INSERTION_REQUIRED",
            "description": "The card issuer requires that the card be read\nusing a chip reader."
          },
          {
            "name": "ALLOWABLE_PIN_TRIES_EXCEEDED",
            "description": "The card has exhausted its available pin entry\nretries set by the card issuer. Resolving the error typically requires the\ncard holder to contact the card issuer."
          },
          {
            "name": "RESERVATION_DECLINED",
            "description": "The card issuer declined the refund."
          },
          {
            "name": "NOT_FOUND",
            "description": "Not Found - a general error occurred."
          },
          {
            "name": "APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND",
            "description": "Square could not find the associated Apple Pay certificate."
          },
          {
            "name": "METHOD_NOT_ALLOWED",
            "description": "Method Not Allowed - a general error occurred."
          },
          {
            "name": "NOT_ACCEPTABLE",
            "description": "Not Acceptable - a general error occurred."
          },
          {
            "name": "REQUEST_TIMEOUT",
            "description": "Request Timeout - a general error occurred."
          },
          {
            "name": "CONFLICT",
            "description": "Conflict - a general error occurred."
          },
          {
            "name": "GONE",
            "description": "The target resource is no longer available and this\ncondition is likely to be permanent."
          },
          {
            "name": "REQUEST_ENTITY_TOO_LARGE",
            "description": "Request Entity Too Large - a general error occurred."
          },
          {
            "name": "UNSUPPORTED_MEDIA_TYPE",
            "description": "Unsupported Media Type - a general error occurred."
          },
          {
            "name": "UNPROCESSABLE_ENTITY",
            "description": "Unprocessable Entity - a general error occurred."
          },
          {
            "name": "RATE_LIMITED",
            "description": "Rate Limited - a general error occurred."
          },
          {
            "name": "NOT_IMPLEMENTED",
            "description": "Not Implemented - a general error occurred."
          },
          {
            "name": "BAD_GATEWAY",
            "description": "Bad Gateway - a general error occurred."
          },
          {
            "name": "SERVICE_UNAVAILABLE",
            "description": "Service Unavailable - a general error occurred."
          },
          {
            "name": "TEMPORARY_ERROR",
            "description": "A temporary internal error occurred. You can safely retry your call\nusing the same idempotency key."
          },
          {
            "name": "GATEWAY_TIMEOUT",
            "description": "Gateway Timeout - a general error occurred."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ExcludeStrategy": {
        "type": "string",
        "description": "Indicates which products matched by a CatalogPricingRule\nwill be excluded if the pricing rule uses an exclude set.",
        "enum": [
          "LEAST_EXPENSIVE",
          "MOST_EXPENSIVE"
        ],
        "x-enum-elements": [
          {
            "name": "LEAST_EXPENSIVE",
            "description": "The least expensive matched products are excluded from the pricing. If\nthe pricing rule is set to exclude one product and multiple products in the\nmatch set qualify as least expensive, then one will be excluded at random.\n\nExcluding the least expensive product gives the best discount value to the buyer."
          },
          {
            "name": "MOST_EXPENSIVE",
            "description": "The most expensive matched product is excluded from the pricing rule.\nIf multiple products have the same price and all qualify as least expensive,\none will be excluded at random.\n\nThis guarantees that the most expensive product is purchased at full price."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InlineTypes": {
        "type": "string",
        "description": "Object types to inline under their respective parent object in certain connect v2 responses",
        "enum": [
          "INLINE_NONE",
          "INLINE_VARIATIONS",
          "INLINE_ALL"
        ],
        "x-enum-elements": [
          {
            "name": "INLINE_NONE",
            "description": ""
          },
          {
            "name": "INLINE_VARIATIONS",
            "description": ""
          },
          {
            "name": "INLINE_ALL",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "InventoryAlertType": {
        "type": "string",
        "description": "Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation is low.",
        "enum": [
          "NONE",
          "LOW_QUANTITY"
        ],
        "x-enum-elements": [
          {
            "name": "NONE",
            "description": "The variation does not display an alert."
          },
          {
            "name": "LOW_QUANTITY",
            "description": "The variation generates an alert when its quantity is low."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "InventoryChangeType": {
        "type": "string",
        "description": "Indicates how the inventory change was applied to a tracked quantity of items.",
        "enum": [
          "PHYSICAL_COUNT",
          "ADJUSTMENT",
          "TRANSFER"
        ],
        "x-enum-elements": [
          {
            "name": "PHYSICAL_COUNT",
            "description": "The change occurred as part of a physical count update."
          },
          {
            "name": "ADJUSTMENT",
            "description": "The change occurred as part of the normal lifecycle of goods\n(e.g., as an inventory adjustment)."
          },
          {
            "name": "TRANSFER",
            "description": "The change occurred as part of an inventory transfer."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "InventoryState": {
        "type": "string",
        "description": "Indicates the state of a tracked item quantity in the lifecycle of goods.",
        "enum": [
          "CUSTOM",
          "IN_STOCK",
          "SOLD",
          "RETURNED_BY_CUSTOMER",
          "RESERVED_FOR_SALE",
          "SOLD_ONLINE",
          "ORDERED_FROM_VENDOR",
          "RECEIVED_FROM_VENDOR",
          "IN_TRANSIT_TO",
          "NONE",
          "WASTE",
          "UNLINKED_RETURN"
        ],
        "x-enum-elements": [
          {
            "name": "CUSTOM",
            "description": "The related quantity of items are in a custom state. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
          },
          {
            "name": "IN_STOCK",
            "description": "The related quantity of items are on hand and available for sale."
          },
          {
            "name": "SOLD",
            "description": "The related quantity of items were sold as part of an itemized\ntransaction. Quantities in the `SOLD` state are no longer tracked."
          },
          {
            "name": "RETURNED_BY_CUSTOMER",
            "description": "The related quantity of items were returned through the Square Point\nof Sale application, but are not yet available for sale. **READ-ONLY**:\nthe Inventory API cannot move quantities to or from this state."
          },
          {
            "name": "RESERVED_FOR_SALE",
            "description": "The related quantity of items are on hand, but not currently\navailable for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
          },
          {
            "name": "SOLD_ONLINE",
            "description": "The related quantity of items were sold online. **READ-ONLY**: the\nInventory API cannot move quantities to or from this state."
          },
          {
            "name": "ORDERED_FROM_VENDOR",
            "description": "The related quantity of items were ordered from a vendor but not yet\nreceived. **READ-ONLY**: the Inventory API cannot move quantities to or\nfrom this state."
          },
          {
            "name": "RECEIVED_FROM_VENDOR",
            "description": "The related quantity of items were received from a vendor but are\nnot yet available for sale. **READ-ONLY**: the Inventory API cannot move\nquantities to or from this state."
          },
          {
            "name": "IN_TRANSIT_TO",
            "description": "The related quantity of items are in transit between locations.\n*READ-ONLY**: the Inventory API cannot move quantities to or from this\nstate."
          },
          {
            "name": "NONE",
            "description": "A placeholder indicating that the related quantity of items are not\ncurrently tracked in Square. Transferring quantities from the `NONE` state\nto a tracked state (e.g., `IN_STOCK`) introduces stock into the system."
          },
          {
            "name": "WASTE",
            "description": "The related quantity of items are lost or damaged and cannot be\nsold."
          },
          {
            "name": "UNLINKED_RETURN",
            "description": "The related quantity of items were returned but not linked to a\nprevious transaction. Unlinked returns are not tracked in Square.\nTransferring a quantity from `UNLINKED_RETURN` to a tracked state (e.g.,\n`IN_STOCK`) introduces new stock into the system."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "InvoiceAutomaticPaymentSource": {
        "type": "string",
        "description": "Indicates the automatic payment method for an `invoice payment request`.",
        "enum": [
          "NONE",
          "CARD_ON_FILE",
          "BANK_ON_FILE"
        ],
        "x-enum-elements": [
          {
            "name": "NONE",
            "description": "An automatic payment is not configured for the payment request."
          },
          {
            "name": "CARD_ON_FILE",
            "description": "Use a card on file as the automatic payment method. On the due date, Square charges the card\nfor the amount of the payment request.\n\nFor `CARD_ON_FILE` payments, the invoice delivery method must be `EMAIL` and `card_id` must be\nspecified for the payment request before the invoice can be published."
          },
          {
            "name": "BANK_ON_FILE",
            "description": "Use a bank account on file as the automatic payment method. On the due date, Square charges the bank\naccount for the amount of the payment request.\n\nThis payment method applies only to recurring invoices that sellers create in the Seller Dashboard or other\nSquare first-party application. The bank account is provided by the customer during the payment flow. \n\nYou cannot set `BANK_ON_FILE` as a payment method using the Invoices API, but you can change a `BANK_ON_FILE`\npayment method to `NONE` or `CARD_ON_FILE`. For `BANK_ON_FILE` payments, the invoice delivery method must be `EMAIL`."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceCustomFieldPlacement": {
        "type": "string",
        "description": "Indicates where to render a custom field on the Square-hosted invoice page and in emailed or PDF \ncopies of the invoice.",
        "enum": [
          "ABOVE_LINE_ITEMS",
          "BELOW_LINE_ITEMS"
        ],
        "x-enum-elements": [
          {
            "name": "ABOVE_LINE_ITEMS",
            "description": "Render the custom field above the invoice line items."
          },
          {
            "name": "BELOW_LINE_ITEMS",
            "description": "Render the custom field below the invoice line items."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceDeliveryMethod": {
        "type": "string",
        "description": "Indicates how Square delivers the `invoice` to the customer.",
        "enum": [
          "EMAIL",
          "SHARE_MANUALLY",
          "SMS"
        ],
        "x-enum-elements": [
          {
            "name": "EMAIL",
            "description": "Directs Square to send invoices, reminders, and receipts to the customer using email."
          },
          {
            "name": "SHARE_MANUALLY",
            "description": "Directs Square to take no action on the invoice. In this case, the seller\nor application developer follows up with the customer for payment. For example,\na seller might collect a payment in the Seller Dashboard or Point of Sale (POS) application.\nThe seller might also share the URL of the Square-hosted invoice page (`public_url`) with the customer to request payment."
          },
          {
            "name": "SMS",
            "description": "Directs Square to send invoices and receipts to the customer using SMS (text message).\n\nYou cannot set `SMS` as a delivery method using the Invoices API, but you can change an `SMS` delivery method to `EMAIL` or `SHARE_MANUALLY`."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoicePaymentReminderStatus": {
        "type": "string",
        "description": "The status of a payment request reminder.",
        "enum": [
          "PENDING",
          "NOT_APPLICABLE",
          "SENT"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "The reminder is to be sent on the `relative_scheduled_date` (if the invoice is published)."
          },
          {
            "name": "NOT_APPLICABLE",
            "description": "The reminder is not applicable and is not sent. The following are examples\nof when reminders are not applicable and are not sent:\n- You schedule a reminder to be sent before the invoice is published.\n- The invoice is configured with multiple payment requests and a payment request reminder\nis configured to be sent after the next payment request `due_date`.\n- Two reminders (for different payment requests) are configured to be sent on the\nsame date. Therefore, only one reminder is sent.\n- You configure a reminder to be sent on the date that the invoice is scheduled to be sent.\n- The payment request is already paid.\n- The invoice status is `CANCELED` or `FAILED`."
          },
          {
            "name": "SENT",
            "description": "The reminder is sent."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceRequestMethod": {
        "type": "string",
        "description": "Specifies the action for Square to take for processing the invoice. For example, \nemail the invoice, charge a customer's card on file, or do nothing. DEPRECATED at version 2021-01-21. The corresponding `request_method` field is replaced by the `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.",
        "enum": [
          "EMAIL",
          "CHARGE_CARD_ON_FILE",
          "SHARE_MANUALLY",
          "CHARGE_BANK_ON_FILE",
          "SMS",
          "SMS_CHARGE_CARD_ON_FILE",
          "SMS_CHARGE_BANK_ON_FILE"
        ],
        "x-enum-elements": [
          {
            "name": "EMAIL",
            "description": "Directs Square to send invoices, reminders, and receipts to the customer using email. Square sends the invoice after it is published \n(either immediately or at the `scheduled_at` time, if specified in the `invoice`."
          },
          {
            "name": "CHARGE_CARD_ON_FILE",
            "description": "Directs Square to charge the card on file on the `due_date` specified in the payment request and to use email to send invoices, reminders, and receipts."
          },
          {
            "name": "SHARE_MANUALLY",
            "description": "Directs Square to take no specific action on the invoice. In this case, the seller \n(or the application developer) follows up with the customer for payment. For example, \na seller might collect a payment in the Seller Dashboard or use the Point of Sale (POS) application. \nThe seller might also share the URL of the Square-hosted invoice page (`public_url`) with the customer requesting payment."
          },
          {
            "name": "CHARGE_BANK_ON_FILE",
            "description": "Directs Square to charge the bank account on file on the `due_date` specified in the\npayment request and to use email to send invoices, reminders, and receipts.\n\nThe bank on file payment method applies only to recurring invoices that sellers create in the Seller Dashboard or other\nSquare first-party applications. The bank account is provided by the customer during the payment flow. You \ncannot set `CHARGE_BANK_ON_FILE` as a request method using the Invoices API."
          },
          {
            "name": "SMS",
            "description": "Directs Square to send invoices and receipts to the customer using SMS (text message). Square sends the invoice after it is published (either immediately or at the `scheduled_at` time, if specified in the `invoice`. \n\nYou cannot set `SMS` as a request method using the Invoices API."
          },
          {
            "name": "SMS_CHARGE_CARD_ON_FILE",
            "description": "Directs Square to charge the card on file on the `due_date` specified in the payment request and to use SMS (text message) to send invoices and receipts. \n\nYou cannot set `SMS_CHARGE_CARD_ON_FILE` as a request method using the Invoices API."
          },
          {
            "name": "SMS_CHARGE_BANK_ON_FILE",
            "description": "Directs Square to charge the bank account on file on the `due_date` specified in the payment request and to use SMS (text message) to send invoices and receipts. \n\nThe bank on file payment method applies only to recurring invoices that sellers create in the Seller Dashboard or other Square first-party applications. The bank account is provided by the customer during the payment flow. You cannot set `SMS_CHARGE_BANK_ON_FILE` as a request method using the Invoices API."
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "InvoiceRequestType": {
        "type": "string",
        "description": "Indicates the type of the payment request. An invoice supports the following payment request combinations:\n- 1 balance\n- 1 deposit with 1 balance\n- 2 - 12 installments\n- 1 deposit with 2 - 12 installments\n\nFor more information, \nsee [Payment requests](https://developer.squareup.com/docs/docs/invoices-api/overview#payment-requests).",
        "enum": [
          "BALANCE",
          "DEPOSIT",
          "INSTALLMENT"
        ],
        "x-enum-elements": [
          {
            "name": "BALANCE",
            "description": "Identifies that the payment request is for the balance amount, after accounting for any \nother payment requests in the invoice: \n\n- If the invoice specifies only a balance payment request, it refers to the \ntotal amount identified by the associated order. \n- If the invoice also specifies a deposit request, the balance payment request refers to \nthe remaining amount.\n- `INSTALLMENT` and `BALANCE` are not allowed together."
          },
          {
            "name": "DEPOSIT",
            "description": "Identifies that the payment request is for a deposit. You have the option of specifying \nan exact amount or a percentage of the total order amount. If you request a deposit, \nit must be due before any other payment requests."
          },
          {
            "name": "INSTALLMENT",
            "description": "Identifies that the payment request is for an installment. An invoice can request payments in installments. \nAlong with installments, you can request an optional deposit. All these payment requests must add to the total order amount."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceSortField": {
        "type": "string",
        "description": "Field to use for sorting.",
        "enum": [
          "INVOICE_SORT_DATE"
        ],
        "x-enum-elements": [
          {
            "name": "INVOICE_SORT_DATE",
            "description": "The field works as follows:\n\n- If the invoice is a draft, it uses the invoice `created_at` date.\n- If the invoice is scheduled for publication, it uses the `scheduled_at` date.\n- If the invoice is published, it uses the invoice publication date."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceStatus": {
        "type": "string",
        "description": "Indicates the status of an invoice.",
        "enum": [
          "DRAFT",
          "UNPAID",
          "SCHEDULED",
          "PARTIALLY_PAID",
          "PAID",
          "PARTIALLY_REFUNDED",
          "REFUNDED",
          "CANCELED",
          "FAILED",
          "PAYMENT_PENDING"
        ],
        "x-enum-elements": [
          {
            "name": "DRAFT",
            "description": "The invoice is a draft. You must publish a draft invoice before Square can process it.\nA draft invoice has no `public_url`, so it is not available to customers."
          },
          {
            "name": "UNPAID",
            "description": "The invoice is published but not yet paid."
          },
          {
            "name": "SCHEDULED",
            "description": "The invoice is scheduled to be processed. On the scheduled date,\nSquare sends the invoice, initiates an automatic payment, or takes no action, depending on the delivery method and payment request settings. Square also sets the invoice status to the appropriate state:\n`UNPAID`, `PAID`, `PARTIALLY_PAID`, or `PAYMENT_PENDING`."
          },
          {
            "name": "PARTIALLY_PAID",
            "description": "A partial payment is received for the invoice."
          },
          {
            "name": "PAID",
            "description": "The customer paid the invoice in full."
          },
          {
            "name": "PARTIALLY_REFUNDED",
            "description": "The invoice is paid (or partially paid) and some but not all the amount paid is\nrefunded."
          },
          {
            "name": "REFUNDED",
            "description": "The full amount that the customer paid for the invoice is refunded."
          },
          {
            "name": "CANCELED",
            "description": "The invoice is canceled. Square no longer requests payments from the customer.\nThe `public_url` page remains and is accessible, but it displays the invoice\nas cancelled and does not accept payment."
          },
          {
            "name": "FAILED",
            "description": "Square canceled the invoice due to suspicious activity."
          },
          {
            "name": "PAYMENT_PENDING",
            "description": "A payment on the invoice was initiated but has not yet been processed.\n\nWhen in this state, invoices cannot be updated and other payments cannot be initiated."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "JobAssignmentPayType": {
        "type": "string",
        "description": "Enumerates the possible pay types that a job can be assigned.",
        "enum": [
          "NONE",
          "HOURLY",
          "SALARY"
        ],
        "x-enum-elements": [
          {
            "name": "NONE",
            "description": "The job does not have a defined pay type."
          },
          {
            "name": "HOURLY",
            "description": "The job pays on an hourly basis."
          },
          {
            "name": "SALARY",
            "description": "The job pays an annual salary."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "LocationCapability": {
        "type": "string",
        "description": "The capabilities a location may have.",
        "enum": [
          "CREDIT_CARD_PROCESSING"
        ],
        "x-enum-elements": [
          {
            "name": "CREDIT_CARD_PROCESSING",
            "description": "The permission to process credit card transactions with Square.\n\nThe location can process credit cards if this value is present\nin the `capabilities` array of the `Location`."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "LocationStatus": {
        "type": "string",
        "description": "The status of the location, whether a location is active or inactive.",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": "A location that is active for business."
          },
          {
            "name": "INACTIVE",
            "description": "A location that is not active for business. Inactive locations just provide historical\ninformation, so typically clients limit interaction with or hide these locations."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "LocationType": {
        "type": "string",
        "description": "A location's physical or mobile type.",
        "enum": [
          "PHYSICAL",
          "MOBILE"
        ],
        "x-enum-elements": [
          {
            "name": "PHYSICAL",
            "description": "A place of business with a physical location."
          },
          {
            "name": "MOBILE",
            "description": "A place of business that is mobile, such as a food truck or online store."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "LoyaltyAccountMappingType": {
        "type": "string",
        "description": "The type of mapping.",
        "enum": [
          "PHONE"
        ],
        "x-enum-elements": [
          {
            "name": "PHONE",
            "description": "The loyalty account is mapped by phone."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventSource": {
        "type": "string",
        "description": "Defines whether the event was generated by the Square Point of Sale.",
        "enum": [
          "SQUARE",
          "LOYALTY_API"
        ],
        "x-enum-elements": [
          {
            "name": "SQUARE",
            "description": "The event is generated by the Square Point of Sale (POS)."
          },
          {
            "name": "LOYALTY_API",
            "description": "The event is generated by something other than the Square Point of Sale that used the Loyalty API."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventType": {
        "type": "string",
        "description": "The type of the loyalty event.",
        "enum": [
          "ACCUMULATE_POINTS",
          "CREATE_REWARD",
          "REDEEM_REWARD",
          "DELETE_REWARD",
          "ADJUST_POINTS",
          "EXPIRE_POINTS",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "ACCUMULATE_POINTS",
            "description": "Points are added to a loyalty account for a purchase."
          },
          {
            "name": "CREATE_REWARD",
            "description": "A loyalty reward is created. For more information, see  \n[Loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-overview-loyalty-rewards)."
          },
          {
            "name": "REDEEM_REWARD",
            "description": "A loyalty reward is redeemed."
          },
          {
            "name": "DELETE_REWARD",
            "description": "A loyalty reward is deleted."
          },
          {
            "name": "ADJUST_POINTS",
            "description": "Loyalty points are manually adjusted."
          },
          {
            "name": "EXPIRE_POINTS",
            "description": "Loyalty points are expired according to the \nexpiration policy of the loyalty program."
          },
          {
            "name": "OTHER",
            "description": "Some other loyalty event occurred."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramAccrualRuleType": {
        "type": "string",
        "description": "The type of the accrual rule that defines how buyers can earn points.",
        "enum": [
          "VISIT",
          "SPEND",
          "ITEM_VARIATION",
          "CATEGORY"
        ],
        "x-enum-elements": [
          {
            "name": "VISIT",
            "description": "A visit-based accrual rule. A buyer earns points for each visit. \nYou can specify the minimum purchase required."
          },
          {
            "name": "SPEND",
            "description": "A spend-based accrual rule. A buyer earns points based on the amount \nspent."
          },
          {
            "name": "ITEM_VARIATION",
            "description": "An accrual rule based on an item variation. For example, accrue \npoints for purchasing a coffee."
          },
          {
            "name": "CATEGORY",
            "description": "An accrual rule based on an item category. For example, accrue points \nfor purchasing any item in the \"hot drink\" category: coffee, tea, or hot cocoa."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramRewardDefinitionScope": {
        "type": "string",
        "description": "Indicates the scope of the reward tier. DEPRECATED at version 2020-12-16. Discount details\nare now defined using a catalog pricing rule and other catalog objects. For more information, see\n[Get discount details for the reward](https://developer.squareup.com/docs/docs/loyalty-api/overview#get-discount-details).",
        "enum": [
          "ORDER",
          "ITEM_VARIATION",
          "CATEGORY"
        ],
        "x-enum-elements": [
          {
            "name": "ORDER",
            "description": "The discount applies to the entire order."
          },
          {
            "name": "ITEM_VARIATION",
            "description": "The discount applies only to specific item variations."
          },
          {
            "name": "CATEGORY",
            "description": "The discount applies only to items in the given categories."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramRewardDefinitionType": {
        "type": "string",
        "description": "The type of discount the reward tier offers. DEPRECATED at version 2020-12-16. Discount details\nare now defined using a catalog pricing rule and other catalog objects. For more information, see\n[Get discount details for the reward](https://developer.squareup.com/docs/docs/loyalty-api/overview#get-discount-details).",
        "enum": [
          "FIXED_AMOUNT",
          "FIXED_PERCENTAGE"
        ],
        "x-enum-elements": [
          {
            "name": "FIXED_AMOUNT",
            "description": "The fixed amount discounted."
          },
          {
            "name": "FIXED_PERCENTAGE",
            "description": "The fixed percentage discounted."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramStatus": {
        "type": "string",
        "description": "Indicates whether the program is currently active.",
        "enum": [
          "INACTIVE",
          "ACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "INACTIVE",
            "description": "The loyalty program does not have an active subscription. \nLoyalty API requests fail."
          },
          {
            "name": "ACTIVE",
            "description": "The program is fully functional. The program has an active subscription."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyRewardStatus": {
        "type": "string",
        "description": "The status of the loyalty reward.",
        "enum": [
          "ISSUED",
          "REDEEMED",
          "DELETED"
        ],
        "x-enum-elements": [
          {
            "name": "ISSUED",
            "description": "The reward is issued."
          },
          {
            "name": "REDEEMED",
            "description": "The reward is redeemed."
          },
          {
            "name": "DELETED",
            "description": "The reward is deleted."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitArea": {
        "type": "string",
        "description": "Unit of area used to measure a quantity.",
        "enum": [
          "IMPERIAL_ACRE",
          "IMPERIAL_SQUARE_INCH",
          "IMPERIAL_SQUARE_FOOT",
          "IMPERIAL_SQUARE_YARD",
          "IMPERIAL_SQUARE_MILE",
          "METRIC_SQUARE_CENTIMETER",
          "METRIC_SQUARE_METER",
          "METRIC_SQUARE_KILOMETER"
        ],
        "x-enum-elements": [
          {
            "name": "IMPERIAL_ACRE",
            "description": "The area is measured in acres."
          },
          {
            "name": "IMPERIAL_SQUARE_INCH",
            "description": "The area is measured in square inches."
          },
          {
            "name": "IMPERIAL_SQUARE_FOOT",
            "description": "The area is measured in square feet."
          },
          {
            "name": "IMPERIAL_SQUARE_YARD",
            "description": "The area is measured in square yards."
          },
          {
            "name": "IMPERIAL_SQUARE_MILE",
            "description": "The area is measured in square miles."
          },
          {
            "name": "METRIC_SQUARE_CENTIMETER",
            "description": "The area is measured in square centimeters."
          },
          {
            "name": "METRIC_SQUARE_METER",
            "description": "The area is measured in square meters."
          },
          {
            "name": "METRIC_SQUARE_KILOMETER",
            "description": "The area is measured in square kilometers."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitGeneric": {
        "type": "string",
        "description": "",
        "enum": [
          "UNIT"
        ],
        "x-enum-elements": [
          {
            "name": "UNIT",
            "description": "The generic unit."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitLength": {
        "type": "string",
        "description": "The unit of length used to measure a quantity.",
        "enum": [
          "IMPERIAL_INCH",
          "IMPERIAL_FOOT",
          "IMPERIAL_YARD",
          "IMPERIAL_MILE",
          "METRIC_MILLIMETER",
          "METRIC_CENTIMETER",
          "METRIC_METER",
          "METRIC_KILOMETER"
        ],
        "x-enum-elements": [
          {
            "name": "IMPERIAL_INCH",
            "description": "The length is measured in inches."
          },
          {
            "name": "IMPERIAL_FOOT",
            "description": "The length is measured in feet."
          },
          {
            "name": "IMPERIAL_YARD",
            "description": "The length is measured in yards."
          },
          {
            "name": "IMPERIAL_MILE",
            "description": "The length is measured in miles."
          },
          {
            "name": "METRIC_MILLIMETER",
            "description": "The length is measured in millimeters."
          },
          {
            "name": "METRIC_CENTIMETER",
            "description": "The length is measured in centimeters."
          },
          {
            "name": "METRIC_METER",
            "description": "The length is measured in meters."
          },
          {
            "name": "METRIC_KILOMETER",
            "description": "The length is measured in kilometers."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitTime": {
        "type": "string",
        "description": "Unit of time used to measure a quantity (a duration).",
        "enum": [
          "GENERIC_MILLISECOND",
          "GENERIC_SECOND",
          "GENERIC_MINUTE",
          "GENERIC_HOUR",
          "GENERIC_DAY"
        ],
        "x-enum-elements": [
          {
            "name": "GENERIC_MILLISECOND",
            "description": "The time is measured in milliseconds."
          },
          {
            "name": "GENERIC_SECOND",
            "description": "The time is measured in seconds."
          },
          {
            "name": "GENERIC_MINUTE",
            "description": "The time is measured in minutes."
          },
          {
            "name": "GENERIC_HOUR",
            "description": "The time is measured in hours."
          },
          {
            "name": "GENERIC_DAY",
            "description": "The time is measured in days."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitUnitType": {
        "type": "string",
        "description": "Describes the type of this unit and indicates which field contains the unit information. This is an ‘open’ enum.",
        "enum": [
          "TYPE_CUSTOM",
          "TYPE_AREA",
          "TYPE_LENGTH",
          "TYPE_VOLUME",
          "TYPE_WEIGHT",
          "TYPE_GENERIC"
        ],
        "x-enum-elements": [
          {
            "name": "TYPE_CUSTOM",
            "description": "The unit details are contained in the custom_unit field."
          },
          {
            "name": "TYPE_AREA",
            "description": "The unit details are contained in the area_unit field."
          },
          {
            "name": "TYPE_LENGTH",
            "description": "The unit details are contained in the length_unit field."
          },
          {
            "name": "TYPE_VOLUME",
            "description": "The unit details are contained in the volume_unit field."
          },
          {
            "name": "TYPE_WEIGHT",
            "description": "The unit details are contained in the weight_unit field."
          },
          {
            "name": "TYPE_GENERIC",
            "description": "The unit details are contained in the generic_unit field."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitVolume": {
        "type": "string",
        "description": "The unit of volume used to measure a quantity.",
        "enum": [
          "GENERIC_FLUID_OUNCE",
          "GENERIC_SHOT",
          "GENERIC_CUP",
          "GENERIC_PINT",
          "GENERIC_QUART",
          "GENERIC_GALLON",
          "IMPERIAL_CUBIC_INCH",
          "IMPERIAL_CUBIC_FOOT",
          "IMPERIAL_CUBIC_YARD",
          "METRIC_MILLILITER",
          "METRIC_LITER"
        ],
        "x-enum-elements": [
          {
            "name": "GENERIC_FLUID_OUNCE",
            "description": "The volume is measured in ounces."
          },
          {
            "name": "GENERIC_SHOT",
            "description": "The volume is measured in shots."
          },
          {
            "name": "GENERIC_CUP",
            "description": "The volume is measured in cups."
          },
          {
            "name": "GENERIC_PINT",
            "description": "The volume is measured in pints."
          },
          {
            "name": "GENERIC_QUART",
            "description": "The volume is measured in quarts."
          },
          {
            "name": "GENERIC_GALLON",
            "description": "The volume is measured in gallons."
          },
          {
            "name": "IMPERIAL_CUBIC_INCH",
            "description": "The volume is measured in cubic inches."
          },
          {
            "name": "IMPERIAL_CUBIC_FOOT",
            "description": "The volume is measured in cubic feet."
          },
          {
            "name": "IMPERIAL_CUBIC_YARD",
            "description": "The volume is measured in cubic yards."
          },
          {
            "name": "METRIC_MILLILITER",
            "description": "The volume is measured in metric milliliters."
          },
          {
            "name": "METRIC_LITER",
            "description": "The volume is measured in metric liters."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitWeight": {
        "type": "string",
        "description": "Unit of weight used to measure a quantity.",
        "enum": [
          "IMPERIAL_WEIGHT_OUNCE",
          "IMPERIAL_POUND",
          "IMPERIAL_STONE",
          "METRIC_MILLIGRAM",
          "METRIC_GRAM",
          "METRIC_KILOGRAM"
        ],
        "x-enum-elements": [
          {
            "name": "IMPERIAL_WEIGHT_OUNCE",
            "description": "The weight is measured in ounces."
          },
          {
            "name": "IMPERIAL_POUND",
            "description": "The weight is measured in pounds."
          },
          {
            "name": "IMPERIAL_STONE",
            "description": "The weight is measured in stones."
          },
          {
            "name": "METRIC_MILLIGRAM",
            "description": "The weight is measured in milligrams."
          },
          {
            "name": "METRIC_GRAM",
            "description": "The weight is measured in grams."
          },
          {
            "name": "METRIC_KILOGRAM",
            "description": "The weight is measured in kilograms."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MerchantStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": "A fully operational merchant account. The merchant can interact with Square products and APIs."
          },
          {
            "name": "INACTIVE",
            "description": "A functionally limited merchant account. The merchant can only have limited interaction\nvia Square APIs. The merchant cannot access the seller dashboard."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentPickupDetailsScheduleType": {
        "type": "string",
        "description": "The schedule type of the pickup fulfillment.",
        "enum": [
          "SCHEDULED",
          "ASAP"
        ],
        "x-enum-elements": [
          {
            "name": "SCHEDULED",
            "description": "Indicates the fulfillment will be picked up at a scheduled pickup time."
          },
          {
            "name": "ASAP",
            "description": "Indicates the fulfillment will be picked up as soon as possible and\nshould be prepared immediately."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentState": {
        "type": "string",
        "description": "The current state of this fulfillment.",
        "enum": [
          "PROPOSED",
          "RESERVED",
          "PREPARED",
          "COMPLETED",
          "CANCELED",
          "FAILED"
        ],
        "x-enum-elements": [
          {
            "name": "PROPOSED",
            "description": "Indicates the fulfillment has been proposed."
          },
          {
            "name": "RESERVED",
            "description": "Indicates the fulfillment has been reserved."
          },
          {
            "name": "PREPARED",
            "description": "Indicates the fulfillment has been prepared."
          },
          {
            "name": "COMPLETED",
            "description": "Indicates the fulfillment was successfully completed."
          },
          {
            "name": "CANCELED",
            "description": "Indicates the fulfillment was canceled."
          },
          {
            "name": "FAILED",
            "description": "Indicates the fulfillment failed to be completed but was not explicitly\ncanceled."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentType": {
        "type": "string",
        "description": "The type of fulfillment.",
        "enum": [
          "PICKUP",
          "SHIPMENT"
        ],
        "x-enum-elements": [
          {
            "name": "PICKUP",
            "description": "A fulfillment to be picked up from a physical `location`\nby a recipient."
          },
          {
            "name": "SHIPMENT",
            "description": "A fulfillment to be shipped by a shipping carrier."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemDiscountScope": {
        "type": "string",
        "description": "Indicates whether this is a line item or order level discount.",
        "enum": [
          "OTHER_DISCOUNT_SCOPE",
          "LINE_ITEM",
          "ORDER"
        ],
        "x-enum-elements": [
          {
            "name": "OTHER_DISCOUNT_SCOPE",
            "description": "Used for reporting only.\nThe original transaction discount scope is currently not supported by the API."
          },
          {
            "name": "LINE_ITEM",
            "description": "The discount should be applied to only line items specified by\n`OrderLineItemAppliedDiscount` reference records."
          },
          {
            "name": "ORDER",
            "description": "The discount should be applied to the entire order."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemDiscountType": {
        "type": "string",
        "description": "Indicates how the discount is applied to the associated line item or order.",
        "enum": [
          "UNKNOWN_DISCOUNT",
          "FIXED_PERCENTAGE",
          "FIXED_AMOUNT",
          "VARIABLE_PERCENTAGE",
          "VARIABLE_AMOUNT"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_DISCOUNT",
            "description": "Used for reporting only.\nThe original transaction discount type is currently not supported by the API."
          },
          {
            "name": "FIXED_PERCENTAGE",
            "description": "Apply the discount as a fixed percentage (e.g., 5%) off the item price."
          },
          {
            "name": "FIXED_AMOUNT",
            "description": "Apply the discount as a fixed monetary value (e.g., $1.00) off the item price."
          },
          {
            "name": "VARIABLE_PERCENTAGE",
            "description": "Apply the discount as a variable percentage based on the item\nprice.\n\nThe specific discount percentage of a `VARIABLE_PERCENTAGE` discount\nis assigned at the time of the purchase."
          },
          {
            "name": "VARIABLE_AMOUNT",
            "description": "Apply the discount as a variable amount based on the item price.\n\nThe specific discount amount of a `VARIABLE_AMOUNT` discount\nis assigned at the time of the purchase."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemTaxScope": {
        "type": "string",
        "description": "Indicates whether this is a line item or order level tax.",
        "enum": [
          "OTHER_TAX_SCOPE",
          "LINE_ITEM",
          "ORDER"
        ],
        "x-enum-elements": [
          {
            "name": "OTHER_TAX_SCOPE",
            "description": "Used for reporting only.\nThe original transaction tax scope is currently not supported by the API."
          },
          {
            "name": "LINE_ITEM",
            "description": "The tax should be applied only to line items specified by\nthe `OrderLineItemAppliedTax` reference records."
          },
          {
            "name": "ORDER",
            "description": "The tax should be applied to the entire order."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemTaxType": {
        "type": "string",
        "description": "Indicates how the tax is applied to the associated line item or order.",
        "enum": [
          "UNKNOWN_TAX",
          "ADDITIVE",
          "INCLUSIVE"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN_TAX",
            "description": "Used for reporting only.\nThe original transaction tax type is currently not supported by the API."
          },
          {
            "name": "ADDITIVE",
            "description": "The tax is an additive tax. The tax amount is added on top of the price.\nFor example, an item with a cost of 1.00 USD and a 10% additive tax would have a total\ncost to the buyer of 1.10 USD."
          },
          {
            "name": "INCLUSIVE",
            "description": "The tax is an inclusive tax. Inclusive taxes are already included\nin the line item price or order total. For example, an item with cost\n1.00 USD with a 10% inclusive tax would have a pre-tax cost of 0.91 USD\n(91 cents) and a 0.09 (9 cents) tax for a total cost of 1.00 USD to\nthe buyer."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderServiceChargeCalculationPhase": {
        "type": "string",
        "description": "Represents a phase in the process of calculating order totals.\nService charges are applied __after__ the indicated phase.\n\n[Read more about how order totals are calculated.](https://developer.squareup.com/docs/docs/orders-api/how-it-works#how-totals-are-calculated)",
        "enum": [
          "SUBTOTAL_PHASE",
          "TOTAL_PHASE"
        ],
        "x-enum-elements": [
          {
            "name": "SUBTOTAL_PHASE",
            "description": "The service charge will be applied after discounts, but before\ntaxes."
          },
          {
            "name": "TOTAL_PHASE",
            "description": "The service charge will be applied after all discounts and taxes\nare applied."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "OrderState": {
        "type": "string",
        "description": "The state of the order.",
        "enum": [
          "OPEN",
          "COMPLETED",
          "CANCELED"
        ],
        "x-enum-elements": [
          {
            "name": "OPEN",
            "description": "Indicates the order is open. Open orders may be updated."
          },
          {
            "name": "COMPLETED",
            "description": "Indicates the order is completed. Completed orders are fully paid. This is a terminal state."
          },
          {
            "name": "CANCELED",
            "description": "Indicates the order is canceled. Canceled orders are not paid. This is a terminal state."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "Product": {
        "type": "string",
        "description": "Indicates the Square product used to generate an inventory change.",
        "enum": [
          "SQUARE_POS",
          "EXTERNAL_API",
          "BILLING",
          "APPOINTMENTS",
          "INVOICES",
          "ONLINE_STORE",
          "PAYROLL",
          "DASHBOARD",
          "ITEM_LIBRARY_IMPORT",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "SQUARE_POS",
            "description": "Square Point of Sale application."
          },
          {
            "name": "EXTERNAL_API",
            "description": "Square Connect APIs (Transactions API, Checkout API)."
          },
          {
            "name": "BILLING",
            "description": "A Square subscription (various products)."
          },
          {
            "name": "APPOINTMENTS",
            "description": "Square Appointments."
          },
          {
            "name": "INVOICES",
            "description": "Square Invoices."
          },
          {
            "name": "ONLINE_STORE",
            "description": "Square Online Store."
          },
          {
            "name": "PAYROLL",
            "description": "Square Payroll."
          },
          {
            "name": "DASHBOARD",
            "description": "Square Dashboard"
          },
          {
            "name": "ITEM_LIBRARY_IMPORT",
            "description": "Item Library Import"
          },
          {
            "name": "OTHER",
            "description": "A Square product that does not match any other value."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ProductType": {
        "type": "string",
        "description": "",
        "enum": [
          "TERMINAL_API"
        ],
        "x-enum-elements": [
          {
            "name": "TERMINAL_API",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "RefundStatus": {
        "type": "string",
        "description": "Indicates a refund's current status.",
        "enum": [
          "PENDING",
          "APPROVED",
          "REJECTED",
          "FAILED"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "The refund is pending."
          },
          {
            "name": "APPROVED",
            "description": "The refund has been approved by Square."
          },
          {
            "name": "REJECTED",
            "description": "The refund has been rejected by Square."
          },
          {
            "name": "FAILED",
            "description": "The refund failed."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "RegisterDomainResponseStatus": {
        "type": "string",
        "description": "The status of the domain registration.",
        "enum": [
          "PENDING",
          "VERIFIED"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "The domain is added, but not verified."
          },
          {
            "name": "VERIFIED",
            "description": "The domain is added and verified. It can be used to accept Apple Pay transactions."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "RiskEvaluationRiskLevel": {
        "type": "string",
        "description": "",
        "enum": [
          "PENDING",
          "NORMAL",
          "MODERATE",
          "HIGH"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "Indicates Square is still evaluating the payment."
          },
          {
            "name": "NORMAL",
            "description": "Indicates payment risk is within the normal range."
          },
          {
            "name": "MODERATE",
            "description": "Indicates elevated risk level associated with the payment."
          },
          {
            "name": "HIGH",
            "description": "Indicates significantly elevated risk level with the payment."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchCatalogItemsRequestStockLevel": {
        "type": "string",
        "description": "Defines supported stock levels of the item inventory.",
        "enum": [
          "OUT",
          "LOW"
        ],
        "x-enum-elements": [
          {
            "name": "OUT",
            "description": "The item inventory is empty."
          },
          {
            "name": "LOW",
            "description": "The item inventory is low."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchOrdersSortField": {
        "type": "string",
        "description": "Specifies which timestamp to use to sort SearchOrder results.",
        "enum": [
          "CREATED_AT",
          "UPDATED_AT",
          "CLOSED_AT"
        ],
        "x-enum-elements": [
          {
            "name": "CREATED_AT",
            "description": "Time when the order was created in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `CREATED_AT`\nfield in your DateTimeFilter."
          },
          {
            "name": "UPDATED_AT",
            "description": "Time when the order last updated in RFC-3339 format. If you are also\nfiltering for a time range in this query, you must set the `UPDATED_AT`\nfield in your DateTimeFilter."
          },
          {
            "name": "CLOSED_AT",
            "description": "Time when the order was closed in RFC-3339 format. If you use this\nvalue, you must also set a StateFilter with closed states. If you are also\nfiltering for a time range in this query, you must set the `CLOSED_AT`\nfield in your DateTimeFilter."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ShiftFilterStatus": {
        "type": "string",
        "description": "Specifies the `status` of `Shift` records to be returned.",
        "enum": [
          "OPEN",
          "CLOSED"
        ],
        "x-enum-elements": [
          {
            "name": "OPEN",
            "description": "Shifts that have been started and not ended."
          },
          {
            "name": "CLOSED",
            "description": "Shifts that have been started and ended."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ShiftSortField": {
        "type": "string",
        "description": "Enumerates the `Shift` fields to sort on.",
        "enum": [
          "START_AT",
          "END_AT",
          "CREATED_AT",
          "UPDATED_AT"
        ],
        "x-enum-elements": [
          {
            "name": "START_AT",
            "description": "The start date/time of a `Shift`"
          },
          {
            "name": "END_AT",
            "description": "The end date/time of a `Shift`"
          },
          {
            "name": "CREATED_AT",
            "description": "The date/time that a `Shift` is created"
          },
          {
            "name": "UPDATED_AT",
            "description": "The most recent date/time that a `Shift` is updated"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ShiftStatus": {
        "type": "string",
        "description": "Enumerates the possible status of a `Shift`",
        "enum": [
          "OPEN",
          "CLOSED"
        ],
        "x-enum-elements": [
          {
            "name": "OPEN",
            "description": "Employee started a work shift and the shift is not complete"
          },
          {
            "name": "CLOSED",
            "description": "Employee started and ended a work shift."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "ShiftWorkdayMatcher": {
        "type": "string",
        "description": "Defines the logic used to apply a workday filter.",
        "enum": [
          "START_AT",
          "END_AT",
          "INTERSECTION"
        ],
        "x-enum-elements": [
          {
            "name": "START_AT",
            "description": "All shifts that start on or after the specified workday"
          },
          {
            "name": "END_AT",
            "description": "All shifts that end on or before the specified workday"
          },
          {
            "name": "INTERSECTION",
            "description": "All shifts that start between the start and end workdays (inclusive)"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "SortOrder": {
        "type": "string",
        "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
        "enum": [
          "DESC",
          "ASC"
        ],
        "x-enum-elements": [
          {
            "name": "DESC",
            "description": "The results are returned in descending (e.g., newest-first or Z-A) order."
          },
          {
            "name": "ASC",
            "description": "The results are returned in ascending (e.g., oldest-first or A-Z) order."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "SubscriptionCadence": {
        "type": "string",
        "description": "Determines the billing cadence of a `Subscription`",
        "enum": [
          "DAILY",
          "WEEKLY",
          "EVERY_TWO_WEEKS",
          "THIRTY_DAYS",
          "SIXTY_DAYS",
          "NINETY_DAYS",
          "MONTHLY",
          "EVERY_TWO_MONTHS",
          "QUARTERLY",
          "EVERY_FOUR_MONTHS",
          "EVERY_SIX_MONTHS",
          "ANNUAL",
          "EVERY_TWO_YEARS"
        ],
        "x-enum-elements": [
          {
            "name": "DAILY",
            "description": "Once per day"
          },
          {
            "name": "WEEKLY",
            "description": "Once per week"
          },
          {
            "name": "EVERY_TWO_WEEKS",
            "description": "Every two weeks"
          },
          {
            "name": "THIRTY_DAYS",
            "description": "Once every 30 days"
          },
          {
            "name": "SIXTY_DAYS",
            "description": "Once every 60 days"
          },
          {
            "name": "NINETY_DAYS",
            "description": "Once every 90 days"
          },
          {
            "name": "MONTHLY",
            "description": "Once per month"
          },
          {
            "name": "EVERY_TWO_MONTHS",
            "description": "Once every two months"
          },
          {
            "name": "QUARTERLY",
            "description": "Once every three months"
          },
          {
            "name": "EVERY_FOUR_MONTHS",
            "description": "Once every four months"
          },
          {
            "name": "EVERY_SIX_MONTHS",
            "description": "Once every six months"
          },
          {
            "name": "ANNUAL",
            "description": "Once per year"
          },
          {
            "name": "EVERY_TWO_YEARS",
            "description": "Once every two years"
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SubscriptionEventSubscriptionEventType": {
        "type": "string",
        "description": "The possible subscription event types.",
        "enum": [
          "START_SUBSCRIPTION",
          "PLAN_CHANGE",
          "STOP_SUBSCRIPTION"
        ],
        "x-enum-elements": [
          {
            "name": "START_SUBSCRIPTION",
            "description": "The subscription started."
          },
          {
            "name": "PLAN_CHANGE",
            "description": "The subscription plan changed."
          },
          {
            "name": "STOP_SUBSCRIPTION",
            "description": "The subscription stopped."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SubscriptionStatus": {
        "type": "string",
        "description": "Possible subscription status values.",
        "enum": [
          "PENDING",
          "ACTIVE",
          "CANCELED"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": "The subscription starts in the future."
          },
          {
            "name": "ACTIVE",
            "description": "The subscription is active."
          },
          {
            "name": "CANCELED",
            "description": "The subscription is canceled."
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "TaxCalculationPhase": {
        "type": "string",
        "description": "When to calculate the taxes due on a cart.",
        "enum": [
          "TAX_SUBTOTAL_PHASE",
          "TAX_TOTAL_PHASE"
        ],
        "x-enum-elements": [
          {
            "name": "TAX_SUBTOTAL_PHASE",
            "description": "The fee is calculated based on the payment's subtotal."
          },
          {
            "name": "TAX_TOTAL_PHASE",
            "description": "The fee is calculated based on the payment's total."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TaxInclusionType": {
        "type": "string",
        "description": "Whether to the tax amount should be additional to or included in the CatalogItem price.",
        "enum": [
          "ADDITIVE",
          "INCLUSIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ADDITIVE",
            "description": "The tax is an additive tax. The tax amount is added on top of the\nCatalogItemVariation price. For example, a $1.00 item with a 10% additive\ntax would have a total cost to the buyer of $1.10."
          },
          {
            "name": "INCLUSIVE",
            "description": "The tax is an inclusive tax. The tax amount is included in the\nCatalogItemVariation price. For example, a $1.00 item with a 10% inclusive\ntax would have a total cost to the buyer of $1.00, with $0.91 (91 cents) of\nthat total being the cost of the item and $0.09 (9 cents) being tax."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TeamMemberAssignedLocationsAssignmentType": {
        "type": "string",
        "description": "Enumerates the possible assignment types the team member can have",
        "enum": [
          "ALL_CURRENT_AND_FUTURE_LOCATIONS",
          "EXPLICIT_LOCATIONS"
        ],
        "x-enum-elements": [
          {
            "name": "ALL_CURRENT_AND_FUTURE_LOCATIONS",
            "description": "The team member is assigned to all curent and future locations - the location_ids field\nis empty if the team member has this assignment type."
          },
          {
            "name": "EXPLICIT_LOCATIONS",
            "description": "The team member is assigned to an explicit subset of locations - the location_ids field\nis the list of locations that the team member is assigned to."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TeamMemberStatus": {
        "type": "string",
        "description": "Enumerates the possible statuses the team member can have within a business.",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": "The team member can log in to Point of Sale and Dashboard."
          },
          {
            "name": "INACTIVE",
            "description": "The team member can no longer log in to Point of Sale or Dashboard,\nbut their sales reports remain available."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TenderCardDetailsEntryMethod": {
        "type": "string",
        "description": "Indicates the method used to enter the card's details.",
        "enum": [
          "SWIPED",
          "KEYED",
          "EMV",
          "ON_FILE",
          "CONTACTLESS"
        ],
        "x-enum-elements": [
          {
            "name": "SWIPED",
            "description": "The card was swiped through a Square reader or Square stand."
          },
          {
            "name": "KEYED",
            "description": "The card information was keyed manually into Square Point of Sale or a\nSquare-hosted web form."
          },
          {
            "name": "EMV",
            "description": "The card was processed via EMV with a Square reader."
          },
          {
            "name": "ON_FILE",
            "description": "The buyer's card details were already on file with Square."
          },
          {
            "name": "CONTACTLESS",
            "description": "The card was processed via a contactless (i.e., NFC) transaction\nwith a Square reader."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TenderCardDetailsStatus": {
        "type": "string",
        "description": "Indicates the card transaction's current status.",
        "enum": [
          "AUTHORIZED",
          "CAPTURED",
          "VOIDED",
          "FAILED"
        ],
        "x-enum-elements": [
          {
            "name": "AUTHORIZED",
            "description": "The card transaction has been authorized but not yet captured."
          },
          {
            "name": "CAPTURED",
            "description": "The card transaction was authorized and subsequently captured (i.e., completed)."
          },
          {
            "name": "VOIDED",
            "description": "The card transaction was authorized and subsequently voided (i.e., canceled)."
          },
          {
            "name": "FAILED",
            "description": "The card transaction failed."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TenderType": {
        "type": "string",
        "description": "Indicates a tender's type.",
        "enum": [
          "CARD",
          "CASH",
          "THIRD_PARTY_CARD",
          "SQUARE_GIFT_CARD",
          "NO_SALE",
          "WALLET",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "CARD",
            "description": "A credit card."
          },
          {
            "name": "CASH",
            "description": "Cash."
          },
          {
            "name": "THIRD_PARTY_CARD",
            "description": "A credit card processed with a card processor other than Square.\n\nThis value applies only to merchants in countries where Square does not\nyet provide card processing."
          },
          {
            "name": "SQUARE_GIFT_CARD",
            "description": "A Square gift card."
          },
          {
            "name": "NO_SALE",
            "description": "This tender represents the register being opened for a \"no sale\" event."
          },
          {
            "name": "WALLET",
            "description": "A payment from a digital wallet, e.g. Cash App.\n\nNote: Some \"digital wallets\", including Google Pay and Apple Pay, facilitate\ncard payments.  Those payments have the `CARD` type."
          },
          {
            "name": "OTHER",
            "description": "A form of tender that does not match any other value."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TerminalCheckoutPaymentType": {
        "type": "string",
        "description": "",
        "enum": [
          "CARD_PRESENT",
          "MANUAL_CARD_ENTRY",
          "FELICA_ID",
          "FELICA_QUICPAY",
          "FELICA_TRANSPORTATION_GROUP",
          "FELICA_ALL"
        ],
        "x-enum-elements": [
          {
            "name": "CARD_PRESENT",
            "description": "Accept credit card or debit card payments via tap, dip or swipe."
          },
          {
            "name": "MANUAL_CARD_ENTRY",
            "description": "Launches the manual credit or debit card entry screen for the buyer to complete."
          },
          {
            "name": "FELICA_ID",
            "description": "Launches the iD checkout screen for the buyer to complete."
          },
          {
            "name": "FELICA_QUICPAY",
            "description": "Launches the QUICPay checkout screen for the buyer to complete."
          },
          {
            "name": "FELICA_TRANSPORTATION_GROUP",
            "description": "Launches the Transportation Group checkout screen for the buyer to complete."
          },
          {
            "name": "FELICA_ALL",
            "description": "Launches a checkout screen for the buyer on the Square Terminal that\nallows them to select a specific FeliCa brand or select the check balance screen."
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "TransactionProduct": {
        "type": "string",
        "description": "Indicates the Square product used to process a transaction.",
        "enum": [
          "REGISTER",
          "EXTERNAL_API",
          "BILLING",
          "APPOINTMENTS",
          "INVOICES",
          "ONLINE_STORE",
          "PAYROLL",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "REGISTER",
            "description": "Square Point of Sale."
          },
          {
            "name": "EXTERNAL_API",
            "description": "The Square Connect API."
          },
          {
            "name": "BILLING",
            "description": "A Square subscription for one of multiple products."
          },
          {
            "name": "APPOINTMENTS",
            "description": "Square Appointments."
          },
          {
            "name": "INVOICES",
            "description": "Square Invoices."
          },
          {
            "name": "ONLINE_STORE",
            "description": "Square Online Store."
          },
          {
            "name": "PAYROLL",
            "description": "Square Payroll."
          },
          {
            "name": "OTHER",
            "description": "A Square product that does not match any other value."
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "TransactionType": {
        "type": "string",
        "description": "The transaction type used in the disputed payment.",
        "enum": [
          "DEBIT",
          "CREDIT"
        ],
        "x-enum-elements": [
          {
            "name": "DEBIT",
            "description": ""
          },
          {
            "name": "CREDIT",
            "description": ""
          }
        ],
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "V1CreateRefundRequestType": {
        "type": "string",
        "description": "",
        "enum": [
          "FULL",
          "PARTIAL"
        ],
        "x-enum-elements": [
          {
            "name": "FULL",
            "description": ""
          },
          {
            "name": "PARTIAL",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1EmployeeRolePermissions": {
        "type": "string",
        "description": "",
        "enum": [
          "REGISTER_ACCESS_SALES_HISTORY",
          "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
          "REGISTER_CHANGE_SETTINGS",
          "REGISTER_EDIT_ITEM",
          "REGISTER_ISSUE_REFUNDS",
          "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
          "REGISTER_VIEW_SUMMARY_REPORTS"
        ],
        "x-enum-elements": [
          {
            "name": "REGISTER_ACCESS_SALES_HISTORY",
            "description": ""
          },
          {
            "name": "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
            "description": ""
          },
          {
            "name": "REGISTER_CHANGE_SETTINGS",
            "description": ""
          },
          {
            "name": "REGISTER_EDIT_ITEM",
            "description": ""
          },
          {
            "name": "REGISTER_ISSUE_REFUNDS",
            "description": ""
          },
          {
            "name": "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
            "description": ""
          },
          {
            "name": "REGISTER_VIEW_SUMMARY_REPORTS",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1EmployeeStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": ""
          },
          {
            "name": "INACTIVE",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1ListEmployeesRequestStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ACTIVE",
            "description": ""
          },
          {
            "name": "INACTIVE",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1ListSettlementsRequestStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "SENT",
          "FAILED"
        ],
        "x-enum-elements": [
          {
            "name": "SENT",
            "description": ""
          },
          {
            "name": "FAILED",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1OrderHistoryEntryAction": {
        "type": "string",
        "description": "",
        "enum": [
          "ORDER_PLACED",
          "DECLINED",
          "PAYMENT_RECEIVED",
          "CANCELED",
          "COMPLETED",
          "REFUNDED",
          "EXPIRED"
        ],
        "x-enum-elements": [
          {
            "name": "ORDER_PLACED",
            "description": ""
          },
          {
            "name": "DECLINED",
            "description": ""
          },
          {
            "name": "PAYMENT_RECEIVED",
            "description": ""
          },
          {
            "name": "CANCELED",
            "description": ""
          },
          {
            "name": "COMPLETED",
            "description": ""
          },
          {
            "name": "REFUNDED",
            "description": ""
          },
          {
            "name": "EXPIRED",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1OrderState": {
        "type": "string",
        "description": "",
        "enum": [
          "PENDING",
          "OPEN",
          "COMPLETED",
          "CANCELED",
          "REFUNDED",
          "REJECTED"
        ],
        "x-enum-elements": [
          {
            "name": "PENDING",
            "description": ""
          },
          {
            "name": "OPEN",
            "description": ""
          },
          {
            "name": "COMPLETED",
            "description": ""
          },
          {
            "name": "CANCELED",
            "description": ""
          },
          {
            "name": "REFUNDED",
            "description": ""
          },
          {
            "name": "REJECTED",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1PaymentItemizationItemizationType": {
        "type": "string",
        "description": "",
        "enum": [
          "ITEM",
          "CUSTOM_AMOUNT",
          "GIFT_CARD_ACTIVATION",
          "GIFT_CARD_RELOAD",
          "GIFT_CARD_UNKNOWN",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "ITEM",
            "description": ""
          },
          {
            "name": "CUSTOM_AMOUNT",
            "description": ""
          },
          {
            "name": "GIFT_CARD_ACTIVATION",
            "description": ""
          },
          {
            "name": "GIFT_CARD_RELOAD",
            "description": ""
          },
          {
            "name": "GIFT_CARD_UNKNOWN",
            "description": ""
          },
          {
            "name": "OTHER",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1PaymentSurchargeType": {
        "type": "string",
        "description": "",
        "enum": [
          "UNKNOWN",
          "AUTO_GRATUITY",
          "CUSTOM"
        ],
        "x-enum-elements": [
          {
            "name": "UNKNOWN",
            "description": ""
          },
          {
            "name": "AUTO_GRATUITY",
            "description": ""
          },
          {
            "name": "CUSTOM",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1PaymentTaxInclusionType": {
        "type": "string",
        "description": "",
        "enum": [
          "ADDITIVE",
          "INCLUSIVE"
        ],
        "x-enum-elements": [
          {
            "name": "ADDITIVE",
            "description": ""
          },
          {
            "name": "INCLUSIVE",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1RefundType": {
        "type": "string",
        "description": "",
        "enum": [
          "FULL",
          "PARTIAL"
        ],
        "x-enum-elements": [
          {
            "name": "FULL",
            "description": ""
          },
          {
            "name": "PARTIAL",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1SettlementEntryType": {
        "type": "string",
        "description": "",
        "enum": [
          "ADJUSTMENT",
          "BALANCE_CHARGE",
          "CHARGE",
          "FREE_PROCESSING",
          "HOLD_ADJUSTMENT",
          "PAID_SERVICE_FEE",
          "PAID_SERVICE_FEE_REFUND",
          "REDEMPTION_CODE",
          "REFUND",
          "RETURNED_PAYOUT",
          "SQUARE_CAPITAL_ADVANCE",
          "SQUARE_CAPITAL_PAYMENT",
          "SQUARE_CAPITAL_REVERSED_PAYMENT",
          "SUBSCRIPTION_FEE",
          "SUBSCRIPTION_FEE_REFUND",
          "OTHER",
          "INCENTED_PAYMENT",
          "RETURNED_ACH_ENTRY",
          "RETURNED_SQUARE_275",
          "SQUARE_275",
          "SQUARE_CARD"
        ],
        "x-enum-elements": [
          {
            "name": "ADJUSTMENT",
            "description": "A manual adjustment applied to the merchant's account by Square"
          },
          {
            "name": "BALANCE_CHARGE",
            "description": "A payment from an existing Square balance, such as a gift card"
          },
          {
            "name": "CHARGE",
            "description": "A credit card payment CAPTURE"
          },
          {
            "name": "FREE_PROCESSING",
            "description": "Square offers Free Payments Processing for a variety of business scenarios including seller referral or when we want to apologize for a bug, customer service, repricing complication, etc. This entry represents a credit to the merchant for the purposes of Free Processing."
          },
          {
            "name": "HOLD_ADJUSTMENT",
            "description": "An adjustment made by Square related to holding/releasing a payment"
          },
          {
            "name": "PAID_SERVICE_FEE",
            "description": "a fee paid to a 3rd party merchant"
          },
          {
            "name": "PAID_SERVICE_FEE_REFUND",
            "description": "a refund for a 3rd party merchant fee"
          },
          {
            "name": "REDEMPTION_CODE",
            "description": "Repayment for a redemption code"
          },
          {
            "name": "REFUND",
            "description": "A refund for an existing card payment"
          },
          {
            "name": "RETURNED_PAYOUT",
            "description": "An entry created when we receive a response for the ACH file we sent indicating that the settlement of the original entry failed."
          },
          {
            "name": "SQUARE_CAPITAL_ADVANCE",
            "description": "Initial deposit to a merchant for a Capital merchant cash advance (MCA)."
          },
          {
            "name": "SQUARE_CAPITAL_PAYMENT",
            "description": "Capital merchant cash advance (MCA) assessment. These are, generally, proportional to the merchant's sales but may be issued for other reasons related to the MCA."
          },
          {
            "name": "SQUARE_CAPITAL_REVERSED_PAYMENT",
            "description": "Capital merchant cash advance (MCA) assessment refund. These are, generally, proportional to the merchant's refunds but may be issued for other reasons related to the MCA."
          },
          {
            "name": "SUBSCRIPTION_FEE",
            "description": "Fee charged for subscription to a Square product"
          },
          {
            "name": "SUBSCRIPTION_FEE_REFUND",
            "description": "Refund of a previously charged Square product subscription fee."
          },
          {
            "name": "OTHER",
            "description": ""
          },
          {
            "name": "INCENTED_PAYMENT",
            "description": "A payment in which Square covers part of the funds for a purchase"
          },
          {
            "name": "RETURNED_ACH_ENTRY",
            "description": "A settlement failed to be processed and the settlement amount has been returned to the account"
          },
          {
            "name": "RETURNED_SQUARE_275",
            "description": "Refund for cancelling a Square Plus subscription"
          },
          {
            "name": "SQUARE_275",
            "description": "Fee charged for a Square Plus subscription ($275)"
          },
          {
            "name": "SQUARE_CARD",
            "description": "Settlements to or withdrawals from the Square Card (an asset)"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1SettlementStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "FAILED",
          "SENT"
        ],
        "x-enum-elements": [
          {
            "name": "FAILED",
            "description": ""
          },
          {
            "name": "SENT",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "V1TenderCardBrand": {
        "type": "string",
        "description": "The brand of a credit card.",
        "enum": [
          "OTHER_BRAND",
          "VISA",
          "MASTER_CARD",
          "AMERICAN_EXPRESS",
          "DISCOVER",
          "DISCOVER_DINERS",
          "JCB",
          "CHINA_UNIONPAY",
          "SQUARE_GIFT_CARD"
        ],
        "x-enum-elements": [
          {
            "name": "OTHER_BRAND",
            "description": ""
          },
          {
            "name": "VISA",
            "description": ""
          },
          {
            "name": "MASTER_CARD",
            "description": ""
          },
          {
            "name": "AMERICAN_EXPRESS",
            "description": ""
          },
          {
            "name": "DISCOVER",
            "description": ""
          },
          {
            "name": "DISCOVER_DINERS",
            "description": ""
          },
          {
            "name": "JCB",
            "description": ""
          },
          {
            "name": "CHINA_UNIONPAY",
            "description": ""
          },
          {
            "name": "SQUARE_GIFT_CARD",
            "description": ""
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1TenderEntryMethod": {
        "type": "string",
        "description": "",
        "enum": [
          "MANUAL",
          "SCANNED",
          "SQUARE_CASH",
          "SQUARE_WALLET",
          "SWIPED",
          "WEB_FORM",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "MANUAL",
            "description": ""
          },
          {
            "name": "SCANNED",
            "description": ""
          },
          {
            "name": "SQUARE_CASH",
            "description": ""
          },
          {
            "name": "SQUARE_WALLET",
            "description": ""
          },
          {
            "name": "SWIPED",
            "description": ""
          },
          {
            "name": "WEB_FORM",
            "description": ""
          },
          {
            "name": "OTHER",
            "description": ""
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1TenderType": {
        "type": "string",
        "description": "",
        "enum": [
          "CREDIT_CARD",
          "CASH",
          "THIRD_PARTY_CARD",
          "NO_SALE",
          "SQUARE_WALLET",
          "SQUARE_GIFT_CARD",
          "UNKNOWN",
          "OTHER"
        ],
        "x-enum-elements": [
          {
            "name": "CREDIT_CARD",
            "description": ""
          },
          {
            "name": "CASH",
            "description": ""
          },
          {
            "name": "THIRD_PARTY_CARD",
            "description": ""
          },
          {
            "name": "NO_SALE",
            "description": ""
          },
          {
            "name": "SQUARE_WALLET",
            "description": ""
          },
          {
            "name": "SQUARE_GIFT_CARD",
            "description": ""
          },
          {
            "name": "UNKNOWN",
            "description": ""
          },
          {
            "name": "OTHER",
            "description": ""
          }
        ],
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1UpdateOrderRequestAction": {
        "type": "string",
        "description": "",
        "enum": [
          "COMPLETE",
          "CANCEL",
          "REFUND"
        ],
        "x-enum-elements": [
          {
            "name": "COMPLETE",
            "description": ""
          },
          {
            "name": "CANCEL",
            "description": ""
          },
          {
            "name": "REFUND",
            "description": ""
          }
        ],
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "Weekday": {
        "type": "string",
        "description": "The days of the week.",
        "enum": [
          "MON",
          "TUE",
          "WED",
          "THU",
          "FRI",
          "SAT",
          "SUN"
        ],
        "x-enum-elements": [
          {
            "name": "MON",
            "description": "Monday"
          },
          {
            "name": "TUE",
            "description": "Tuesday"
          },
          {
            "name": "WED",
            "description": "Wednesday"
          },
          {
            "name": "THU",
            "description": "Thursday"
          },
          {
            "name": "FRI",
            "description": "Friday"
          },
          {
            "name": "SAT",
            "description": "Saturday"
          },
          {
            "name": "SUN",
            "description": "Sunday"
          }
        ],
        "x-release-status": "PUBLIC"
      },
      "AcceptDisputeRequest": {
        "type": "object",
        "description": "Defines the request parameters for the `AcceptDispute` endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AcceptDisputeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "dispute": {
            "$ref": "#/components/schemas/Dispute"
          }
        },
        "description": "Defines the fields in an `AcceptDispute` response.",
        "example": {
          "dispute": {
            "dispute_id": "XDgyFu7yo1E2S5lQGGpYn",
            "amount_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "reason": "NO_KNOWLEDGE",
            "state": "LOST",
            "due_at": "2018-11-01T00:00:00.000Z",
            "disputed_payments": [
              {
                "payment_id": "6Ee10wvqhfipStz297mtUhBXvaB"
              }
            ],
            "card_brand": "VISA",
            "created_at": "2018-10-18T15:59:13.613Z",
            "updated_at": "2018-10-18T15:59:13.613Z",
            "brand_dispute_id": "100000282394"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AccumulateLoyaltyPointsRequest": {
        "required": [
          "accumulate_points",
          "idempotency_key",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "accumulate_points": {
            "$ref": "#/components/schemas/LoyaltyEventAccumulatePoints"
          },
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies the `AccumulateLoyaltyPoints` request. \nKeys can be any valid string but must be unique for every request."
          },
          "location_id": {
            "type": "string",
            "description": "The `location` where the purchase was made."
          }
        },
        "description": "A request to accumulate points for a purchase.",
        "example": {
          "request_params": "?account_id=5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "request_body": {
            "accumulate_points": {
              "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
            },
            "location_id": "P034NEENMD09F",
            "idempotency_key": "58b90739-c3e8-4b11-85f7-e636d48d72cb"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AccumulateLoyaltyPointsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "event": {
            "$ref": "#/components/schemas/LoyaltyEvent"
          }
        },
        "description": "A response containing the resulting loyalty event.",
        "example": {
          "event": {
            "id": "ee46aafd-1af6-3695-a385-276e2ef0be26",
            "type": "ACCUMULATE_POINTS",
            "created_at": "2020-05-08T21:41:12Z",
            "accumulate_points": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "points": 6,
              "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "location_id": "P034NEENMD09F",
            "source": "LOYALTY_API"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AddGroupToCustomerRequest": {
        "type": "object",
        "description": "Defines the fields that are included in the request body of\na request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "AddGroupToCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [AddGroupToCustomer](#endpoint-addgrouptocustomer) endpoint.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "AdditionalRecipient": {
        "required": [
          "amount_money",
          "description",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The location ID for a recipient (other than the merchant) receiving a portion of this tender."
          },
          "description": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The description of the additional recipient."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "receivable_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The unique ID for this `AdditionalRecipientReceivable`, assigned by the server."
          }
        },
        "description": "Represents an additional recipient (other than the merchant) receiving a portion of this tender.",
        "x-release-status": "PUBLIC"
      },
      "Address": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "type": "string",
            "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields)."
          },
          "address_line_2": {
            "type": "string",
            "description": "The second line of the address, if any."
          },
          "address_line_3": {
            "type": "string",
            "description": "The third line of the address, if any."
          },
          "locality": {
            "type": "string",
            "description": "The city or town of the address."
          },
          "sublocality": {
            "type": "string",
            "description": "A civil region within the address's `locality`, if any."
          },
          "sublocality_2": {
            "type": "string",
            "description": "A civil region within the address's `sublocality`, if any."
          },
          "sublocality_3": {
            "type": "string",
            "description": "A civil region within the address's `sublocality_2`, if any."
          },
          "administrative_district_level_1": {
            "type": "string",
            "description": "A civil entity within the address's country. In the US, this\nis the state."
          },
          "administrative_district_level_2": {
            "type": "string",
            "description": "A civil entity within the address's `administrative_district_level_1`.\nIn the US, this is the county."
          },
          "administrative_district_level_3": {
            "type": "string",
            "description": "A civil entity within the address's `administrative_district_level_2`,\nif any."
          },
          "postal_code": {
            "type": "string",
            "description": "The address's postal code."
          },
          "country": {
            "type": "string",
            "description": "The address's country, in ISO 3166-1-alpha-2 format.\nSee [Country](#type-country) for possible values"
          },
          "first_name": {
            "type": "string",
            "description": "Optional first name when it's representing recipient."
          },
          "last_name": {
            "type": "string",
            "description": "Optional last name when it's representing recipient."
          },
          "organization": {
            "type": "string",
            "description": "Optional organization name when it's representing recipient."
          }
        },
        "description": "Represents a physical address.",
        "x-release-status": "PUBLIC"
      },
      "AdjustLoyaltyPointsRequest": {
        "required": [
          "adjust_points",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `AdjustLoyaltyPoints` request. \nKeys can be any valid string, but must be unique for every request."
          },
          "adjust_points": {
            "$ref": "#/components/schemas/LoyaltyEventAdjustPoints"
          }
        },
        "description": "A request to adjust (add or subtract) points manually.",
        "example": {
          "request_params": "?account_id=5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
          "request_body": {
            "adjust": {
              "points": 10,
              "reason": "Complimentary points"
            },
            "idempotency_key": "bc29a517-3dc9-450e-aa76-fae39ee849d1"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AdjustLoyaltyPointsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "event": {
            "$ref": "#/components/schemas/LoyaltyEvent"
          }
        },
        "description": "A response that includes the loyalty event that \nresulted from the successful API call.",
        "example": {
          "event": {
            "id": "613a6fca-8d67-39d0-bad2-3b4bc45c8637",
            "type": "ADJUST_POINTS",
            "created_at": "2020-05-08T21:42:32Z",
            "adjust_points": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "points": 10,
              "reason": "Complimentary points"
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "source": "LOYALTY_API"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "AppointmentSegment": {
        "required": [
          "duration_minutes",
          "service_variation_id",
          "service_variation_version",
          "team_member_id"
        ],
        "type": "object",
        "properties": {
          "duration_minutes": {
            "maximum": 1500,
            "minimum": 0,
            "type": "integer",
            "description": "The time span in minutes of an appointment segment."
          },
          "service_variation_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `CatalogItemVariation` object representing the service booked in this segment."
          },
          "team_member_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `TeamMember` object representing the team member booked in this segment."
          },
          "service_variation_version": {
            "type": "integer",
            "description": "The current version of the item variation representing the service booked in this segment.",
            "format": "int64"
          }
        },
        "description": "Defines an appointment segment of a booking.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Availability": {
        "type": "object",
        "properties": {
          "start_at": {
            "type": "string",
            "description": "The RFC-3339 timestamp specifying the beginning time of the slot available for booking."
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the location available for booking."
          },
          "appointment_segments": {
            "type": "array",
            "description": "The list of appointment segments available for booking",
            "items": {
              "$ref": "#/components/schemas/AppointmentSegment"
            }
          }
        },
        "description": "Describes a slot available for booking, encapsulating appointment segments, the location and starting time.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BalancePaymentDetails": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the account used to fund the payment."
          },
          "status": {
            "type": "string",
            "description": "The balance payment’s current state. The state can be COMPLETED or FAILED."
          }
        },
        "description": "Reflects the current status of a balance payment. Contains only non-confidential information.",
        "x-release-status": "PUBLIC"
      },
      "BankAccount": {
        "required": [
          "account_number_suffix",
          "account_type",
          "country",
          "creditable",
          "currency",
          "debitable",
          "holder_name",
          "id",
          "primary_bank_identification_number",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The unique, Square-issued identifier for the bank account."
          },
          "account_number_suffix": {
            "minLength": 1,
            "type": "string",
            "description": "The last few digits of the account number."
          },
          "country": {
            "type": "string",
            "description": "The ISO 3166 Alpha-2 country code where the bank account is based.\nSee [Country](#type-country) for possible values"
          },
          "currency": {
            "type": "string",
            "description": "The 3-character ISO 4217 currency code indicating the operating\ncurrency of the bank account. For example, the currency code for US dollars\nis `USD`.\nSee [Currency](#type-currency) for possible values"
          },
          "account_type": {
            "type": "string",
            "description": "The financial purpose of the associated bank account.\nSee [BankAccountType](#type-bankaccounttype) for possible values"
          },
          "holder_name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the account holder. This name must match the name \non the targeted bank account record."
          },
          "primary_bank_identification_number": {
            "maxLength": 40,
            "type": "string",
            "description": "Primary identifier for the bank. For more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
          },
          "secondary_bank_identification_number": {
            "maxLength": 40,
            "type": "string",
            "description": "Secondary identifier for the bank. For more information, see \n[Bank Accounts API](https://developer.squareup.com/docs/docs/bank-accounts-api)."
          },
          "debit_mandate_reference_id": {
            "type": "string",
            "description": "Reference identifier that will be displayed to UK bank account owners\nwhen collecting direct debit authorization. Only required for UK bank accounts."
          },
          "reference_id": {
            "type": "string",
            "description": "Client-provided identifier for linking the banking account to an entity\nin a third-party system (for example, a bank account number or a user identifier)."
          },
          "location_id": {
            "type": "string",
            "description": "The location to which the bank account belongs."
          },
          "status": {
            "type": "string",
            "description": "Read-only. The current verification status of this BankAccount object.\nSee [BankAccountStatus](#type-bankaccountstatus) for possible values"
          },
          "creditable": {
            "type": "boolean",
            "description": "Indicates whether it is possible for Square to send money to this bank account."
          },
          "debitable": {
            "type": "boolean",
            "description": "Indicates whether it is possible for Square to take money from this \nbank account."
          },
          "fingerprint": {
            "type": "string",
            "description": "A Square-assigned, unique identifier for the bank account based on the\naccount information. The account fingerprint can be used to compare account\nentries and determine if the they represent the same real-world bank account."
          },
          "version": {
            "type": "integer",
            "description": "The current version of the `BankAccount`."
          },
          "bank_name": {
            "maxLength": 100,
            "type": "string",
            "description": "Read only. Name of actual financial institution. \nFor example \"Bank of America\"."
          }
        },
        "description": "Represents a bank account. For more information about \nlinking a bank account to a Square account, see \n[Bank Accounts API](/docs/bank-accounts-api).",
        "x-release-status": "PUBLIC"
      },
      "BatchChangeInventoryRequest": {
        "type": "object",
        "properties": {
          "idempotency_key": {
            "type": "string",
            "description": "A client-supplied, universally unique identifier (UUID) for the\nrequest.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) in the\n[API Development 101](https://developer.squareup.com/docs/basics/api101/overview) section for more\ninformation."
          },
          "changes": {
            "type": "array",
            "description": "The set of physical counts and inventory adjustments to be made.\nChanges are applied based on the client-supplied timestamp and may be sent\nout of order.",
            "items": {
              "$ref": "#/components/schemas/InventoryChange"
            }
          },
          "ignore_unchanged_counts": {
            "type": "boolean",
            "description": "Indicates whether the current physical count should be ignored if\nthe quantity is unchanged since the last physical count. Default: `true`."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "8fc6a5b0-9fe8-4b46-b46b-2ef95793abbe",
            "changes": [
              {
                "type": "PHYSICAL_COUNT",
                "physical_count": {
                  "reference_id": "1536bfbf-efed-48bf-b17d-a197141b2a92",
                  "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
                  "state": "IN_STOCK",
                  "location_id": "C6W5YS5QM06F5",
                  "quantity": "53",
                  "employee_id": "LRK57NSQ5X7PUD05",
                  "occurred_at": "2016-11-16T22:25:24.878Z"
                }
              }
            ],
            "ignore_unchanged_counts": true
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.python",
          "csharp": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.csharp",
          "java": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.java",
          "php": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.php",
          "javascript": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.javascript",
          "ruby": "/sdk_samples/Inventory/BatchChangeInventory/BatchChangeInventoryRequest.ruby"
        }
      },
      "BatchChangeInventoryResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "counts": {
            "type": "array",
            "description": "The current counts for all objects referenced in the request.",
            "items": {
              "$ref": "#/components/schemas/InventoryCount"
            }
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "counts": [
            {
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "state": "IN_STOCK",
              "location_id": "C6W5YS5QM06F5",
              "quantity": "53",
              "calculated_at": "2016-11-16T22:28:01.223Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "BatchDeleteCatalogObjectsRequest": {
        "type": "object",
        "properties": {
          "object_ids": {
            "type": "array",
            "description": "The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\nCatalogItem will delete its CatalogItemVariation.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "object_ids": [
              "W62UWFY35CWMYGVWK6TWJDNI",
              "AA27W3M2GGTF3H6AVPNB77CK"
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python",
          "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp",
          "java": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.java",
          "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php",
          "javascript": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.javascript",
          "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby"
        }
      },
      "BatchDeleteCatalogObjectsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "deleted_object_ids": {
            "type": "array",
            "description": "The IDs of all CatalogObjects deleted by this request.",
            "items": {
              "type": "string"
            }
          },
          "deleted_at": {
            "type": "string",
            "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
          }
        },
        "description": "",
        "example": {
          "deleted_object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ],
          "deleted_at": "2016-11-16T22:25:24.878Z"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python",
          "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp",
          "java": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.java",
          "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php",
          "javascript": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.javascript",
          "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby"
        }
      },
      "BatchRetrieveCatalogObjectsRequest": {
        "required": [
          "object_ids"
        ],
        "type": "object",
        "properties": {
          "object_ids": {
            "type": "array",
            "description": "The IDs of the CatalogObjects to be retrieved.",
            "items": {
              "type": "string"
            }
          },
          "include_related_objects": {
            "type": "boolean",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a CatalogItem, its associated\nCatalogCategory objects, CatalogTax objects, CatalogImage objects and\nCatalogModifierLists will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a CatalogItemVariation,\nits parent CatalogItem will be returned in the `related_objects` field of\nthe response."
          },
          "catalog_version": {
            "type": "integer",
            "description": "The specific version of the catalog objects to be included in the response. \nThis allows you to retrieve historical versions of objects. The specified version value is matched against\nthe `CatalogObject`s' `version` attribute.",
            "format": "int64",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "object_ids": [
              "W62UWFY35CWMYGVWK6TWJDNI",
              "AA27W3M2GGTF3H6AVPNB77CK"
            ],
            "include_related_objects": true
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python",
          "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp",
          "java": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.java",
          "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php",
          "javascript": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.javascript",
          "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby"
        }
      },
      "BatchRetrieveCatalogObjectsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "objects": {
            "type": "array",
            "description": "A list of `CatalogObject`s returned.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "related_objects": {
            "type": "array",
            "description": "A list of `CatalogObject`s referenced by the object in the `objects` field.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "",
        "example": {
          "objects": [
            {
              "type": "ITEM",
              "id": "W62UWFY35CWMYGVWK6TWJDNI",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Tea",
                "description": "Hot Leaf Juice",
                "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
                "tax_ids": [
                  "HURXQOOAIC4IZSI2BEXQRYFY"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                    "updated_at": "2016-11-16T22:25:24.878Z",
                    "version": 1479335124878,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                      "name": "Mug",
                      "ordinal": 0,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 150,
                        "currency": "USD"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "ITEM",
              "id": "AA27W3M2GGTF3H6AVPNB77CK",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Coffee",
                "description": "Hot Bean Juice",
                "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
                "tax_ids": [
                  "HURXQOOAIC4IZSI2BEXQRYFY"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                    "updated_at": "2016-11-16T22:25:24.878Z",
                    "version": 1479335124878,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                      "name": "Regular",
                      "ordinal": 0,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 250,
                        "currency": "USD"
                      }
                    }
                  },
                  {
                    "type": "ITEM_VARIATION",
                    "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                    "updated_at": "2016-11-16T22:25:24.878Z",
                    "version": 1479335124878,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                      "name": "Large",
                      "ordinal": 1,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 350,
                        "currency": "USD"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "related_objects": [
            {
              "type": "CATEGORY",
              "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "category_data": {
                "name": "Beverages"
              }
            },
            {
              "type": "TAX",
              "id": "HURXQOOAIC4IZSI2BEXQRYFY",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "tax_data": {
                "name": "Sales Tax",
                "calculation_phase": "TAX_SUBTOTAL_PHASE",
                "inclusion_type": "ADDITIVE",
                "percentage": "5.0",
                "enabled": true
              }
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python",
          "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp",
          "java": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.java",
          "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php",
          "javascript": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.javascript",
          "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby"
        }
      },
      "BatchRetrieveInventoryChangesRequest": {
        "type": "object",
        "properties": {
          "catalog_object_ids": {
            "type": "array",
            "description": "The filter to return results by `CatalogObject` ID.\nThe filter is only applicable when set. The default value is null.",
            "items": {
              "type": "string"
            }
          },
          "location_ids": {
            "type": "array",
            "description": "The filter to return results by `Location` ID. \nThe filter is only applicable when set. The default value is null.",
            "items": {
              "type": "string"
            }
          },
          "types": {
            "type": "array",
            "description": "The filter to return results by `InventoryChangeType` values other than `TRANSFER`.\nThe default value is `[PHYSICAL_COUNT, ADJUSTMENT]`.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "states": {
            "type": "array",
            "description": "The filter to return `ADJUSTMENT` query results by\n`InventoryState`. This filter is only applied when set.\nThe default value is null.\nSee [InventoryState](#type-inventorystate) for possible values",
            "items": {
              "type": "string"
            }
          },
          "updated_after": {
            "type": "string",
            "description": "The filter to return results with their `calculated_at` value  \nafter the given time as specified in an RFC 3339 timestamp. \nThe default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
          },
          "updated_before": {
            "type": "string",
            "description": "The filter to return results with their `created_at` or `calculated_at` value  \nstrictly before the given time as specified in an RFC 3339 timestamp. \nThe default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "catalog_object_ids": [
              "W62UWFY35CWMYGVWK6TWJDNI"
            ],
            "location_ids": [
              "C6W5YS5QM06F5"
            ],
            "types": [
              "PHYSICAL_COUNT"
            ],
            "states": [
              "IN_STOCK"
            ],
            "updated_after": "2016-11-01T00:00:00.000Z",
            "updated_before": "2016-12-01T00:00:00.000Z"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.python",
          "csharp": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.csharp",
          "java": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.java",
          "php": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.php",
          "javascript": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.javascript",
          "ruby": "/sdk_samples/Inventory/BatchRetrieveInventoryChanges/BatchRetrieveInventoryChangesRequest.ruby"
        }
      },
      "BatchRetrieveInventoryChangesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "changes": {
            "type": "array",
            "description": "The current calculated inventory changes for the requested objects\nand locations.",
            "items": {
              "$ref": "#/components/schemas/InventoryChange"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "changes": [
            {
              "type": "PHYSICAL_COUNT",
              "physical_count": {
                "id": "46YDTW253DWGGK9HMAE6XCAO",
                "reference_id": "22c07cf4-5626-4224-89f9-691112019399",
                "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
                "catalog_object_type": "ITEM_VARIATION",
                "state": "IN_STOCK",
                "location_id": "C6W5YS5QM06F5",
                "quantity": "86",
                "source": {
                  "product": "SQUARE_POS",
                  "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                  "name": "Square Point of Sale 4.37"
                },
                "employee_id": "LRK57NSQ5X7PUD05",
                "occurred_at": "2016-11-16T22:24:49.028Z",
                "created_at": "2016-11-16T22:25:24.878Z"
              }
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "BatchRetrieveInventoryCountsRequest": {
        "type": "object",
        "properties": {
          "catalog_object_ids": {
            "type": "array",
            "description": "The filter to return results by `CatalogObject` ID.\nThe filter is applicable only when set.  The default is null.",
            "items": {
              "type": "string"
            }
          },
          "location_ids": {
            "type": "array",
            "description": "The filter to return results by `Location` ID. \nThis filter is applicable only when set. The default is null.",
            "items": {
              "type": "string"
            }
          },
          "updated_after": {
            "type": "string",
            "description": "The filter to return results with their `calculated_at` value \nafter the given time as specified in an RFC 3339 timestamp. \nThe default value is the UNIX epoch of (`1970-01-01T00:00:00Z`)."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          },
          "states": {
            "type": "array",
            "description": "The filter to return results by `InventoryState`. The filter is only applicable when set.\nIgnored are untracked states of `NONE`, `SOLD`, and `UNLINKED_RETURN`.\nThe default is null.\nSee [InventoryState](#type-inventorystate) for possible values",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "catalog_object_ids": [
              "W62UWFY35CWMYGVWK6TWJDNI"
            ],
            "location_ids": [
              "59TNP9SA8VGDA"
            ],
            "updated_after": "2016-11-16T00:00:00.000Z"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.python",
          "csharp": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.csharp",
          "java": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.java",
          "php": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.php",
          "javascript": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.javascript",
          "ruby": "/sdk_samples/Inventory/BatchRetrieveInventoryCounts/BatchRetrieveInventoryCountsRequest.ruby"
        }
      },
      "BatchRetrieveInventoryCountsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "counts": {
            "type": "array",
            "description": "The current calculated inventory counts for the requested objects\nand locations.",
            "items": {
              "$ref": "#/components/schemas/InventoryCount"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "counts": [
            {
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "state": "IN_STOCK",
              "location_id": "59TNP9SA8VGDA",
              "quantity": "79",
              "calculated_at": "2016-11-16T22:28:01.223Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "BatchRetrieveOrdersRequest": {
        "required": [
          "order_ids"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "description": "The ID of the location for these orders. This field is optional: omit it to retrieve\norders within the scope of the current authorization's merchant ID."
          },
          "order_ids": {
            "type": "array",
            "description": "The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request.",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        },
        "description": "Defines the fields that are included in requests to the\nBatchRetrieveOrders endpoint.",
        "example": {
          "request_body": {
            "location_id": "057P5VYJ4A5X1",
            "order_ids": [
              "CAISEM82RcpmcFBM0TfOyiHV3es",
              "CAISENgvlJ6jLWAzERDzjyHVybY"
            ]
          }
        },
        "x-release-status": "PUBLIC"
      },
      "BatchRetrieveOrdersResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "description": "The requested orders. This will omit any requested orders that do not exist.",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the BatchRetrieveOrders endpoint.",
        "example": {
          "orders": [
            {
              "id": "CAISEM82RcpmcFBM0TfOyiHV3es",
              "location_id": "057P5VYJ4A5X1",
              "reference_id": "my-order-001",
              "line_items": [
                {
                  "uid": "945986d1-9586-11e6-ad5a-28cfe92138cf",
                  "name": "Awesome product",
                  "quantity": "1",
                  "base_price_money": {
                    "amount": 1599,
                    "currency": "USD"
                  },
                  "total_money": {
                    "amount": 1599,
                    "currency": "USD"
                  }
                },
                {
                  "uid": "a8f4168c-9586-11e6-bdf0-28cfe92138cf",
                  "name": "Another awesome product",
                  "quantity": "3",
                  "base_price_money": {
                    "amount": 2000,
                    "currency": "USD"
                  },
                  "total_money": {
                    "amount": 6000,
                    "currency": "USD"
                  }
                }
              ],
              "total_money": {
                "amount": 7599,
                "currency": "USD"
              }
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "BatchUpsertCatalogObjectsRequest": {
        "required": [
          "batches",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "minLength": 1,
            "type": "string",
            "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you're unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          },
          "batches": {
            "type": "array",
            "description": "A batch of CatalogObjects to be inserted/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a CatalogItem with\nID `#ABC` and a CatalogItemVariation with its `item_id` attribute set to\n`#ABC` in order to associate the CatalogItemVariation with its parent\nCatalogItem.\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated.",
            "items": {
              "$ref": "#/components/schemas/CatalogObjectBatch"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "789ff020-f723-43a9-b4b5-43b5dc1fa3dc",
            "batches": [
              {
                "objects": [
                  {
                    "type": "ITEM",
                    "id": "#Tea",
                    "present_at_all_locations": true,
                    "item_data": {
                      "name": "Tea",
                      "description": "Hot Leaf Juice",
                      "category_id": "#Beverages",
                      "tax_ids": [
                        "#SalesTax"
                      ],
                      "variations": [
                        {
                          "type": "ITEM_VARIATION",
                          "id": "#Tea_Mug",
                          "present_at_all_locations": true,
                          "item_variation_data": {
                            "item_id": "#Tea",
                            "name": "Mug",
                            "pricing_type": "FIXED_PRICING",
                            "price_money": {
                              "amount": 150,
                              "currency": "USD"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "ITEM",
                    "id": "#Coffee",
                    "present_at_all_locations": true,
                    "item_data": {
                      "name": "Coffee",
                      "description": "Hot Bean Juice",
                      "category_id": "#Beverages",
                      "tax_ids": [
                        "#SalesTax"
                      ],
                      "variations": [
                        {
                          "type": "ITEM_VARIATION",
                          "id": "#Coffee_Regular",
                          "present_at_all_locations": true,
                          "item_variation_data": {
                            "item_id": "#Coffee",
                            "name": "Regular",
                            "pricing_type": "FIXED_PRICING",
                            "price_money": {
                              "amount": 250,
                              "currency": "USD"
                            }
                          }
                        },
                        {
                          "type": "ITEM_VARIATION",
                          "id": "#Coffee_Large",
                          "present_at_all_locations": true,
                          "item_variation_data": {
                            "item_id": "#Coffee",
                            "name": "Large",
                            "pricing_type": "FIXED_PRICING",
                            "price_money": {
                              "amount": 350,
                              "currency": "USD"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "CATEGORY",
                    "id": "#Beverages",
                    "present_at_all_locations": true,
                    "category_data": {
                      "name": "Beverages"
                    }
                  },
                  {
                    "type": "TAX",
                    "id": "#SalesTax",
                    "present_at_all_locations": true,
                    "tax_data": {
                      "name": "Sales Tax",
                      "calculation_phase": "TAX_SUBTOTAL_PHASE",
                      "inclusion_type": "ADDITIVE",
                      "percentage": "5.0",
                      "applies_to_custom_amounts": true,
                      "enabled": true
                    }
                  }
                ]
              }
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python",
          "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp",
          "java": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.java",
          "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php",
          "javascript": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.javascript",
          "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby"
        }
      },
      "BatchUpsertCatalogObjectsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "objects": {
            "type": "array",
            "description": "The created successfully created CatalogObjects.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"."
          },
          "id_mappings": {
            "type": "array",
            "description": "The mapping between client and server IDs for this upsert.",
            "items": {
              "$ref": "#/components/schemas/CatalogIdMapping"
            }
          }
        },
        "description": "",
        "example": {
          "objects": [
            {
              "type": "ITEM",
              "id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
              "updated_at": "2017-05-10T18:48:39.798Z",
              "version": 1494442119798,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Tea",
                "description": "Hot Leaf Juice",
                "category_id": "LYT72K3WGJFFCIMB63XARP3I",
                "tax_ids": [
                  "XHSHLHNWSI3HVI4BW5ZUZXI3"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "NAYHET5R52MIYCEF34ZMAHFM",
                    "updated_at": "2017-05-10T18:48:39.798Z",
                    "version": 1494442119798,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
                      "name": "Mug",
                      "ordinal": 0,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 150,
                        "currency": "USD"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "ITEM",
              "id": "PJMCEBHHUS3OKDB6PYUHLCPP",
              "updated_at": "2017-05-10T18:48:39.798Z",
              "version": 1494442119798,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Coffee",
                "description": "Hot Bean Juice",
                "category_id": "LYT72K3WGJFFCIMB63XARP3I",
                "tax_ids": [
                  "XHSHLHNWSI3HVI4BW5ZUZXI3"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "OTYDX45SPG7LJQUVCBZI4INH",
                    "updated_at": "2017-05-10T18:48:39.798Z",
                    "version": 1494442119798,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                      "name": "Regular",
                      "ordinal": 0,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 250,
                        "currency": "USD"
                      }
                    }
                  },
                  {
                    "type": "ITEM_VARIATION",
                    "id": "GZDA3JB37FYVOPI4AOEBOITI",
                    "updated_at": "2017-05-10T18:48:39.798Z",
                    "version": 1494442119798,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                      "name": "Large",
                      "ordinal": 1,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 350,
                        "currency": "USD"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "CATEGORY",
              "id": "LYT72K3WGJFFCIMB63XARP3I",
              "updated_at": "2017-05-10T18:48:39.798Z",
              "version": 1494442119798,
              "is_deleted": false,
              "present_at_all_locations": true,
              "category_data": {
                "name": "Beverages"
              }
            },
            {
              "type": "TAX",
              "id": "XHSHLHNWSI3HVI4BW5ZUZXI3",
              "updated_at": "2017-05-10T18:48:39.798Z",
              "version": 1494442119798,
              "is_deleted": false,
              "present_at_all_locations": true,
              "tax_data": {
                "name": "Sales Tax",
                "calculation_phase": "TAX_SUBTOTAL_PHASE",
                "inclusion_type": "ADDITIVE",
                "percentage": "5.0",
                "applies_to_custom_amounts": true,
                "enabled": true
              }
            }
          ],
          "id_mappings": [
            {
              "client_object_id": "#Tea",
              "object_id": "ZSDZN34NAXDLC6D5ZQMNSOUM"
            },
            {
              "client_object_id": "#Coffee",
              "object_id": "PJMCEBHHUS3OKDB6PYUHLCPP"
            },
            {
              "client_object_id": "#Beverages",
              "object_id": "LYT72K3WGJFFCIMB63XARP3I"
            },
            {
              "client_object_id": "#SalesTax",
              "object_id": "XHSHLHNWSI3HVI4BW5ZUZXI3"
            },
            {
              "client_object_id": "#Tea_Mug",
              "object_id": "NAYHET5R52MIYCEF34ZMAHFM"
            },
            {
              "client_object_id": "#Coffee_Regular",
              "object_id": "OTYDX45SPG7LJQUVCBZI4INH"
            },
            {
              "client_object_id": "#Coffee_Large",
              "object_id": "GZDA3JB37FYVOPI4AOEBOITI"
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python",
          "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp",
          "java": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.java",
          "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php",
          "javascript": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.javascript",
          "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby"
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID of this object representing a booking.",
            "x-read-only": true
          },
          "version": {
            "minimum": 0,
            "type": "integer",
            "description": "The revision number for the booking used for optimistic concurrency."
          },
          "status": {
            "type": "string",
            "description": "The status of the booking, describing where the booking stands with respect to the booking state machine.\nSee [BookingStatus](#type-bookingstatus) for possible values",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp specifying the creation time of this booking.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp specifying the most recent update time of this booking.",
            "x-read-only": true
          },
          "start_at": {
            "type": "string",
            "description": "The timestamp specifying the starting time of this booking."
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the `Location` object representing the location where the booked service is provided."
          },
          "customer_id": {
            "type": "string",
            "description": "The ID of the `Customer` object representing the customer attending this booking"
          },
          "customer_note": {
            "maxLength": 4096,
            "type": "string",
            "description": "The free-text field for the customer to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a relevant `CatalogObject` instance."
          },
          "seller_note": {
            "maxLength": 4096,
            "type": "string",
            "description": "The free-text field for the seller to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a specific `CatalogObject` instance.\nThis field should not be visible to customers."
          },
          "appointment_segments": {
            "type": "array",
            "description": "A list of appointment segments for this booking.",
            "items": {
              "$ref": "#/components/schemas/AppointmentSegment"
            }
          }
        },
        "description": "Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service\nat a given location to a requesting customer in one or more appointment segments.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Break": {
        "required": [
          "break_type_id",
          "expected_duration",
          "is_paid",
          "name",
          "start_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID for this object"
          },
          "start_at": {
            "minLength": 1,
            "type": "string",
            "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated."
          },
          "end_at": {
            "type": "string",
            "description": "RFC 3339; follows same timezone info as `Shift`. Precision up to\nthe minute is respected; seconds are truncated."
          },
          "break_type_id": {
            "minLength": 1,
            "type": "string",
            "description": "The `BreakType` this `Break` was templated on."
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "A human-readable name."
          },
          "expected_duration": {
            "minLength": 1,
            "type": "string",
            "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthe break."
          },
          "is_paid": {
            "type": "boolean",
            "description": "Whether this break counts towards time worked for compensation\npurposes."
          }
        },
        "description": "A record of an employee's break during a shift.",
        "x-release-status": "PUBLIC"
      },
      "BreakType": {
        "required": [
          "break_name",
          "expected_duration",
          "is_paid",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "UUID for this object."
          },
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the business location this type of break applies to."
          },
          "break_name": {
            "minLength": 1,
            "type": "string",
            "description": "A human-readable name for this type of break. Will be displayed to\nemployees in Square products."
          },
          "expected_duration": {
            "minLength": 1,
            "type": "string",
            "description": "Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of\nthis break. Precision below minutes is truncated."
          },
          "is_paid": {
            "type": "boolean",
            "description": "Whether this break counts towards time worked for compensation\npurposes."
          },
          "version": {
            "type": "integer",
            "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If a value is not\nprovided, Square's servers execute a \"blind\" write; potentially\noverwriting another writer's data."
          },
          "created_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "A defined break template that sets an expectation for possible `Break`\ninstances on a `Shift`.",
        "x-release-status": "PUBLIC"
      },
      "BulkCreateTeamMembersRequest": {
        "required": [
          "team_members"
        ],
        "type": "object",
        "properties": {
          "team_members": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CreateTeamMemberRequest"
            },
            "description": "The data which will be used to create the `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`."
          }
        },
        "description": "Represents a bulk create request for `TeamMember` objects.",
        "example": {
          "request_body": {
            "team_members": {
              "idempotency-key-1": {
                "team_member": {
                  "given_name": "Joe",
                  "family_name": "Doe",
                  "email_address": "joe_doe@gmail.com",
                  "reference_id": "reference_id_1",
                  "phone_number": "+14159283333",
                  "assigned_locations": {
                    "location_ids": [
                      "YSGH2WBKG94QZ",
                      "GA2Y9HSJ8KRYT"
                    ],
                    "assignment_type": "EXPLICIT_LOCATIONS"
                  }
                }
              },
              "idempotency-key-2": {
                "team_member": {
                  "given_name": "Jane",
                  "family_name": "Smith",
                  "email_address": "jane_smith@gmail.com",
                  "reference_id": "reference_id_2",
                  "phone_number": "+14159223334",
                  "assigned_locations": {
                    "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                  }
                }
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "BulkCreateTeamMembersResponse": {
        "type": "object",
        "properties": {
          "team_members": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CreateTeamMemberResponse"
            },
            "description": "The successfully created `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`."
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a bulk create request, containing the created `TeamMember` objects or error messages.",
        "example": {
          "team_members": {
            "idempotency-key-1": {
              "team_member": {
                "id": "ywhG1qfIOoqsHfVRubFV",
                "reference_id": "reference_id_1",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Joe",
                "family_name": "Doe",
                "email_address": "joe_doe@gmail.com",
                "phone_number": "+14159283333",
                "assigned_locations": {
                  "assignment_type": "EXPLICIT_LOCATIONS",
                  "location_ids": [
                    "GA2Y9HSJ8KRYT",
                    "YSGH2WBKG94QZ"
                  ]
                }
              }
            },
            "idempotency-key-2": {
              "team_member": {
                "id": "IF_Ncrg7fHhCqxVI9T6R",
                "reference_id": "reference_id_2",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Jane",
                "family_name": "Smith",
                "email_address": "jane_smith@gmail.com",
                "phone_number": "+14159223334",
                "assigned_locations": {
                  "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                }
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "BulkUpdateTeamMembersRequest": {
        "required": [
          "team_members"
        ],
        "type": "object",
        "properties": {
          "team_members": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UpdateTeamMemberRequest"
            },
            "description": "The data which will be used to update the `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`."
          }
        },
        "description": "Represents a bulk update request for `TeamMember` objects.",
        "example": {
          "request_body": {
            "team_members": {
              "fpgteZNMaf0qOK-a4t6P": {
                "team_member": {
                  "reference_id": "reference_id_1",
                  "is_owner": false,
                  "status": "ACTIVE",
                  "given_name": "Joe",
                  "family_name": "Doe",
                  "email_address": "joe_doe@gmail.com",
                  "phone_number": "+14159283333",
                  "assigned_locations": {
                    "location_ids": [
                      "YSGH2WBKG94QZ",
                      "GA2Y9HSJ8KRYT"
                    ],
                    "assignment_type": "EXPLICIT_LOCATIONS"
                  }
                }
              },
              "AFMwA08kR-MIF-3Vs0OE": {
                "team_member": {
                  "reference_id": "reference_id_2",
                  "is_owner": false,
                  "status": "ACTIVE",
                  "given_name": "Jane",
                  "family_name": "Smith",
                  "email_address": "jane_smith@gmail.com",
                  "phone_number": "+14159223334",
                  "assigned_locations": {
                    "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                  }
                }
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "BulkUpdateTeamMembersResponse": {
        "type": "object",
        "properties": {
          "team_members": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UpdateTeamMemberResponse"
            },
            "description": "The successfully updated `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`."
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a bulk update request, containing the updated `TeamMember` objects or error messages.",
        "example": {
          "team_members": {
            "fpgteZNMaf0qOK-a4t6P": {
              "team_member": {
                "id": "fpgteZNMaf0qOK-a4t6P",
                "reference_id": "reference_id_1",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Joe",
                "family_name": "Doe",
                "email_address": "joe_doe@gmail.com",
                "phone_number": "+14159283333",
                "created_at": "2020-06-11T22:46:57.095Z",
                "assigned_locations": {
                  "assignment_type": "EXPLICIT_LOCATIONS",
                  "location_ids": [
                    "GA2Y9HSJ8KRYT",
                    "YSGH2WBKG94QZ"
                  ]
                }
              }
            },
            "AFMwA08kR-MIF-3Vs0OE": {
              "team_member": {
                "id": "AFMwA08kR-MIF-3Vs0OE",
                "reference_id": "reference_id_2",
                "is_owner": false,
                "status": "ACTIVE",
                "given_name": "Jane",
                "family_name": "Smith",
                "email_address": "jane_smith@gmail.com",
                "phone_number": "+14159223334",
                "created_at": "2020-06-11T22:46:57.001Z",
                "assigned_locations": {
                  "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
                }
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "BusinessAppointmentSettings": {
        "type": "object",
        "properties": {
          "location_types": {
            "type": "array",
            "description": "Types of the location allowed for bookings.\nSee [BusinessAppointmentSettingsBookingLocationType](#type-businessappointmentsettingsbookinglocationtype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "alignment_time": {
            "type": "string",
            "description": "The time unit of the service duration for bookings.\nSee [BusinessAppointmentSettingsAlignmentTime](#type-businessappointmentsettingsalignmenttime) for possible values"
          },
          "min_booking_lead_time_seconds": {
            "type": "integer",
            "description": "The minimum lead time in seconds before a service can be booked. Bookings must be created at least this far ahead of the booking's starting time."
          },
          "max_booking_lead_time_seconds": {
            "type": "integer",
            "description": "The maximum lead time in seconds before a service can be booked. Bookings must be created at most this far ahead of the booking's starting time."
          },
          "any_team_member_booking_enabled": {
            "type": "boolean",
            "description": "Indicates whether a customer can choose from all available time slots and have a staff member assigned\nautomatically (`true`) or not (`false`)."
          },
          "multiple_service_booking_enabled": {
            "type": "boolean",
            "description": "Indicates whether a customer can book multiple services in a single online booking."
          },
          "max_appointments_per_day_limit_type": {
            "type": "string",
            "description": "Indicates whether the daily appointment limit applies to team members or to\nbusiness locations.\nSee [BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType](#type-businessappointmentsettingsmaxappointmentsperdaylimittype) for possible values"
          },
          "max_appointments_per_day_limit": {
            "type": "integer",
            "description": "The maximum number of daily appointments per team member or per location."
          },
          "cancellation_window_seconds": {
            "type": "integer",
            "description": "The cut-off time in seconds for allowing clients to cancel or reschedule an appointment."
          },
          "cancellation_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "cancellation_policy": {
            "type": "string",
            "description": "The cancellation policy adopted by the seller.\nSee [BusinessAppointmentSettingsCancellationPolicy](#type-businessappointmentsettingscancellationpolicy) for possible values"
          },
          "cancellation_policy_text": {
            "type": "string",
            "description": "The free-form text of the seller's cancellation policy."
          },
          "skip_booking_flow_staff_selection": {
            "type": "boolean",
            "description": "Indicates whether customers has an assigned staff member (`true`) or can select s staff member of their choice (`false`)."
          }
        },
        "description": "The service appointment settings, including where and how the service is provided.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessBookingProfile": {
        "type": "object",
        "properties": {
          "seller_id": {
            "type": "string",
            "description": "The ID of the seller, obtainable using the Merchants API."
          },
          "created_at": {
            "type": "string",
            "description": "The RFC-3339 timestamp specifying the booking's creation time.",
            "x-read-only": true
          },
          "booking_enabled": {
            "type": "boolean",
            "description": "Indicates whether the seller is open for booking."
          },
          "customer_timezone_choice": {
            "type": "string",
            "description": "The choice of customer's time zone information of a booking.\nThe Square online booking site and all notifications to customers uses either the seller location’s time zone\nor the time zone the customer chooses at booking.\nSee [BusinessBookingProfileCustomerTimezoneChoice](#type-businessbookingprofilecustomertimezonechoice) for possible values"
          },
          "booking_policy": {
            "type": "string",
            "description": "The policy for the seller to automatically accept booking requests (`ACCEPT_ALL`) or not (`REQUIRES_ACCEPTANCE`).\nSee [BusinessBookingProfileBookingPolicy](#type-businessbookingprofilebookingpolicy) for possible values"
          },
          "allow_user_cancel": {
            "type": "boolean",
            "description": "Indicates whether customers can cancel or reschedule their own bookings (`true`) or not (`false`)."
          },
          "business_appointment_settings": {
            "$ref": "#/components/schemas/BusinessAppointmentSettings"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "BusinessHours": {
        "type": "object",
        "properties": {
          "periods": {
            "type": "array",
            "description": "The list of time periods during which the business is open. There may be at most 10\nperiods per day.",
            "items": {
              "$ref": "#/components/schemas/BusinessHoursPeriod"
            }
          }
        },
        "description": "Represents the hours of operation for a business location.",
        "x-release-status": "PUBLIC"
      },
      "BusinessHoursPeriod": {
        "type": "object",
        "properties": {
          "day_of_week": {
            "type": "string",
            "description": "The day of week for this time period.\nSee [DayOfWeek](#type-dayofweek) for possible values"
          },
          "start_local_time": {
            "type": "string",
            "description": "The start time of a business hours period, specified in local time using partial-time\nRFC 3339 format."
          },
          "end_local_time": {
            "type": "string",
            "description": "The end time of a business hours period, specified in local time using partial-time\nRFC 3339 format."
          }
        },
        "description": "Represents a period of time during which a business location is open.",
        "x-release-status": "PUBLIC"
      },
      "CalculateLoyaltyPointsRequest": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The `order` ID for which to calculate the points.\nSpecify this field if your application uses the Orders API to process orders.\nOtherwise, specify the `transaction_amount`."
          },
          "transaction_amount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "A request to calculate the points that a buyer can earn from \na specified purchase.",
        "example": {
          "request_params": "?program_id=d619f755-2d17-41f3-990d-c04ecedd64dd",
          "request_body": {
            "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CalculateLoyaltyPointsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "points": {
            "minimum": 0,
            "type": "integer",
            "description": "The points that the buyer can earn from a specified purchase."
          }
        },
        "description": "A response that includes the points that the buyer can earn from \na specified purchase.",
        "example": {
          "points": 6
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CalculateOrderRequest": {
        "required": [
          "order"
        ],
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "proposed_rewards": {
            "type": "array",
            "description": "Identifies one or more loyalty reward tiers to apply during order calculation.\nThe discounts defined by the reward tiers are added to the order only to preview the\neffect of applying the specified reward(s). The reward(s) do not correspond to actual\nredemptions, that is, no `reward`s are created. Therefore, the reward `id`s are\nrandom strings used only to reference the reward tier.",
            "items": {
              "$ref": "#/components/schemas/OrderReward"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "b3e98fe3-b8de-471c-82f1-545f371e637c",
            "order": {
              "location_id": "D7AVYMEAPJ3A3",
              "discounts": [
                {
                  "name": "50% Off",
                  "percentage": "50",
                  "scope": "ORDER"
                }
              ],
              "line_items": [
                {
                  "name": "Item 1",
                  "quantity": "1",
                  "base_price_money": {
                    "amount": 500,
                    "currency": "USD"
                  }
                },
                {
                  "name": "Item 2",
                  "quantity": "2",
                  "base_price_money": {
                    "amount": 300,
                    "currency": "USD"
                  }
                }
              ]
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CalculateOrderResponse": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "order": {
            "location_id": "D7AVYMEAPJ3A3",
            "line_items": [
              {
                "uid": "ULkg0tQTRK2bkU9fNv3IJD",
                "quantity": "1",
                "name": "Item 1",
                "base_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 250,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 250,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "applied_discounts": [
                  {
                    "uid": "9zr9S4dxvPAixvn0lpa1VC",
                    "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                    "applied_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                ]
              },
              {
                "uid": "mumY8Nun4BC5aKe2yyx5a",
                "quantity": "2",
                "name": "Item 2",
                "base_price_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 600,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 600,
                  "currency": "USD"
                },
                "applied_discounts": [
                  {
                    "uid": "qa8LwwZK82FgSEkQc2HYVC",
                    "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "discounts": [
              {
                "uid": "zGsRZP69aqSSR9lq9euSPB",
                "name": "50% Off",
                "percentage": "50",
                "applied_money": {
                  "amount": 550,
                  "currency": "USD"
                },
                "type": "FIXED_PERCENTAGE",
                "scope": "ORDER"
              }
            ],
            "created_at": "2020-05-18T16:30:49.614Z",
            "updated_at": "2020-05-18T16:30:49.614Z",
            "state": "OPEN",
            "version": 1,
            "total_tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 550,
              "currency": "USD"
            },
            "total_tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_money": {
              "amount": 550,
              "currency": "USD"
            },
            "total_service_charge_money": {
              "amount": 0,
              "currency": "USD"
            },
            "net_amounts": {
              "total_money": {
                "amount": 550,
                "currency": "USD"
              },
              "tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "discount_money": {
                "amount": 550,
                "currency": "USD"
              },
              "tip_money": {
                "amount": 0,
                "currency": "USD"
              },
              "service_charge_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelBookingRequest": {
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 255,
            "type": "string",
            "description": "A unique key to make this request an idempotent operation."
          },
          "booking_version": {
            "minimum": 0,
            "type": "integer",
            "description": "The revision number for the booking used for optimistic concurrency."
          }
        },
        "description": "",
        "example": {
          "booking_version": 1
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "booking": {
            "id": "zkras0xv0xwswx",
            "version": 1,
            "status": "CANCELLED_BY_CUSTOMER",
            "created_at": "2020-10-28T15:47:41Z",
            "updated_at": "2020-10-28T15:49:25Z",
            "location_id": "LEQHH0YY8B42M",
            "customer_id": "EX2QSVGTZN4K1E5QE1CBFNVQ8M",
            "customer_note": "",
            "seller_note": "",
            "start_at": "2020-11-26T13:00:00Z",
            "appointment_segments": [
              {
                "duration_minutes": 60,
                "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                "team_member_id": "TMXUrsBWWcHTt79t",
                "service_variation_version": 1599775456731
              }
            ]
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelInvoiceRequest": {
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "The version of the `invoice` to cancel.\nIf you do not know the version, you can call \n`GetInvoice](#endpoint-Invoices-GetInvoice) or [ListInvoices`."
          }
        },
        "description": "Describes a `CancelInvoice` request.",
        "example": {
          "request_body": {
            "version": 0
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response returned by the `CancelInvoice` request.",
        "example": {
          "invoice": {
            "id": "gt2zv1z6mnUm1V7KMxxf3w",
            "version": 1,
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": true,
                "reminders": [
                  {
                    "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                    "relative_scheduled_days": -1,
                    "message": "Your invoice is due tomorrow",
                    "status": "PENDING"
                  }
                ],
                "computed_amount_money": {
                  "amount": 10000,
                  "currency": "USD"
                },
                "total_completed_amount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "automatic_payment_source": "NONE"
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "status": "CANCELED",
            "timezone": "America/Los_Angeles",
            "created_at": "2020-06-18T17:45:13Z",
            "updated_at": "2020-06-18T18:23:11Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "phone_number": "1-212-555-4240"
            },
            "custom_fields": [
              {
                "label": "Event Reference Number",
                "value": "Ref. #1234",
                "placement": "ABOVE_LINE_ITEMS"
              },
              {
                "label": "Terms of Service",
                "value": "The terms of service are...",
                "placement": "BELOW_LINE_ITEMS"
              }
            ],
            "delivery_method": "EMAIL"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelPaymentByIdempotencyKeyRequest": {
        "required": [
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string",
            "description": "The `idempotency_key` identifying the payment to be canceled."
          }
        },
        "description": "Describes a request to cancel a payment using \n[CancelPaymentByIdempotencyKey](#endpoint-payments-cancelpaymentbyidempotencykey).",
        "example": {
          "request_body": {
            "idempotency_key": "a7e36d40-d24b-11e8-b568-0800200c9a66"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CancelPaymentByIdempotencyKeyResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the response returned by \n[CancelPaymentByIdempotencyKey](#endpoint-payments-cancelpaymentbyidempotencykey).\nOn success, `errors` is empty.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "CancelPaymentRequest": {
        "type": "object",
        "description": "Describes the request to cancel (void) a payment using \n[CancelPayment](#endpoint-payments-cancelpayment). \nYou can only cancel a payment that is approved (not completed).\nFor more information, see \n[Delayed capture of a payment](https://developer.squareup.com/docs/payments-api/take-payments/card-payments#delayed-capture-of-a-card-payment).",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "CancelPaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "description": "Defines the response returned by [CancelPayment](#endpoint-payments-cancelpayment).",
        "example": {
          "payment": {
            "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "created_at": "2018-10-17T20:38:46.743Z",
            "updated_at": "2018-10-17T20:38:57.693Z",
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "app_fee_money": {
              "amount": 10,
              "currency": "USD"
            },
            "total_money": {
              "amount": 200,
              "currency": "USD"
            },
            "approved_money": {
              "amount": 200,
              "currency": "USD"
            },
            "status": "CANCELED",
            "source_type": "CARD",
            "card_details": {
              "status": "VOIDED",
              "card": {
                "card_brand": "VISA",
                "last_4": "1234",
                "exp_month": 2,
                "exp_year": 2024,
                "fingerprint": "sq-1-9PP0tWfcM6vIsYmfsesdjfhduHSDFNdJFNDfDNFjdfjpseirDErsaP",
                "card_type": "DEBIT",
                "prepaid_type": "PREPAID",
                "bin": "411111"
              },
              "entry_method": "KEYED",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "eWZBDh",
              "statement_description": "SQ *MY MERCHANT",
              "card_payment_timeline": {
                "authorized_at": "2018-10-17T20:38:46.753Z",
                "voided_at": "2018-10-17T20:38:57.793Z"
              }
            },
            "location_id": "XTI0H92143A39",
            "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
            "reference_id": "123456",
            "note": "Brief description",
            "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
            "version_token": "lAITJ6l8I8tFu62mCf2W4sxJQxN9FOaH5zwfsdPf7Dm6o"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CancelSubscriptionRequest": {
        "type": "object",
        "description": "Defines parameters in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription) endpoint request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelSubscriptionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "description": "Defines fields that are included in a \n[CancelSubscription](#endpoint-subscriptions-cancelsubscription) response.",
        "example": {
          "subscription": {
            "id": "910afd30-464a-4e00-a8d8-2296eEXAMPLE",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
            "start_date": "2020-04-24",
            "canceled_date": "2020-05-01",
            "paid_until_date": "2020-05-01",
            "status": "ACTIVE",
            "created_at": "2020-08-03T21:53:10Z",
            "version": 1594311617331,
            "timezone": "America/Los_Angeles"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CancelTerminalCheckoutRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "CancelTerminalCheckoutResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "checkout": {
            "$ref": "#/components/schemas/TerminalCheckout"
          }
        },
        "description": "",
        "example": {
          "checkout": {
            "id": "S1yDlPQx7slqO",
            "amount_money": {
              "amount": 123,
              "currency": "USD"
            },
            "reference_id": "id36815",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
              "tip_settings": {
                "allow_tipping": true
              },
              "skip_receipt_screen": true
            },
            "status": "CANCELED",
            "cancel_reason": "SELLER_CANCELED",
            "created_at": "2020-03-16T15:31:19.934Z",
            "updated_at": "2020-03-16T15:31:45.787Z",
            "app_id": "APP_ID",
            "deadline_duration": "PT10M"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CancelTerminalRefundRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "CancelTerminalRefundResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/TerminalRefund"
          }
        },
        "description": "",
        "example": {
          "refund": {
            "id": "g6ycb6HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "payment_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "amount_money": {
              "amount": 100,
              "currency": "CAD"
            },
            "reason": "reason",
            "device_id": "42690809-faa2-4701-a24b-19d3d34c9aaa",
            "deadline_duration": "PT5M",
            "status": "CANCELED",
            "cancel_reason": "SELLER_CANCELED",
            "created_at": "2020-10-21T22:47:23.241Z",
            "updated_at": "2020-10-21T22:47:30.096Z",
            "app_id": "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
            "card": {
              "card_brand": "INTERAC",
              "last_4": "1111",
              "exp_month": 1,
              "exp_year": 2022,
              "fingerprint": "sq-1-B1fP9MNNmZgVVaPKRND6oDKYbz25S2cTvg9Mzwg3RMTK1zT1PiGRT-AE3nTA8vSmmw",
              "card_type": "CREDIT",
              "bin": "411111"
            },
            "order_id": "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
            "location_id": "76C9W6K8CNNQ5"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CaptureTransactionRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.python",
          "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp",
          "java": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.java",
          "php": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.php",
          "javascript": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.javascript",
          "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby"
        }
      },
      "CaptureTransactionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.python",
          "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp",
          "java": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.java",
          "php": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.php",
          "javascript": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.javascript",
          "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby"
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 64,
            "type": "string",
            "description": "Unique ID for this card. Generated by Square.",
            "x-read-only": true
          },
          "card_brand": {
            "type": "string",
            "description": "The card's brand.\nSee [CardBrand](#type-cardbrand) for possible values",
            "x-read-only": true
          },
          "last_4": {
            "maxLength": 4,
            "type": "string",
            "description": "The last 4 digits of the card number.",
            "x-read-only": true
          },
          "exp_month": {
            "type": "integer",
            "description": "The expiration month of the associated card as an integer between 1 and 12.",
            "format": "int64"
          },
          "exp_year": {
            "type": "integer",
            "description": "The four-digit year of the card's expiration date.",
            "format": "int64"
          },
          "cardholder_name": {
            "maxLength": 96,
            "type": "string",
            "description": "The name of the cardholder."
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "fingerprint": {
            "maxLength": 255,
            "type": "string",
            "description": "__Not currently set.__ Intended as a Square-assigned identifier, based\non the card number, to identify the card across multiple locations within a\nsingle application.",
            "x-read-only": true
          },
          "card_type": {
            "type": "string",
            "description": "The type of the card.\nThe Card object includes this field only in response to Payments API calls.\nSee [CardType](#type-cardtype) for possible values",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "prepaid_type": {
            "type": "string",
            "description": "Indicates whether the Card is prepaid or not.\nThe Card object includes this field only in response to Payments API calls.\nSee [CardPrepaidType](#type-cardprepaidtype) for possible values",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "bin": {
            "maxLength": 6,
            "type": "string",
            "description": "The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API\nreturns this field.",
            "x-read-only": true
          }
        },
        "description": "Represents the payment details of a card to be used for payments. These\ndetails are determined by the `card_nonce` generated by `SqPaymentForm`.",
        "x-release-status": "PUBLIC"
      },
      "CardPaymentDetails": {
        "type": "object",
        "properties": {
          "status": {
            "maxLength": 50,
            "type": "string",
            "description": "The card payment's current state. The state can be AUTHORIZED, CAPTURED, VOIDED, or\nFAILED."
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "entry_method": {
            "maxLength": 50,
            "type": "string",
            "description": "The method used to enter the card's details for the payment. The method can be\n`KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`."
          },
          "cvv_status": {
            "maxLength": 50,
            "type": "string",
            "description": "The status code returned from the Card Verification Value (CVV) check. The code can be\n`CVV_ACCEPTED`, `CVV_REJECTED`, or `CVV_NOT_CHECKED`."
          },
          "avs_status": {
            "maxLength": 50,
            "type": "string",
            "description": "The status code returned from the Address Verification System (AVS) check. The code can be\n`AVS_ACCEPTED`, `AVS_REJECTED`, or `AVS_NOT_CHECKED`."
          },
          "auth_result_code": {
            "maxLength": 10,
            "type": "string",
            "description": "The status code returned by the card issuer that describes the payment's\nauthorization status."
          },
          "application_identifier": {
            "maxLength": 32,
            "type": "string",
            "description": "For EMV payments, the application ID identifies the EMV application used for the payment."
          },
          "application_name": {
            "maxLength": 16,
            "type": "string",
            "description": "For EMV payments, the human-readable name of the EMV application used for the payment."
          },
          "application_cryptogram": {
            "maxLength": 16,
            "type": "string",
            "description": "For EMV payments, the cryptogram generated for the payment."
          },
          "verification_method": {
            "maxLength": 50,
            "type": "string",
            "description": "For EMV payments, the method used to verify the cardholder's identity. The method can be\n`PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`."
          },
          "verification_results": {
            "maxLength": 50,
            "type": "string",
            "description": "For EMV payments, the results of the cardholder verification. The result can be\n`SUCCESS`, `FAILURE`, or `UNKNOWN`."
          },
          "statement_description": {
            "maxLength": 50,
            "type": "string",
            "description": "The statement description sent to the card networks.\n\nNote: The actual statement description varies and is likely to be truncated and appended with\nadditional information on a per issuer basis."
          },
          "device_details": {
            "$ref": "#/components/schemas/DeviceDetails"
          },
          "card_payment_timeline": {
            "$ref": "#/components/schemas/CardPaymentTimeline"
          },
          "refund_requires_card_presence": {
            "type": "boolean",
            "description": "Whether the card must be physically present for the payment to\nbe refunded.  If set to `true`, the card must be present.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Reflects the current status of a card payment. Contains only non-confidential information.",
        "x-release-status": "PUBLIC"
      },
      "CardPaymentTimeline": {
        "type": "object",
        "properties": {
          "authorized_at": {
            "type": "string",
            "description": "The timestamp when the payment was authorized, in RFC 3339 format."
          },
          "captured_at": {
            "type": "string",
            "description": "The timestamp when the payment was captured, in RFC 3339 format."
          },
          "voided_at": {
            "type": "string",
            "description": "The timestamp when the payment was voided, in RFC 3339 format."
          }
        },
        "description": "The timeline for card payments.",
        "x-release-status": "PUBLIC"
      },
      "CashDrawerDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The device Square-issued ID"
          },
          "name": {
            "type": "string",
            "description": "The device merchant-specified name."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "CashDrawerShift": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The shift unique ID."
          },
          "state": {
            "type": "string",
            "description": "The shift current state.\nSee [CashDrawerShiftState](#type-cashdrawershiftstate) for possible values"
          },
          "opened_at": {
            "type": "string",
            "description": "The time when the shift began, in ISO 8601 format."
          },
          "ended_at": {
            "type": "string",
            "description": "The time when the shift ended, in ISO 8601 format."
          },
          "closed_at": {
            "type": "string",
            "description": "The time when the shift was closed, in ISO 8601 format."
          },
          "employee_ids": {
            "type": "array",
            "description": "The IDs of all employees that were logged into Square Point of Sale at any\npoint while the cash drawer shift was open.",
            "items": {
              "type": "string"
            }
          },
          "opening_employee_id": {
            "type": "string",
            "description": "The ID of the employee that started the cash drawer shift."
          },
          "ending_employee_id": {
            "type": "string",
            "description": "The ID of the employee that ended the cash drawer shift."
          },
          "closing_employee_id": {
            "type": "string",
            "description": "The ID of the employee that closed the cash drawer shift by auditing\nthe cash drawer contents."
          },
          "description": {
            "type": "string",
            "description": "The free-form text description of a cash drawer by an employee."
          },
          "opened_cash_money": {
            "$ref": "#/components/schemas/Money"
          },
          "cash_payment_money": {
            "$ref": "#/components/schemas/Money"
          },
          "cash_refunds_money": {
            "$ref": "#/components/schemas/Money"
          },
          "cash_paid_in_money": {
            "$ref": "#/components/schemas/Money"
          },
          "cash_paid_out_money": {
            "$ref": "#/components/schemas/Money"
          },
          "expected_cash_money": {
            "$ref": "#/components/schemas/Money"
          },
          "closed_cash_money": {
            "$ref": "#/components/schemas/Money"
          },
          "device": {
            "$ref": "#/components/schemas/CashDrawerDevice"
          }
        },
        "description": "This model gives the details of a cash drawer shift.\nThe cash_payment_money, cash_refund_money, cash_paid_in_money,\nand cash_paid_out_money fields are all computed by summing their respective\nevent types.",
        "x-release-status": "PUBLIC"
      },
      "CashDrawerShiftEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the event."
          },
          "employee_id": {
            "type": "string",
            "description": "The ID of the employee that created the event."
          },
          "event_type": {
            "type": "string",
            "description": "The type of cash drawer shift event.\nSee [CashDrawerEventType](#type-cashdrawereventtype) for possible values"
          },
          "event_money": {
            "$ref": "#/components/schemas/Money"
          },
          "created_at": {
            "type": "string",
            "description": "The event time in ISO 8601 format.",
            "x-read-only": true
          },
          "description": {
            "type": "string",
            "description": "An optional description of the event, entered by the employee that\ncreated the event."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "CashDrawerShiftSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The shift unique ID."
          },
          "state": {
            "type": "string",
            "description": "The shift current state.\nSee [CashDrawerShiftState](#type-cashdrawershiftstate) for possible values"
          },
          "opened_at": {
            "type": "string",
            "description": "The shift start time in ISO 8601 format."
          },
          "ended_at": {
            "type": "string",
            "description": "The shift end time in ISO 8601 format."
          },
          "closed_at": {
            "type": "string",
            "description": "The shift close time in ISO 8601 format."
          },
          "description": {
            "type": "string",
            "description": "An employee free-text description of a cash drawer shift."
          },
          "opened_cash_money": {
            "$ref": "#/components/schemas/Money"
          },
          "expected_cash_money": {
            "$ref": "#/components/schemas/Money"
          },
          "closed_cash_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "The summary of a closed cash drawer shift.\nThis model contains only the money counted to start a cash drawer shift, counted\nat the end of the shift, and the amount that should be in the drawer at shift\nend based on summing all cash drawer shift events.",
        "x-release-status": "PUBLIC"
      },
      "CashPaymentDetails": {
        "required": [
          "buyer_supplied_money"
        ],
        "type": "object",
        "properties": {
          "buyer_supplied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "change_back_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Stores details about a cash payment. Contains only non-confidential information. For more information, see \n[Take Cash Payments](https://developer.squareup.com/docs/payments-api/take-payments/cash-payments).",
        "x-release-status": "PUBLIC"
      },
      "CatalogCategory": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The category name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          }
        },
        "description": "A category to which a `CatalogItem` instance belongs.",
        "example": {
          "object": {
            "type": "CATEGORY",
            "id": "#Beverages",
            "present_at_all_locations": true,
            "category_data": {
              "name": "Beverages"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogCustomAttributeDefinition": {
        "required": [
          "allowed_object_types",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of this custom attribute. Cannot be modified after creation.\nRequired.\nSee [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype) for possible values"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": " The name of this definition for API and seller-facing UI purposes.\nThe name must be unique within the (merchant, application) pair. Required.\nMay not be empty and may not exceed 255 characters. Can be modified after creation."
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Seller-oriented description of the meaning of this Custom Attribute,\nany constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs."
          },
          "source_application": {
            "$ref": "#/components/schemas/SourceApplication"
          },
          "allowed_object_types": {
            "type": "array",
            "description": "The set of Catalog Object Types that this Custom Attribute may be applied to.\nCurrently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "seller_visibility": {
            "type": "string",
            "description": "The visibility of a custom attribute in seller-facing UIs (including Square Point\nof Sale applications and Square Dashboard). May be modified.\nSee [CatalogCustomAttributeDefinitionSellerVisibility](#type-catalogcustomattributedefinitionsellervisibility) for possible values"
          },
          "app_visibility": {
            "type": "string",
            "description": "The visibility of a custom attribute to applications other than the application\nthat created the attribute.\nSee [CatalogCustomAttributeDefinitionAppVisibility](#type-catalogcustomattributedefinitionappvisibility) for possible values"
          },
          "string_config": {
            "$ref": "#/components/schemas/CatalogCustomAttributeDefinitionStringConfig"
          },
          "number_config": {
            "$ref": "#/components/schemas/CatalogCustomAttributeDefinitionNumberConfig"
          },
          "selection_config": {
            "$ref": "#/components/schemas/CatalogCustomAttributeDefinitionSelectionConfig"
          },
          "custom_attribute_usage_count": {
            "type": "integer",
            "description": "__Read-only.__ The number of custom attributes that reference this\ncustom attribute definition. Set by the server in response to a ListCatalog\nrequest with `include_counts` set to `true`.  If the actual count is greater\nthan 100, `custom_attribute_usage_count` will be set to `100`.",
            "x-read-only": true
          },
          "key": {
            "maxLength": 60,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_-]*$",
            "type": "string",
            "description": "The name of the desired custom attribute key that can be used to access\nthe custom attribute value on catalog objects. Cannot be modified after the\ncustom attribute definition has been created.\nMust be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`."
          }
        },
        "description": "Contains information defining a custom attribute. Custom attributes are\nintended to store additional information about a catalog object or to associate a\ncatalog object with an entity in another system. Do not use custom attributes\nto store any sensitive information (personally identifiable information, card details, etc.).\n[Read more about custom attributes](/catalog-api/add-custom-attributes)",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionNumberConfig": {
        "type": "object",
        "properties": {
          "precision": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in number custom attribute values\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 5"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionSelectionConfig": {
        "type": "object",
        "properties": {
          "max_allowed_selections": {
            "maximum": 100,
            "type": "integer",
            "description": "The maximum number of selections that can be set. The maximum value for this\nattribute is 100. The default value is 1. The value can be modified, but changing the value will not\naffect existing custom attribute values on objects. Clients need to\nhandle custom attributes with more selected values than allowed by this limit."
          },
          "allowed_selections": {
            "type": "array",
            "description": "The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100\nselections can be defined. Can be modified.",
            "items": {
              "$ref": "#/components/schemas/CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection"
            }
          }
        },
        "description": "Configuration associated with `SELECTION`-type custom attribute definitions.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique ID set by Square."
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Selection name, unique within `allowed_selections`."
          }
        },
        "description": "A named selection for this `SELECTION`-type custom attribute definition.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeDefinitionStringConfig": {
        "type": "object",
        "properties": {
          "enforce_uniqueness": {
            "type": "boolean",
            "description": "If true, each Custom Attribute instance associated with this Custom Attribute\nDefinition must have a unique value within the seller's catalog. For\nexample, this may be used for a value like a SKU that should not be\nduplicated within a seller's catalog. May not be modified after the\ndefinition has been created."
          }
        },
        "description": "Configuration associated with Custom Attribute Definitions of type `STRING`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogCustomAttributeValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom attribute."
          },
          "string_value": {
            "type": "string",
            "description": "The string value of the custom attribute.  Populated if `type` = `STRING`."
          },
          "custom_attribute_definition_id": {
            "type": "string",
            "description": "__Read-only.__ The id of the `CatalogCustomAttributeDefinition` this value belongs to.",
            "x-read-only": true
          },
          "type": {
            "type": "string",
            "description": "__Read-only.__ A copy of type from the associated `CatalogCustomAttributeDefinition`.\nSee [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype) for possible values",
            "x-read-only": true
          },
          "number_value": {
            "type": "string",
            "description": "Populated if `type` = `NUMBER`. Contains a string\nrepresentation of a decimal number, using a `.` as the decimal separator."
          },
          "boolean_value": {
            "type": "boolean",
            "description": "A `true` or `false` value. Populated if `type` = `BOOLEAN`."
          },
          "selection_uid_values": {
            "type": "array",
            "description": "One or more choices from `allowed_selections`. Populated if `type` = `SELECTION`.",
            "items": {
              "type": "string"
            }
          },
          "key": {
            "type": "string",
            "description": "__Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`.",
            "x-read-only": true
          }
        },
        "description": "An instance of a custom attribute. Custom attributes can be defined and\nadded to `ITEM` and `ITEM_VARIATION` type catalog objects.\n[Read more about custom attributes](/catalog-api/add-custom-attributes).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogDiscount": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The discount name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "discount_type": {
            "type": "string",
            "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for possible values"
          },
          "percentage": {
            "type": "string",
            "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not use this field for amount-based or variable discounts."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "pin_required": {
            "type": "boolean",
            "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app."
          },
          "label_color": {
            "type": "string",
            "description": "The color of the discount display label in the Square Point of Sale app. This must be a valid hex color code."
          },
          "modify_tax_basis": {
            "type": "string",
            "description": "Indicates whether this discount should reduce the price used to calculate tax.\n\nMost discounts should use `MODIFY_TAX_BASIS`. However, in some circumstances taxes must\nbe calculated based on an item's price, ignoring a particular discount. For example,\nin many US jurisdictions, a manufacturer coupon or instant rebate reduces the price a\ncustomer pays but does not reduce the sale price used to calculate how much sales tax is\ndue. In this case, the discount representing that manufacturer coupon should have\n`DO_NOT_MODIFY_TAX_BASIS` for this field.\n\nIf you are unsure whether you need to use this field, consult your tax professional.\nSee [CatalogDiscountModifyTaxBasis](#type-catalogdiscountmodifytaxbasis) for possible values"
          }
        },
        "description": "A discount applicable to items.",
        "example": {
          "object": {
            "type": "DISCOUNT",
            "id": "#Maythe4th",
            "present_at_all_locations": true,
            "discount_data": {
              "name": "Welcome to the Dark(Roast) Side!",
              "discount_type": "FIXED_PERCENTAGE",
              "percentage": "5.4",
              "pin_required": false,
              "label_color": "red"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogIdMapping": {
        "type": "object",
        "properties": {
          "client_object_id": {
            "type": "string",
            "description": "The client-supplied temporary `#`-prefixed ID for a new `CatalogObject`."
          },
          "object_id": {
            "type": "string",
            "description": "The permanent ID for the CatalogObject created by the server."
          }
        },
        "description": "A mapping between a temporary client-supplied ID and a permanent server-generated ID.\n\nWhen calling [UpsertCatalogObject](#endpoint-Catalog-UpsertCatalogObject) or\n[BatchUpsertCatalogObjects](#endpoint-Catalog-BatchUpsertCatalogObjects) to\ncreate a [CatalogObject](#type-CatalogObject) instance, you can supply\na temporary ID for the to-be-created object, especially when the object is to be referenced\nelsewhere in the same request body. This temporary ID can be any string unique within\nthe call, but must be prefixed by \"#\".\n\nAfter the request is submitted and the object created, a permanent server-generated ID is assigned\nto the new object. The permanent ID is unique across the Square catalog.",
        "x-release-status": "PUBLIC"
      },
      "CatalogImage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The internal name to identify this image in calls to the Square API."
          },
          "url": {
            "type": "string",
            "description": "The URL of this image, generated by Square after an image is uploaded\nusing the `CreateCatalogImage` endpoint."
          },
          "caption": {
            "type": "string",
            "description": "A caption that describes what is shown in the image. Displayed in the\nSquare Online Store. This is a searchable attribute for use in applicable query filters."
          }
        },
        "description": "An image file to use in Square catalogs. It can be associated with catalog\nitems, item variations, and categories.",
        "x-release-status": "PUBLIC"
      },
      "CatalogInfoRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python",
          "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp",
          "java": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.java",
          "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php",
          "javascript": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.javascript",
          "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby"
        }
      },
      "CatalogInfoResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "limits": {
            "$ref": "#/components/schemas/CatalogInfoResponseLimits"
          },
          "standard_unit_description_group": {
            "$ref": "#/components/schemas/StandardUnitDescriptionGroup"
          }
        },
        "description": "",
        "example": {
          "limits": {
            "batch_upsert_max_objects_per_batch": 1000,
            "batch_upsert_max_total_objects": 10000,
            "batch_retrieve_max_object_ids": 1000,
            "search_max_page_limit": 1000,
            "batch_delete_max_object_ids": 200,
            "update_item_taxes_max_item_ids": 1000,
            "update_item_taxes_max_taxes_to_enable": 1000,
            "update_item_taxes_max_taxes_to_disable": 1000,
            "update_item_modifier_lists_max_item_ids": 1000,
            "update_item_modifier_lists_max_modifier_lists_to_enable": 1000,
            "update_item_modifier_lists_max_modifier_lists_to_disable": 1000
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python",
          "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp",
          "java": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.java",
          "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php",
          "javascript": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.javascript",
          "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby"
        }
      },
      "CatalogInfoResponseLimits": {
        "type": "object",
        "properties": {
          "batch_upsert_max_objects_per_batch": {
            "type": "integer",
            "description": "The maximum number of objects that may appear within a single batch in a\n`/v2/catalog/batch-upsert` request."
          },
          "batch_upsert_max_total_objects": {
            "type": "integer",
            "description": "The maximum number of objects that may appear across all batches in a\n`/v2/catalog/batch-upsert` request."
          },
          "batch_retrieve_max_object_ids": {
            "type": "integer",
            "description": "The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`\nrequest."
          },
          "search_max_page_limit": {
            "type": "integer",
            "description": "The maximum number of results that may be returned in a page of a\n`/v2/catalog/search` response."
          },
          "batch_delete_max_object_ids": {
            "type": "integer",
            "description": "The maximum number of object IDs that may be included in a single\n`/v2/catalog/batch-delete` request."
          },
          "update_item_taxes_max_item_ids": {
            "type": "integer",
            "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-taxes` request."
          },
          "update_item_taxes_max_taxes_to_enable": {
            "type": "integer",
            "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
          },
          "update_item_taxes_max_taxes_to_disable": {
            "type": "integer",
            "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`/v2/catalog/update-item-taxes` request."
          },
          "update_item_modifier_lists_max_item_ids": {
            "type": "integer",
            "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-modifier-lists` request."
          },
          "update_item_modifier_lists_max_modifier_lists_to_enable": {
            "type": "integer",
            "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
          },
          "update_item_modifier_lists_max_modifier_lists_to_disable": {
            "type": "integer",
            "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "CatalogItem": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string",
            "description": "The item's name. This is a searchable attribute for use in applicable query filters, its value must not be empty, and the length is of Unicode code points."
          },
          "description": {
            "maxLength": 4096,
            "type": "string",
            "description": "The item's description. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "abbreviation": {
            "maxLength": 24,
            "type": "string",
            "description": "The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.\nThis attribute is searchable, and its value length is of Unicode code points."
          },
          "label_color": {
            "type": "string",
            "description": "The color of the item's display label in the Square Point of Sale app. This must be a valid hex color code."
          },
          "available_online": {
            "type": "boolean",
            "description": "If `true`, the item can be added to shipping orders from the merchant's online store."
          },
          "available_for_pickup": {
            "type": "boolean",
            "description": "If `true`, the item can be added to pickup orders from the merchant's online store."
          },
          "available_electronically": {
            "type": "boolean",
            "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant's online store."
          },
          "category_id": {
            "type": "string",
            "description": "The ID of the item's category, if any."
          },
          "tax_ids": {
            "type": "array",
            "description": "A set of IDs indicating the taxes enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\nTaxes may also be added to or deleted from an item using `UpdateItemTaxes`.",
            "items": {
              "type": "string"
            }
          },
          "modifier_list_info": {
            "type": "array",
            "description": "A set of `CatalogItemModifierListInfo` objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. Modifier lists\nmay also be added to or deleted from an item using `UpdateItemModifierLists`.",
            "items": {
              "$ref": "#/components/schemas/CatalogItemModifierListInfo"
            }
          },
          "variations": {
            "type": "array",
            "description": "A list of CatalogObjects containing the `CatalogItemVariation`s for this item.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "product_type": {
            "type": "string",
            "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` or `APPOINTMENTS_SERVICE` may be created by this API; items with other product\ntypes are read-only.\nSee [CatalogItemProductType](#type-catalogitemproducttype) for possible values"
          },
          "skip_modifier_screen": {
            "type": "boolean",
            "description": "If `false`, the Square Point of Sale app will present the `CatalogItem`'s\ndetails screen immediately, allowing the merchant to choose `CatalogModifier`s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item's details.\n\nThird-party clients are encouraged to implement similar behaviors."
          },
          "item_options": {
            "type": "array",
            "description": "List of item options IDs for this item. Used to manage and group item\nvariations in a specified order.\n\nMaximum: 6 item options.",
            "items": {
              "$ref": "#/components/schemas/CatalogItemOptionForItem"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "A [CatalogObject](#type-CatalogObject) instance of the `ITEM` type, also referred to as an item, in the catalog.",
        "example": {
          "object": {
            "type": "ITEM",
            "id": "#Cocoa",
            "present_at_all_locations": true,
            "item_data": {
              "name": "Cocoa",
              "description": "Hot chocolate",
              "abbreviation": "Ch",
              "visibility": "PRIVATE"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogItemModifierListInfo": {
        "required": [
          "modifier_list_id"
        ],
        "type": "object",
        "properties": {
          "modifier_list_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`."
          },
          "modifier_overrides": {
            "type": "array",
            "description": "A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default.",
            "items": {
              "$ref": "#/components/schemas/CatalogModifierOverride"
            }
          },
          "min_selected_modifiers": {
            "type": "integer",
            "description": "If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`."
          },
          "max_selected_modifiers": {
            "type": "integer",
            "description": "If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`."
          },
          "enabled": {
            "type": "boolean",
            "description": "If `true`, enable this `CatalogModifierList`. The default value is `true`."
          }
        },
        "description": "Options to control the properties of a `CatalogModifierList` applied to a `CatalogItem` instance.",
        "x-release-status": "PUBLIC"
      },
      "CatalogItemOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The item option's display name for the seller. Must be unique across\nall item options. This is a searchable attribute for use in applicable query filters."
          },
          "display_name": {
            "type": "string",
            "description": "The item option's display name for the customer. This is a searchable attribute for use in applicable query filters."
          },
          "description": {
            "type": "string",
            "description": "The item option's human-readable description. Displayed in the Square\nPoint of Sale app for the seller and in the Online Store or on receipts for\nthe buyer. This is a searchable attribute for use in applicable query filters."
          },
          "show_colors": {
            "type": "boolean",
            "description": "If true, display colors for entries in `values` when present."
          },
          "values": {
            "type": "array",
            "description": "A list of CatalogObjects containing the\n`CatalogItemOptionValue`s for this item.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "A group of variations for a `CatalogItem`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogItemOptionForItem": {
        "type": "object",
        "properties": {
          "item_option_id": {
            "type": "string",
            "description": "The unique id of the item option, used to form the dimensions of the item option matrix in a specified order."
          }
        },
        "description": " An option that can be assigned to an item.\nFor example, a t-shirt item may offer a color option or a size option.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogItemOptionValue": {
        "type": "object",
        "properties": {
          "item_option_id": {
            "type": "string",
            "description": "Unique ID of the associated item option."
          },
          "name": {
            "type": "string",
            "description": "Name of this item option value. This is a searchable attribute for use in applicable query filters."
          },
          "description": {
            "type": "string",
            "description": "A human-readable description for the option value. This is a searchable attribute for use in applicable query filters."
          },
          "color": {
            "type": "string",
            "description": "The HTML-supported hex color for the item option (e.g., \"#ff8d4e85\").\nOnly displayed if `show_colors` is enabled on the parent `ItemOption`. When\nleft unset, `color` defaults to white (\"#ffffff\") when `show_colors` is\nenabled on the parent `ItemOption`."
          },
          "ordinal": {
            "type": "integer",
            "description": "Determines where this option value appears in a list of option values."
          }
        },
        "description": "An enumerated value that can link a\n`CatalogItemVariation` to an item option as one of\nits item option values.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogItemOptionValueForItemVariation": {
        "type": "object",
        "properties": {
          "item_option_id": {
            "type": "string",
            "description": "The unique id of an item option."
          },
          "item_option_value_id": {
            "type": "string",
            "description": "The unique id of the selected value for the item option."
          }
        },
        "description": "A `CatalogItemOptionValue` links an item variation to an item option as\nan item option value. For example, a t-shirt item may offer a color option and\na size option. An item option value would represent each variation of t-shirt:\nFor example, \"Color:Red, Size:Small\" or \"Color:Blue, Size:Medium\".",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogItemVariation": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "string",
            "description": "The ID of the `CatalogItem` associated with this item variation."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The item variation's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "sku": {
            "type": "string",
            "description": "The item variation's SKU, if any. This is a searchable attribute for use in applicable query filters."
          },
          "upc": {
            "type": "string",
            "description": "The universal product code (UPC) of the item variation, if any. This is a searchable attribute for use in applicable query filters.\n\nThe value of this attribute should be a number of 12-14 digits long.  This restriction is enforced on the Square Seller Dashboard,\nSquare Point of Sale or Retail Point of Sale apps, where this attribute shows in the GTIN field. If a non-compliant UPC value is assigned\nto this attribute using the API, the value is not editable on the Seller Dashboard, Square Point of Sale or Retail Point of Sale apps\nunless it is updated to fit the expected format."
          },
          "ordinal": {
            "type": "integer",
            "description": "The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal\nfor each item variation within a parent `CatalogItem` is set according to the item variations's\nposition. On reads, the value is not guaranteed to be sequential or unique.",
            "x-read-only": true
          },
          "pricing_type": {
            "type": "string",
            "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale.\nSee [CatalogPricingType](#type-catalogpricingtype) for possible values"
          },
          "price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "location_overrides": {
            "type": "array",
            "description": "Per-location price and inventory overrides.",
            "items": {
              "$ref": "#/components/schemas/ItemVariationLocationOverrides"
            }
          },
          "track_inventory": {
            "type": "boolean",
            "description": "If `true`, inventory tracking is active for the variation."
          },
          "inventory_alert_type": {
            "type": "string",
            "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`.\nSee [InventoryAlertType](#type-inventoryalerttype) for possible values"
          },
          "inventory_alert_threshold": {
            "type": "integer",
            "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
            "format": "int64"
          },
          "user_data": {
            "maxLength": 255,
            "type": "string",
            "description": "Arbitrary user metadata to associate with the item variation. This attribute value length is of Unicode code points."
          },
          "service_duration": {
            "type": "integer",
            "description": "If the `CatalogItem` that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).",
            "format": "int64"
          },
          "available_for_booking": {
            "type": "boolean",
            "description": "If the `CatalogItem` that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, a bool representing whether this service is available for booking.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "item_option_values": {
            "type": "array",
            "description": "List of item option values associated with this item variation. Listed\nin the same order as the item options of the parent item.",
            "items": {
              "$ref": "#/components/schemas/CatalogItemOptionValueForItemVariation"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "measurement_unit_id": {
            "type": "string",
            "description": "ID of the ‘CatalogMeasurementUnit’ that is used to measure the quantity\nsold of this item variation. If left unset, the item will be sold in\nwhole quantities.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "team_member_ids": {
            "type": "array",
            "description": "Tokens of employees that can perform the service represented by this variation. Only valid for\nvariations of type `APPOINTMENTS_SERVICE`.",
            "items": {
              "type": "string"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "An item variation (i.e., product) in the Catalog object model. Each item\nmay have a maximum of 250 item variations.",
        "x-release-status": "PUBLIC"
      },
      "CatalogMeasurementUnit": {
        "type": "object",
        "properties": {
          "measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "precision": {
            "type": "integer",
            "description": "An integer between 0 and 5 that represents the maximum number of\npositions allowed after the decimal in quantities measured with this unit.\nFor example:\n\n- if the precision is 0, the quantity can be 1, 2, 3, etc.\n- if the precision is 1, the quantity can be 0.1, 0.2, etc.\n- if the precision is 2, the quantity can be 0.01, 0.12, etc.\n\nDefault: 3"
          }
        },
        "description": "Represents the unit used to measure a `CatalogItemVariation` and\nspecifies the precision for decimal quantities.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogModifier": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "ordinal": {
            "type": "integer",
            "description": "Determines where this `CatalogModifier` appears in the `CatalogModifierList`."
          },
          "modifier_list_id": {
            "type": "string",
            "description": "The ID of the `CatalogModifierList` associated with this modifier."
          }
        },
        "description": "A modifier applicable to items at the time of sale.",
        "example": {
          "object": {
            "type": "MODIFIER",
            "present_at_all_locations": true,
            "modifier_data": {
              "name": "Almond Milk",
              "price_money": {
                "amount": 250,
                "currency": "USD"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogModifierList": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name for the `CatalogModifierList` instance. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "ordinal": {
            "type": "integer",
            "description": "Determines where this modifier list appears in a list of `CatalogModifierList` values."
          },
          "selection_type": {
            "type": "string",
            "description": "Indicates whether multiple options from the modifier list\ncan be applied to a single `CatalogItem`.\nSee [CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for possible values"
          },
          "modifiers": {
            "type": "array",
            "description": "The options included in the `CatalogModifierList`.\nYou must include at least one `CatalogModifier`.\nEach CatalogObject must have type `MODIFIER` and contain\n`CatalogModifier` data.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "A list of modifiers applicable to items at the time of sale.\n\nFor example, a \"Condiments\" modifier list applicable to a \"Hot Dog\" item\nmay contain \"Ketchup\", \"Mustard\", and \"Relish\" modifiers.\nUse the `selection_type` field to specify whether or not multiple selections from\nthe modifier list are allowed.",
        "example": {
          "type": "MODIFIER_LIST",
          "id": "#MilkType",
          "present_at_all_locations": true,
          "modifier_list_data": {
            "name": "Milk Type",
            "selection_type": "SINGLE",
            "modifiers": [
              {
                "type": "MODIFIER",
                "present_at_all_locations": true,
                "modifier_data": {
                  "name": "Whole Milk",
                  "price_money": {
                    "amount": 0,
                    "currency": "USD"
                  }
                }
              },
              {
                "type": "MODIFIER",
                "present_at_all_locations": true,
                "modifier_data": {
                  "name": "Almond Milk",
                  "price_money": {
                    "amount": 250,
                    "currency": "USD"
                  }
                }
              },
              {
                "type": "MODIFIER",
                "present_at_all_locations": true,
                "modifier_data": {
                  "name": "Soy Milk",
                  "price_money": {
                    "amount": 250,
                    "currency": "USD"
                  }
                }
              }
            ]
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogModifierOverride": {
        "required": [
          "modifier_id"
        ],
        "type": "object",
        "properties": {
          "modifier_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `CatalogModifier` whose default behavior is being overridden."
          },
          "on_by_default": {
            "type": "boolean",
            "description": "If `true`, this `CatalogModifier` should be selected by default for this `CatalogItem`."
          }
        },
        "description": "Options to control how to override the default behavior of the specified modifier.",
        "x-release-status": "PUBLIC"
      },
      "CatalogObject": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of this object. Each object type has expected\nproperties expressed in a structured format within its corresponding `*_data` field below.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values"
          },
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "An identifier to reference this object in the catalog. When a new `CatalogObject`\nis inserted, the client should set the id to a temporary identifier starting with\na \"`#`\" character. Other objects being inserted or updated within the same request\nmay use this identifier to refer to the new object.\n\nWhen the server receives the new object, it will supply a unique identifier that\nreplaces the temporary identifier for all future references."
          },
          "updated_at": {
            "type": "string",
            "description": "Last modification [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) in RFC 3339 format, e.g., `\"2016-08-15T23:59:33.123Z\"`\nwould indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.",
            "x-read-only": true
          },
          "version": {
            "type": "integer",
            "description": "The version of the object. When updating an object, the version supplied\nmust match the version in the database, otherwise the write will be rejected as conflicting.",
            "format": "int64"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time."
          },
          "custom_attribute_values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CatalogCustomAttributeValue"
            },
            "description": "A map (key-value pairs) of application-defined custom attribute values. The value of a key-value pair\nis a `CatalogCustomAttributeValue` object. The key is the `key` attribute\nvalue defined in the associated `CatalogCustomAttributeDefinition`\nobject defined by the application making the request.\n\nIf the `CatalogCustomAttributeDefinition` object is\ndefined by another application, the `CatalogCustomAttributeDefinition`'s key attribute value is prefixed by\nthe defining application ID. For example, if the `CatalogCustomAttributeDefinition` has a `key` attribute of\n`\"cocoa_brand\"` and the defining application ID is `\"abcd1234\"`, the key in the map is `\"abcd1234:cocoa_brand\"`\nif the application making the request is different from the application defining the custom attribute definition.\nOtherwise, the key used in the map is simply `\"cocoa_brand\"`.\n\nApplication-defined custom attributes that are set at a global (location-independent) level.\nCustom attribute values are intended to store additional information about a catalog object\nor associations with an entity in another system. Do not use custom attributes\nto store any sensitive information (personally identifiable information, card details, etc.).",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "catalog_v1_ids": {
            "type": "array",
            "description": "The Connect v1 IDs for this object at each location where it is present, where they\ndiffer from the object's Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs.",
            "items": {
              "$ref": "#/components/schemas/CatalogV1Id"
            }
          },
          "present_at_all_locations": {
            "type": "boolean",
            "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field. If not specified, defaults to `true`."
          },
          "present_at_location_ids": {
            "type": "array",
            "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`.",
            "items": {
              "type": "string"
            }
          },
          "absent_at_location_ids": {
            "type": "array",
            "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`.",
            "items": {
              "type": "string"
            }
          },
          "image_id": {
            "type": "string",
            "description": "Identifies the `CatalogImage` attached to this `CatalogObject`."
          },
          "item_data": {
            "$ref": "#/components/schemas/CatalogItem"
          },
          "category_data": {
            "$ref": "#/components/schemas/CatalogCategory"
          },
          "item_variation_data": {
            "$ref": "#/components/schemas/CatalogItemVariation"
          },
          "tax_data": {
            "$ref": "#/components/schemas/CatalogTax"
          },
          "discount_data": {
            "$ref": "#/components/schemas/CatalogDiscount"
          },
          "modifier_list_data": {
            "$ref": "#/components/schemas/CatalogModifierList"
          },
          "modifier_data": {
            "$ref": "#/components/schemas/CatalogModifier"
          },
          "time_period_data": {
            "$ref": "#/components/schemas/CatalogTimePeriod"
          },
          "product_set_data": {
            "$ref": "#/components/schemas/CatalogProductSet"
          },
          "pricing_rule_data": {
            "$ref": "#/components/schemas/CatalogPricingRule"
          },
          "image_data": {
            "$ref": "#/components/schemas/CatalogImage"
          },
          "measurement_unit_data": {
            "$ref": "#/components/schemas/CatalogMeasurementUnit"
          },
          "subscription_plan_data": {
            "$ref": "#/components/schemas/CatalogSubscriptionPlan"
          },
          "item_option_data": {
            "$ref": "#/components/schemas/CatalogItemOption"
          },
          "item_option_value_data": {
            "$ref": "#/components/schemas/CatalogItemOptionValue"
          },
          "custom_attribute_definition_data": {
            "$ref": "#/components/schemas/CatalogCustomAttributeDefinition"
          },
          "quick_amounts_settings_data": {
            "$ref": "#/components/schemas/CatalogQuickAmountsSettings"
          }
        },
        "description": "The wrapper object for the Catalog entries of a given object type.\n\nThe type of a particular `CatalogObject` is determined by the value of the\n`type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.\nFor example, the following list shows some instances of `CatalogObject` of a given `type` and\ntheir corresponding data attribute that can be set:\n- For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.\n- For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.\n- For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.\n- For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.\n- For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.\n- For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.\n- For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.\n- For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.\n- For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.\n- For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.\n- For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.\n- For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.\n- For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.\n\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Design a Catalog](/catalog-api/design-a-catalog) guide.",
        "example": {
          "catalog_object": {
            "type": "{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY | DISCOUNT | TAX] }}",
            "id": "{{ set by Catalog during object creation }}",
            "updated_at": "{{ date & time of most recent update }}",
            "version": "{{ version of the CatalogObject }}",
            "is_deleted": "{{ [true | false] }}",
            "connect_v1_ids": {
              "catalog_v1_id": "{{ itemID from Catalog v1 }}",
              "location_id": "{{ location where v1 ID is used }}"
            },
            "present_at_all_locations": "{{ [true | false] }}",
            "present_at_location_ids": [
              "{{ LOCATIONID-1 }}",
              "{{ LOCATIONID-N }}"
            ],
            "absent_at_location_ids": [
              "{{ LOCATIONID-1 }}",
              "{{ LOCATIONID-N }}"
            ],
            "item_data": "{{ CatalogItem object only if type=ITEM }}",
            "item_variation_data": "{{ CatalogItemVariation object only if type=ITEM_VARIATION }}",
            "modifier_data": "{{ CatalogModifier object only if type=MODIFIER }}",
            "modifier_list_data": "{{ CatalogModifierList object only if type=MODIFIER_LIST }}",
            "category_data": "{{ CatalogCategory object only if type=CATEGORY }}",
            "discount_data": "{{ CatalogDiscount object only if type=DISCOUNT }}",
            "tax_data": "{{ CatalogTax object only if type=TAX }}"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogObjectBatch": {
        "required": [
          "objects"
        ],
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "description": "A list of CatalogObjects belonging to this batch.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "A batch of catalog objects.",
        "x-release-status": "PUBLIC"
      },
      "CatalogObjectReference": {
        "type": "object",
        "properties": {
          "object_id": {
            "type": "string",
            "description": "The ID of the referenced object."
          },
          "catalog_version": {
            "type": "integer",
            "description": "The version of the object.",
            "format": "int64"
          }
        },
        "description": "A reference to a Catalog object at a specific version. In general this is\nused as an entry point into a graph of catalog objects, where the objects exist\nat a specific version.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogPricingRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User-defined name for the pricing rule. For example, \"Buy one get one\nfree\" or \"10% off\"."
          },
          "time_period_ids": {
            "type": "array",
            "description": "A list of unique IDs for the catalog time periods when\nthis pricing rule is in effect. If left unset, the pricing rule is always\nin effect.",
            "items": {
              "type": "string"
            }
          },
          "discount_id": {
            "type": "string",
            "description": "Unique ID for the `CatalogDiscount` to take off\nthe price of all matched items."
          },
          "match_products_id": {
            "type": "string",
            "description": "Unique ID for the `CatalogProductSet` that will be matched by this rule. A match rule\nmatches within the entire cart, and can match multiple times. This field will always be set."
          },
          "apply_products_id": {
            "type": "string",
            "description": "__Deprecated__: Please use the `exclude_products_id` field to apply\nan exclude set instead. Exclude sets allow better control over quantity\nranges and offer more flexibility for which matched items receive a discount.\n\n`CatalogProductSet` to apply the pricing to.\nAn apply rule matches within the subset of the cart that fits the match rules (the match set).\nAn apply rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules.",
            "x-is-deprecated": true,
            "x-release-status": "DEPRECATED"
          },
          "exclude_products_id": {
            "type": "string",
            "description": "`CatalogProductSet` to exclude from the pricing rule.\nAn exclude rule matches within the subset of the cart that fits the match rules (the match set).\nAn exclude rule can only match once in the match set.\nIf not supplied, the pricing will be applied to all products in the match set.\nOther products retain their base price, or a price generated by other rules."
          },
          "valid_from_date": {
            "type": "string",
            "description": "Represents the date the Pricing Rule is valid from. Represented in RFC 3339 full-date format (YYYY-MM-DD)."
          },
          "valid_from_local_time": {
            "type": "string",
            "description": "Represents the local time the pricing rule should be valid from. Represented in RFC 3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated."
          },
          "valid_until_date": {
            "type": "string",
            "description": "Represents the date the Pricing Rule is valid until. Represented in RFC 3339 full-date format (YYYY-MM-DD)."
          },
          "valid_until_local_time": {
            "type": "string",
            "description": "Represents the local time the pricing rule should be valid until. Represented in RFC 3339 partial-time format\n(HH:MM:SS). Partial seconds will be truncated."
          },
          "exclude_strategy": {
            "type": "string",
            "description": "If an `exclude_products_id` was given, controls which subset of matched\nproducts is excluded from any discounts.\n\nDefault value: `LEAST_EXPENSIVE`\nSee [ExcludeStrategy](#type-excludestrategy) for possible values"
          }
        },
        "description": "Defines how discounts are automatically applied to a set of items that match the pricing rule\nduring the active time period.",
        "x-release-status": "PUBLIC"
      },
      "CatalogProductSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User-defined name for the product set. For example, \"Clearance Items\"\nor \"Winter Sale Items\"."
          },
          "product_ids_any": {
            "type": "array",
            "description": " Unique IDs for any `CatalogObject` included in this product set. Any\nnumber of these catalog objects can be in an order for a pricing rule to apply.\n\nThis can be used with `product_ids_all` in a parent `CatalogProductSet` to\nmatch groups of products for a bulk discount, such as a discount for an\nentree and side combo.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs.",
            "items": {
              "type": "string"
            }
          },
          "product_ids_all": {
            "type": "array",
            "description": "Unique IDs for any `CatalogObject` included in this product set.\nAll objects in this set must be included in an order for a pricing rule to apply.\n\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.\n\nMax: 500 catalog object IDs.",
            "items": {
              "type": "string"
            }
          },
          "quantity_exact": {
            "type": "integer",
            "description": "If set, there must be exactly this many items from `products_any` or `products_all`\nin the cart for the discount to apply.\n\nCannot be combined with either `quantity_min` or `quantity_max`.",
            "format": "int64"
          },
          "quantity_min": {
            "type": "integer",
            "description": "If set, there must be at least this many items from `products_any` or `products_all`\nin a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if\n`quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.",
            "format": "int64"
          },
          "quantity_max": {
            "type": "integer",
            "description": "If set, the pricing rule will apply to a maximum of this many items from\n`products_any` or `products_all`.",
            "format": "int64"
          },
          "all_products": {
            "type": "boolean",
            "description": "If set to `true`, the product set will include every item in the catalog.\nOnly one of `product_ids_all`, `product_ids_any`, or `all_products` can be set."
          }
        },
        "description": "Represents a collection of catalog objects for the purpose of applying a\n`PricingRule`. Including a catalog object will include all of its subtypes.\nFor example, including a category in a product set will include all of its\nitems and associated item variations in the product set. Including an item in\na product set will also include its item variations.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQuery": {
        "type": "object",
        "properties": {
          "sorted_attribute_query": {
            "$ref": "#/components/schemas/CatalogQuerySortedAttribute"
          },
          "exact_query": {
            "$ref": "#/components/schemas/CatalogQueryExact"
          },
          "set_query": {
            "$ref": "#/components/schemas/CatalogQuerySet"
          },
          "prefix_query": {
            "$ref": "#/components/schemas/CatalogQueryPrefix"
          },
          "range_query": {
            "$ref": "#/components/schemas/CatalogQueryRange"
          },
          "text_query": {
            "$ref": "#/components/schemas/CatalogQueryText"
          },
          "items_for_tax_query": {
            "$ref": "#/components/schemas/CatalogQueryItemsForTax"
          },
          "items_for_modifier_list_query": {
            "$ref": "#/components/schemas/CatalogQueryItemsForModifierList"
          },
          "items_for_item_options_query": {
            "$ref": "#/components/schemas/CatalogQueryItemsForItemOptions"
          },
          "item_variations_for_item_option_values_query": {
            "$ref": "#/components/schemas/CatalogQueryItemVariationsForItemOptionValues"
          }
        },
        "description": "A query composed of one or more different types of filters to narrow the scope of targeted objects when calling the `SearchCatalogObjects` endpoint.\n\nAlthough a query can have multiple filters, only certain query types can be combined per call to [SearchCatalogObjects](#endpoint-Catalog-SearchCatalogObjects).\nAny combination of the following types may be used together:\n- [exact_query](#type-CatalogExactQuery)\n- [prefix_query](#type-CatalogPrefixQuery)\n- [range_query](#type-CatalogRangeQuery)\n- [sorted_attribute_query](#type-CatalogSortedAttribute)\n- [text_query](#type-CatalogTextQuery)\nAll other query types cannot be combined with any others.\n\nWhen a query filter is based on an attribute, the attribute must be searchable.\nSearchable attributes are listed as follows, along their parent types that can be searched for with applicable query filters.\n\n* Searchable attribute and objects queryable by searchable attributes **\n- `name`:  `CatalogItem`, `CatalogItemVariation`, `CatalogCategory`, `CatalogTax`, `CatalogDiscount`, `CatalogModifier`, 'CatalogModifierList`, `CatalogItemOption`, `CatalogItemOptionValue`\n- `description`: `CatalogItem`, `CatalogItemOptionValue`\n- `abbreviation`: `CatalogItem`\n- `upc`: `CatalogItemVariation`\n- `sku`: `CatalogItemVariation`\n- `caption`: `CatalogImage`\n- `display_name`: `CatalogItemOption`\n\nFor example, to search for [CatalogItem](#type-CatalogItem) objects by searchable attributes, you can use\nthe `\"name\"`, `\"description\"`, or `\"abbreviation\"` attribute in an applicable query filter.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryExact": {
        "required": [
          "attribute_name",
          "attribute_value"
        ],
        "type": "object",
        "properties": {
          "attribute_name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the attribute to be searched. Matching of the attribute name is exact."
          },
          "attribute_value": {
            "type": "string",
            "description": "The desired value of the search attribute. Matching of the attribute value is case insensitive and can be partial.\nFor example, if a specified value of \"sma\", objects with the named attribute value of \"Small\", \"small\" are both matched."
          }
        },
        "description": "The query filter to return the search result by exact match of the specified attribute name and value.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryItemVariationsForItemOptionValues": {
        "type": "object",
        "properties": {
          "item_option_value_ids": {
            "type": "array",
            "description": "A set of `CatalogItemOptionValue` IDs to be used to find associated\n`CatalogItemVariation`s. All ItemVariations that contain all of the given\nItem Option Values (in any order) will be returned.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the item variations containing the specified item option value IDs.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogQueryItemsForItemOptions": {
        "type": "object",
        "properties": {
          "item_option_ids": {
            "type": "array",
            "description": "A set of `CatalogItemOption` IDs to be used to find associated\n`CatalogItem`s. All Items that contain all of the given Item Options (in any order)\nwill be returned.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the items containing the specified item option IDs.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogQueryItemsForModifierList": {
        "required": [
          "modifier_list_ids"
        ],
        "type": "object",
        "properties": {
          "modifier_list_ids": {
            "type": "array",
            "description": "A set of `CatalogModifierList` IDs to be used to find associated `CatalogItem`s.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the items containing the specified modifier list IDs.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryItemsForTax": {
        "required": [
          "tax_ids"
        ],
        "type": "object",
        "properties": {
          "tax_ids": {
            "type": "array",
            "description": "A set of `CatalogTax` IDs to be used to find associated `CatalogItem`s.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the items containing the specified tax IDs.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryPrefix": {
        "required": [
          "attribute_name",
          "attribute_prefix"
        ],
        "type": "object",
        "properties": {
          "attribute_name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the attribute to be searched."
          },
          "attribute_prefix": {
            "minLength": 1,
            "type": "string",
            "description": "The desired prefix of the search attribute value."
          }
        },
        "description": "The query filter to return the search result whose named attribute values are prefixed by the specified attribute value.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryRange": {
        "required": [
          "attribute_name"
        ],
        "type": "object",
        "properties": {
          "attribute_name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the attribute to be searched."
          },
          "attribute_min_value": {
            "type": "integer",
            "description": "The desired minimum value for the search attribute (inclusive).",
            "format": "int64"
          },
          "attribute_max_value": {
            "type": "integer",
            "description": "The desired maximum value for the search attribute (inclusive).",
            "format": "int64"
          }
        },
        "description": "The query filter to return the search result whose named attribute values fall between the specified range.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQuerySet": {
        "required": [
          "attribute_name",
          "attribute_values"
        ],
        "type": "object",
        "properties": {
          "attribute_name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the attribute to be searched. Matching of the attribute name is exact."
          },
          "attribute_values": {
            "type": "array",
            "description": "The desired values of the search attribute. Matching of the attribute values is exact and case insensitive.\nA maximum of 250 values may be searched in a request.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the search result(s) by exact match of the specified `attribute_name` and any of\nthe `attribute_values`.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQuerySortedAttribute": {
        "required": [
          "attribute_name"
        ],
        "type": "object",
        "properties": {
          "attribute_name": {
            "minLength": 1,
            "type": "string",
            "description": "The attribute whose value is used as the sort key."
          },
          "initial_attribute_value": {
            "type": "string",
            "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts)."
          },
          "sort_order": {
            "type": "string",
            "description": "The desired sort order, `\"ASC\"` (ascending) or `\"DESC\"` (descending).\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "The query expression to specify the key to sort search results.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQueryText": {
        "required": [
          "keywords"
        ],
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "description": "A list of 1, 2, or 3 search keywords. Keywords with fewer than 3 characters are ignored.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The query filter to return the search result whose searchable attribute values contain all of the specified keywords or tokens, independent of the token order or case.",
        "x-release-status": "PUBLIC"
      },
      "CatalogQuickAmount": {
        "required": [
          "amount",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Represents the type of the Quick Amount.\nSee [CatalogQuickAmountType](#type-catalogquickamounttype) for possible values"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "score": {
            "type": "integer",
            "description": "Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].\nMANUAL type amount will always have score = 100.",
            "format": "int64"
          },
          "ordinal": {
            "type": "integer",
            "description": "The order in which this Quick Amount should be displayed.",
            "format": "int64"
          }
        },
        "description": "Represents a Quick Amount in the Catalog.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogQuickAmountsSettings": {
        "required": [
          "option"
        ],
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "description": "Represents the option seller currently uses on Quick Amounts.\nSee [CatalogQuickAmountsSettingsOption](#type-catalogquickamountssettingsoption) for possible values"
          },
          "eligible_for_auto_amounts": {
            "type": "boolean",
            "description": "Represents location's eligibility for auto amounts\nThe boolean should be consistent with whether there are AUTO amounts in the `amounts`."
          },
          "amounts": {
            "type": "array",
            "description": "Represents a set of Quick Amounts at this location.",
            "items": {
              "$ref": "#/components/schemas/CatalogQuickAmount"
            }
          }
        },
        "description": "A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogSubscriptionPlan": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the plan."
          },
          "phases": {
            "type": "array",
            "description": "A list of SubscriptionPhase containing the `SubscriptionPhase` for this plan.",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPhase"
            }
          }
        },
        "description": "Describes a subscription plan. For more information, see\n[Set Up and Manage a Subscription Plan](/docs/subscriptions-api/setup-plan).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CatalogTax": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The tax's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."
          },
          "calculation_phase": {
            "type": "string",
            "description": "Whether the tax is calculated based on a payment's subtotal or total.\nSee [TaxCalculationPhase](#type-taxcalculationphase) for possible values"
          },
          "inclusion_type": {
            "type": "string",
            "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`.\nSee [TaxInclusionType](#type-taxinclusiontype) for possible values"
          },
          "percentage": {
            "type": "string",
            "description": "The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.\nA value of `7.5` corresponds to 7.5%."
          },
          "applies_to_custom_amounts": {
            "type": "boolean",
            "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular `CatalogItem`."
          },
          "enabled": {
            "type": "boolean",
            "description": "A Boolean flag to indicate whether the tax is displayed as enabled (`true`) in the Square Point of Sale app or not (`false`)."
          }
        },
        "description": "A tax applicable to an item.",
        "example": {
          "object": {
            "type": "TAX",
            "id": "#SalesTax",
            "present_at_all_locations": true,
            "tax_data": {
              "name": "Sales Tax",
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "inclusion_type": "ADDITIVE",
              "percentage": "5.0",
              "fee_applies_to_custom_amounts": true,
              "enabled": true
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CatalogTimePeriod": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "An iCalendar (RFC 5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which\nspecifies the name, timing, duration and recurrence of this time period.\n\nExample:\n\n```\nDTSTART:20190707T180000\nDURATION:P2H\nRRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR\n```\n\nOnly `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported.\n`DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT`\nand `END:VEVENT` is not required in the request. The response will always\ninclude them."
          }
        },
        "description": "Represents a time period - either a single period or a repeating period.",
        "x-release-status": "PUBLIC"
      },
      "CatalogV1Id": {
        "type": "object",
        "properties": {
          "catalog_v1_id": {
            "type": "string",
            "description": "The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID."
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the `Location` this Connect V1 ID is associated with."
          }
        },
        "description": "A Square API V1 identifier of an item, including the object ID and its associated location ID.",
        "x-release-status": "PUBLIC"
      },
      "ChargeRequest": {
        "required": [
          "amount_money",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "card_nonce": {
            "maxLength": 192,
            "type": "string",
            "description": "A nonce generated from the `SqPaymentForm` that represents the card\nto charge.\n\nThe application that provides a nonce to this endpoint must be the\n_same application_ that generated the nonce with the `SqPaymentForm`.\nOtherwise, the nonce is invalid.\n\nDo not provide a value for this field if you provide a value for\n`customer_card_id`."
          },
          "customer_card_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the customer card on file to charge. Do\nnot provide a value for this field if you provide a value for `card_nonce`.\n\nIf you provide this value, you _must_ also provide a value for\n`customer_id`."
          },
          "delay_capture": {
            "type": "boolean",
            "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n`CaptureTransaction` or a Void\n(with the `VoidTransaction`.\n\nDefault value: `false`"
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters."
          },
          "note": {
            "maxLength": 60,
            "type": "string",
            "description": "An optional note to associate with the transaction.\n\nThis value cannot exceed 60 characters."
          },
          "customer_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise."
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "buyer_email_address": {
            "type": "string",
            "description": "The buyer's email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided."
          },
          "order_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the order to associate with this transaction.\n\nIf you provide this value, the `amount_money` value of your request must\n__exactly match__ the value of the order's `total_money` field."
          },
          "additional_recipients": {
            "type": "array",
            "description": "The basic primitive of multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your additional_recipients\nmust not be more than 90% of the `amount_money` value in the charge request.\nThe `location_id` must be the valid location of the app owner merchant.\n\nThis field requires the `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in sandbox.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRecipient"
            }
          },
          "verification_token": {
            "type": "string",
            "description": "A token generated by SqPaymentForm's verifyBuyer() that represents\ncustomer's device info and 3ds challenge result."
          }
        },
        "description": "Defines the parameters that can be included in the body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nDeprecated - recommend using [CreatePayment](#endpoint-payments-createpayment)",
        "example": {
          "request_body": {
            "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
            "shipping_address": {
              "address_line_1": "123 Main St",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94114",
              "country": "US"
            },
            "billing_address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "administrative_district_level_1": "NY",
              "locality": "New York",
              "postal_code": "10003",
              "country": "US"
            },
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 20,
                  "currency": "USD"
                }
              }
            ],
            "card_nonce": "card_nonce_from_square_123",
            "reference_id": "some optional reference id",
            "note": "some optional note",
            "delay_capture": false
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Charge/ChargeRequest.python",
          "csharp": "/sdk_samples/Charge/ChargeRequest.csharp",
          "java": "/sdk_samples/Charge/ChargeRequest.java",
          "php": "/sdk_samples/Charge/ChargeRequest.php",
          "javascript": "/sdk_samples/Charge/ChargeRequest.javascript",
          "ruby": "/sdk_samples/Charge/ChargeRequest.ruby"
        }
      },
      "ChargeRequestAdditionalRecipient": {
        "required": [
          "amount_money",
          "description",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The location ID for a recipient (other than the merchant) receiving a portion of the tender."
          },
          "description": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The description of the additional recipient."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents an additional recipient (other than the merchant) entitled to a portion of the tender.\nSupport is currently limited to USD, CAD and GBP currencies",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ChargeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
        "example": {
          "transaction": {
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "created_at": "2016-03-10T22:57:56Z",
            "tenders": [
              {
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "created_at": "2016-03-10T22:57:56Z",
                "note": "some optional note",
                "amount_money": {
                  "amount": 200,
                  "currency": "USD"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 20,
                      "currency": "USD"
                    },
                    "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
                  }
                ],
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED"
                }
              }
            ],
            "reference_id": "some optional reference id",
            "product": "EXTERNAL_API"
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Charge/ChargeResponse.python",
          "csharp": "/sdk_samples/Charge/ChargeResponse.csharp",
          "java": "/sdk_samples/Charge/ChargeResponse.java",
          "php": "/sdk_samples/Charge/ChargeResponse.php",
          "javascript": "/sdk_samples/Charge/ChargeResponse.javascript",
          "ruby": "/sdk_samples/Charge/ChargeResponse.ruby"
        }
      },
      "CheckAppointmentsOnboardedRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CheckAppointmentsOnboardedResponse": {
        "type": "object",
        "properties": {
          "appointments_onboarded": {
            "type": "boolean",
            "description": "Indicates whether the seller has enabled the Square Appointments service (`true`) or not (`false`)."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Checkout": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID generated by Square Checkout when a new checkout is requested."
          },
          "checkout_page_url": {
            "type": "string",
            "description": "The URL that the buyer's browser should be redirected to after the\ncheckout is completed."
          },
          "ask_for_shipping_address": {
            "type": "boolean",
            "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`."
          },
          "merchant_support_email": {
            "type": "string",
            "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set."
          },
          "pre_populate_buyer_email": {
            "type": "string",
            "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
          },
          "pre_populate_shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "redirect_url": {
            "type": "string",
            "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n<pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow."
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "created_at": {
            "type": "string",
            "description": "The time when the checkout was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "additional_recipients": {
            "type": "array",
            "description": "Additional recipients (other than the merchant) receiving a portion of this checkout.\nFor example, fees assessed on the purchase by a third party integration.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRecipient"
            }
          }
        },
        "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
        "x-release-status": "PUBLIC"
      },
      "CompletePaymentRequest": {
        "type": "object",
        "description": "Describes a request to complete (capture) a payment using \n[CompletePayment](#endpoint-payments-completepayment).\n\nBy default, payments are set to `autocomplete` immediately after they are created.\nTo complete payments manually, set `autocomplete` to `false`.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "CompletePaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "description": "Defines the response returned by[CompletePayment](#endpoint-payments-completepayment).",
        "example": {
          "payment": {
            "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "created_at": "2019-07-10T13:39:55.317Z",
            "updated_at": "2019-07-10T13:40:05.982Z",
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "app_fee_money": {
              "amount": 10,
              "currency": "USD"
            },
            "total_money": {
              "amount": 200,
              "currency": "USD"
            },
            "approved_money": {
              "amount": 200,
              "currency": "USD"
            },
            "status": "COMPLETED",
            "source_type": "CARD",
            "card_details": {
              "status": "CAPTURED",
              "card": {
                "card_brand": "VISA",
                "last_4": "2796",
                "exp_month": 7,
                "exp_year": 2026,
                "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
                "card_type": "DEBIT",
                "prepaid_type": "PREPAID",
                "bin": "411111"
              },
              "entry_method": "ON_FILE",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "MhIjEN",
              "statement_description": "SQ *MY MERCHANT",
              "card_payment_timeline": {
                "authorized_at": "2019-07-10T13:23:49.234Z",
                "captured_at": "2019-07-10T13:23:49.446Z"
              }
            },
            "location_id": "XTI0H92143A39",
            "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
            "reference_id": "123456",
            "note": "Brief description",
            "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
            "receipt_number": "GQTF",
            "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "version_token": "7knzZI16u3QBh2xXD7FH4GFwESqgam7Z9w2Ya0aSD9i6o"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "Coordinates": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "The latitude of the coordinate expressed in degrees."
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of the coordinate expressed in degrees."
          }
        },
        "description": "Latitude and longitude coordinates.",
        "x-release-status": "PUBLIC"
      },
      "CreateBookingRequest": {
        "required": [
          "booking"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 255,
            "type": "string",
            "description": "A unique key to make this request an idempotent operation."
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        },
        "description": "",
        "example": {
          "booking": {
            "customer_id": "EX2QSVGTZN4K1E5QE1CBFNVQ8M",
            "start_at": "2020-11-26T13:00:00Z",
            "location_id": "LEQHH0YY8B42M",
            "appointment_segments": [
              {
                "duration_minutes": 60,
                "team_member_id": "TMXUrsBWWcHTt79t",
                "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                "service_variation_version": 1599775456731
              }
            ]
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "booking": {
            "id": "zkras0xv0xwswx",
            "version": 0,
            "status": "ACCEPTED",
            "created_at": "2020-10-28T15:47:41Z",
            "updated_at": "2020-10-28T15:47:41Z",
            "location_id": "LEQHH0YY8B42M",
            "customer_id": "EX2QSVGTZN4K1E5QE1CBFNVQ8M",
            "customer_note": "",
            "seller_note": "",
            "start_at": "2020-11-26T13:00:00Z",
            "appointment_segments": [
              {
                "duration_minutes": 60,
                "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                "team_member_id": "TMXUrsBWWcHTt79t",
                "service_variation_version": 1599775456731
              }
            ]
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateBreakTypeRequest": {
        "required": [
          "break_type"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique string value to insure idempotency of the operation"
          },
          "break_type": {
            "$ref": "#/components/schemas/BreakType"
          }
        },
        "description": "A request to create a new `BreakType`",
        "example": {
          "request_body": {
            "idempotency_key": "PAD3NG5KSN2GL",
            "break_type": {
              "location_id": "CGJN03P1D08GF",
              "break_name": "Lunch Break",
              "expected_duration": "PT30M",
              "is_paid": true
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateBreakTypeResponse": {
        "type": "object",
        "properties": {
          "break_type": {
            "$ref": "#/components/schemas/BreakType"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to the request to create a `BreakType`. Contains\nthe created `BreakType` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "break_type": {
            "id": "49SSVDJG76WF3",
            "location_id": "CGJN03P1D08GF",
            "break_name": "Lunch Break",
            "expected_duration": "PT30M",
            "is_paid": true,
            "version": 1,
            "created_at": "2019-02-26T22:42:54Z",
            "updated_at": "2019-02-26T22:42:54Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateCheckoutRequest": {
        "required": [
          "idempotency_key",
          "order"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this checkout among others you have created. It can be\nany valid string but must be unique for every order sent to Square Checkout for a given location ID.\n\nThe idempotency key is used to avoid processing the same order more than once. If you are \nunsure whether a particular checkout was created successfully, you can attempt it again with\nthe same idempotency key and all the same other parameters without worrying about creating duplicates.\n\nYou should use a random number/string generator native to the language\nyou are working in to generate strings for your idempotency keys.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency)."
          },
          "order": {
            "$ref": "#/components/schemas/CreateOrderRequest"
          },
          "ask_for_shipping_address": {
            "type": "boolean",
            "description": "If `true`, Square Checkout collects shipping information on your behalf and stores \nthat information with the transaction information in the Square Seller Dashboard.\n\nDefault: `false`."
          },
          "merchant_support_email": {
            "maxLength": 254,
            "type": "string",
            "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the seller.\n\nIf this value is not set, the confirmation page and email display the\nprimary email address associated with the seller's Square account.\n\nDefault: none; only exists if explicitly set."
          },
          "pre_populate_buyer_email": {
            "maxLength": 254,
            "type": "string",
            "description": "If provided, the buyer's email is prepopulated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set."
          },
          "pre_populate_shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "redirect_url": {
            "maxLength": 800,
            "type": "string",
            "description": "The URL to redirect to after the checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect URL is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n<pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>\n\nIf you do not provide a redirect URL, Square Checkout displays an order\nconfirmation page on your behalf; however, it is strongly recommended that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.\n\nDefault: none; only exists if explicitly set."
          },
          "additional_recipients": {
            "type": "array",
            "description": "The basic primitive of a multi-party transaction. The value is optional.\nThe transaction facilitated by you can be split from here.\n\nIf you provide this value, the `amount_money` value in your `additional_recipients` field\ncannot be more than 90% of the `total_money` calculated by Square for your order.\nThe `location_id` must be a valid seller location where the checkout is occurring.\n\nThis field requires `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.\n\nThis field is currently not supported in the Square Sandbox.",
            "items": {
              "$ref": "#/components/schemas/ChargeRequestAdditionalRecipient"
            }
          },
          "note": {
            "maxLength": 60,
            "type": "string",
            "description": "An optional note to associate with the `checkout` object.\n\nThis value cannot exceed 60 characters."
          }
        },
        "description": "Defines the parameters that can be included in the body of\na request to the `CreateCheckout` endpoint.",
        "example": {
          "request_body": {
            "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad6",
            "redirect_url": "https://merchant.website.com/order-confirm",
            "order": {
              "idempotency_key": "12ae1696-z1e3-4328-af6d-f1e04d947gd4",
              "order": {
                "location_id": "location_id",
                "customer_id": "customer_id",
                "reference_id": "reference_id",
                "line_items": [
                  {
                    "name": "Printed T Shirt",
                    "quantity": "2",
                    "base_price_money": {
                      "amount": 1500,
                      "currency": "USD"
                    },
                    "applied_discounts": [
                      {
                        "discount_uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4"
                      }
                    ],
                    "applied_taxes": [
                      {
                        "tax_uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3"
                      }
                    ]
                  },
                  {
                    "name": "Slim Jeans",
                    "quantity": "1",
                    "base_price_money": {
                      "amount": 2500,
                      "currency": "USD"
                    }
                  },
                  {
                    "name": "Woven Sweater",
                    "quantity": "3",
                    "base_price_money": {
                      "amount": 3500,
                      "currency": "USD"
                    }
                  }
                ],
                "taxes": [
                  {
                    "uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                    "type": "INCLUSIVE",
                    "percentage": "7.75",
                    "scope": "LINE_ITEM"
                  }
                ],
                "discounts": [
                  {
                    "uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                    "type": "FIXED_AMOUNT",
                    "scope": "LINE_ITEM",
                    "amount_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ]
              }
            },
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 60,
                  "currency": "USD"
                }
              }
            ],
            "ask_for_shipping_address": true,
            "merchant_support_email": "merchant+support@website.com",
            "pre_populate_buyer_email": "example@email.com",
            "pre_populate_shipping_address": {
              "address_line_1": "1455 Market St.",
              "address_line_2": "Suite 600",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94103",
              "country": "US",
              "first_name": "Jane",
              "last_name": "Doe"
            }
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.python",
          "csharp": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp",
          "java": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.java",
          "php": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.php",
          "javascript": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.javascript",
          "ruby": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby"
        }
      },
      "CreateCheckoutResponse": {
        "type": "object",
        "properties": {
          "checkout": {
            "$ref": "#/components/schemas/Checkout"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the `CreateCheckout` endpoint.",
        "example": {
          "checkout": {
            "id": "CAISEHGimXh-C3RIT4og1a6u1qw",
            "checkout_page_url": "https://connect.squareup.com/v2/checkout?c=CAISEHGimXh-C3RIT4og1a6u1qw&l=CYTKRM7R7JMV8",
            "ask_for_shipping_address": true,
            "merchant_support_email": "merchant+support@website.com",
            "pre_populate_buyer_email": "example@email.com",
            "pre_populate_shipping_address": {
              "address_line_1": "1455 Market St.",
              "address_line_2": "Suite 600",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94103",
              "country": "US",
              "first_name": "Jane",
              "last_name": "Doe"
            },
            "redirect_url": "https://merchant.website.com/order-confirm",
            "order": {
              "location_id": "location_id",
              "customer_id": "customer_id",
              "reference_id": "reference_id",
              "line_items": [
                {
                  "name": "Printed T Shirt",
                  "quantity": "2",
                  "applied_taxes": [
                    {
                      "tax_uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                      "applied_money": {
                        "amount": 103,
                        "currency": "USD"
                      }
                    }
                  ],
                  "applied_discounts": [
                    {
                      "discount_uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                      "applied_money": {
                        "amount": 100,
                        "currency": "USD"
                      }
                    }
                  ],
                  "base_price_money": {
                    "amount": 1500,
                    "currency": "USD"
                  },
                  "total_tax_money": {
                    "amount": 103,
                    "currency": "USD"
                  },
                  "total_discount_money": {
                    "amount": 100,
                    "currency": "USD"
                  },
                  "total_money": {
                    "amount": 1503,
                    "currency": "USD"
                  }
                },
                {
                  "name": "Slim Jeans",
                  "quantity": "1",
                  "base_price_money": {
                    "amount": 2500,
                    "currency": "USD"
                  },
                  "total_money": {
                    "amount": 2500,
                    "currency": "USD"
                  }
                },
                {
                  "name": "Woven Sweater",
                  "quantity": "3",
                  "base_price_money": {
                    "amount": 3500,
                    "currency": "USD"
                  },
                  "total_money": {
                    "amount": 10500,
                    "currency": "USD"
                  }
                }
              ],
              "taxes": [
                {
                  "uid": "38ze1696-z1e3-5628-af6d-f1e04d947fg3",
                  "type": "INCLUSIVE",
                  "percentage": "7.75",
                  "scope": "LINE_ITEM"
                }
              ],
              "discounts": [
                {
                  "uid": "56ae1696-z1e3-9328-af6d-f1e04d947gd4",
                  "type": "FIXED_AMOUNT",
                  "scope": "LINE_ITEM",
                  "amount_money": {
                    "amount": 100,
                    "currency": "USD"
                  },
                  "applied_money": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ],
              "total_money": {
                "amount": 14503,
                "currency": "USD"
              },
              "total_tax_money": {
                "amount": 103,
                "currency": "USD"
              },
              "total_discount_money": {
                "amount": 100,
                "currency": "USD"
              }
            },
            "created_at": "2017-06-16T22:25:35Z",
            "version": 1,
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 60,
                  "currency": "USD"
                }
              }
            ]
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateCustomerCardRequest": {
        "required": [
          "card_nonce"
        ],
        "type": "object",
        "properties": {
          "card_nonce": {
            "type": "string",
            "description": "A card nonce representing the credit card to link to the customer.\n\nCard nonces are generated by the Square Payment Form when customers enter\ntheir card information. See\n[Embedding the payment form](https://developer.squareup.com/docs/payment-form/payment-form-walkthrough) for\nmore information.\n\n__NOTE:__ Card nonces generated by digital wallets (e.g., Apple Pay)\ncannot be used to create a customer card."
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "cardholder_name": {
            "type": "string",
            "description": "The full name printed on the credit card."
          },
          "verification_token": {
            "type": "string",
            "description": "An identifying token generated by `SqPaymentForm.verifyBuyer()`.\nVerification tokens encapsulate customer device information and 3-D Secure\nchallenge results to indicate that Square has verified the buyer identity."
          }
        },
        "description": "Defines the fields that are included in the request body of a request\nto the CreateCustomerCard endpoint.",
        "example": {
          "request_body": {
            "card_nonce": "YOUR_CARD_NONCE",
            "billing_address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "cardholder_name": "Amelia Earhart"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python",
          "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp",
          "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.java",
          "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php",
          "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.javascript",
          "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby"
        }
      },
      "CreateCustomerCardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the CreateCustomerCard endpoint.\n\nOne of `errors` or `card` is present in a given response (never both).",
        "example": {
          "card": {
            "id": "icard-card_id",
            "card_brand": "VISA",
            "last_4": "1111",
            "exp_month": 11,
            "exp_year": 2018,
            "cardholder_name": "Amelia Earhart",
            "billing_address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            }
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python",
          "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp",
          "java": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.java",
          "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php",
          "javascript": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.javascript",
          "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby"
        }
      },
      "CreateCustomerGroupRequest": {
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "type": "string",
            "description": "The idempotency key for the request. See the [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency)\nguide for more information."
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          }
        },
        "description": "Defines the body parameters that can be provided in a request to the\n[CreateCustomerGroup](#endpoint-createcustomegroup) endpoint.",
        "example": {
          "request_body": {
            "group": {
              "name": "Loyal Customers"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateCustomerGroupResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerGroup](#endpoint-createcustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
        "example": {
          "group": {
            "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
            "name": "Loyal Customers",
            "created_at": "2020-04-13T21:54:57.863Z",
            "updated_at": "2020-04-13T21:54:58Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "idempotency_key": {
            "type": "string",
            "description": "The idempotency key for the request.\tSee the\n[Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) guide for more information."
          },
          "given_name": {
            "type": "string",
            "description": "The given (i.e., first) name associated with the customer profile."
          },
          "family_name": {
            "type": "string",
            "description": "The family (i.e., last) name associated with the customer profile."
          },
          "company_name": {
            "type": "string",
            "description": "A business name associated with the customer profile."
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the customer profile."
          },
          "email_address": {
            "type": "string",
            "description": "The email address associated with the customer profile."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "type": "string",
            "description": "The 11-digit phone number associated with the customer profile."
          },
          "reference_id": {
            "type": "string",
            "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
          },
          "note": {
            "type": "string",
            "description": "A custom note associated with the customer profile."
          },
          "birthday": {
            "type": "string",
            "description": "The birthday associated with the customer profile, in RFC 3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
          }
        },
        "description": "Defines the body parameters that can be provided in a request to the\nCreateCustomer endpoint.",
        "example": {
          "request_body": {
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateCustomer/CreateCustomerRequest.python",
          "csharp": "/sdk_samples/CreateCustomer/CreateCustomerRequest.csharp",
          "java": "/sdk_samples/CreateCustomer/CreateCustomerRequest.java",
          "php": "/sdk_samples/CreateCustomer/CreateCustomerRequest.php",
          "javascript": "/sdk_samples/CreateCustomer/CreateCustomerRequest.javascript",
          "ruby": "/sdk_samples/CreateCustomer/CreateCustomerRequest.ruby"
        }
      },
      "CreateCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the CreateCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
        "example": {
          "customer": {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-23T20:21:54.859Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateCustomer/CreateCustomerResponse.python",
          "csharp": "/sdk_samples/CreateCustomer/CreateCustomerResponse.csharp",
          "java": "/sdk_samples/CreateCustomer/CreateCustomerResponse.java",
          "php": "/sdk_samples/CreateCustomer/CreateCustomerResponse.php",
          "javascript": "/sdk_samples/CreateCustomer/CreateCustomerResponse.javascript",
          "ruby": "/sdk_samples/CreateCustomer/CreateCustomerResponse.ruby"
        }
      },
      "CreateDeviceCodeRequest": {
        "required": [
          "device_code",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this CreateDeviceCode request. Keys can\nbe any valid string but must be unique for every CreateDeviceCode request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          },
          "device_code": {
            "$ref": "#/components/schemas/DeviceCode"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "01bb00a6-0c86-4770-94ed-f5fca973cd56",
            "device_code": {
              "name": "Counter 1",
              "location_id": "B5E4484SHHNYH",
              "product_type": "TERMINAL_API"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateDeviceCodeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "device_code": {
            "$ref": "#/components/schemas/DeviceCode"
          }
        },
        "description": "",
        "example": {
          "device_code": {
            "id": "B3Z6NAMYQSMTM",
            "name": "Counter 1",
            "code": "EBCARJ",
            "product_type": "TERMINAL_API",
            "location_id": "B5E4484SHHNYH",
            "created_at": "2020-02-06T18:44:33.000Z",
            "pair_by": "2020-02-06T18:49:33.000Z",
            "status": "UNPAIRED",
            "status_changed_at": "2020-02-06T18:44:33.000Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateDisputeEvidenceTextRequest": {
        "required": [
          "evidence_text",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string",
            "description": "The Unique ID. For more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
          },
          "evidence_type": {
            "type": "string",
            "description": "The type of evidence you are uploading.\nSee [DisputeEvidenceType](#type-disputeevidencetype) for possible values"
          },
          "evidence_text": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "The evidence string."
          }
        },
        "description": "Defines the parameters for a `CreateDisputeEvidenceText` request.",
        "example": {
          "request_body": {
            "evidence_type": "TRACKING_NUMBER",
            "evidence_text": "1Z8888888888888888",
            "idempotency_key": "ed3ee3933d946f1514d505d173c82648"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateDisputeEvidenceTextResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "evidence": {
            "$ref": "#/components/schemas/DisputeEvidence"
          }
        },
        "description": "Defines the fields in a `CreateDisputeEvidenceText` response.",
        "example": {
          "evidence": {
            "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
            "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
            "evidence_text": "1Z8888888888888888",
            "evidence_type": "TRACKING_NUMBER",
            "uploaded_at": "2018-10-18T16:01:10.000Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateInvoiceRequest": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "idempotency_key": {
            "maxLength": 128,
            "type": "string",
            "description": "A unique string that identifies the `CreateInvoice` request. If you do not \nprovide `idempotency_key` (or provide an empty string as the value), the endpoint \ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
          }
        },
        "description": "Describes a `CreateInvoice` request.",
        "example": {
          "request_body": {
            "idempotency_key": "ce3748f9-5fc1-4762-aa12-aae5e843f1f4",
            "invoice": {
              "location_id": "ES0RJRZYEC39A",
              "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
              "scheduled_at": "2030-01-13T10:00:00Z",
              "primary_recipient": {
                "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4"
              },
              "delivery_method": "EMAIL",
              "payment_requests": [
                {
                  "request_type": "BALANCE",
                  "due_date": "2030-01-24",
                  "tipping_enabled": true,
                  "automatic_payment_source": "NONE",
                  "reminders": [
                    {
                      "message": "Your invoice is due tomorrow",
                      "relative_scheduled_days": -1
                    }
                  ]
                }
              ],
              "invoice_number": "inv-100",
              "title": "Event Planning Services",
              "description": "We appreciate your business!",
              "custom_fields": [
                {
                  "label": "Event Reference Number",
                  "value": "Ref. #1234",
                  "placement": "ABOVE_LINE_ITEMS"
                },
                {
                  "label": "Terms of Service",
                  "value": "The terms of service are...",
                  "placement": "BELOW_LINE_ITEMS"
                }
              ]
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response returned by the `CreateInvoice` request.",
        "example": {
          "invoice": {
            "id": "gt2zv1z6mnUm1V7KMxxf3w",
            "version": 0,
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": true,
                "reminders": [
                  {
                    "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                    "relative_scheduled_days": -1,
                    "message": "Your invoice is due tomorrow",
                    "status": "PENDING"
                  }
                ],
                "computed_amount_money": {
                  "amount": 10000,
                  "currency": "USD"
                },
                "total_completed_amount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "automatic_payment_source": "NONE"
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "status": "DRAFT",
            "timezone": "America/Los_Angeles",
            "created_at": "2020-06-18T17:45:13Z",
            "updated_at": "2020-06-18T17:45:13Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "phone_number": "1-212-555-4240"
            },
            "custom_fields": [
              {
                "label": "Event Reference Number",
                "value": "Ref. #1234",
                "placement": "ABOVE_LINE_ITEMS"
              },
              {
                "label": "Terms of Service",
                "value": "The terms of service are...",
                "placement": "BELOW_LINE_ITEMS"
              }
            ],
            "delivery_method": "EMAIL"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLocationRequest": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Request object for the [CreateLocation](#endpoint-createlocation) endpoint.",
        "example": {
          "request_body": {
            "location": {
              "name": "New location name",
              "description": "My new location.",
              "address": {
                "address_line_1": "1234 Peachtree St. NE",
                "administrative_district_level_1": "GA",
                "locality": "Atlanta",
                "postal_code": "30309"
              }
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLocationResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Response object returned by the [CreateLocation](#endpoint-createlocation) endpoint.",
        "example": {
          "location": {
            "id": "LOCATION_ID",
            "name": "New location name",
            "address": {
              "address_line_1": "1234 Peachtree St. NE",
              "locality": "Atlanta",
              "administrative_district_level_1": "GA",
              "postal_code": "30309"
            },
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "status": "ACTIVE",
            "created_at": "2019-07-19T17:58:25Z",
            "merchant_id": "MERCHANT_ID",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "type": "PHYSICAL",
            "description": "My new location.",
            "website_url": "examplewebsite.com",
            "twitter_username": "twitter",
            "instagram_username": "instagram",
            "coordinates": {
              "latitude": 33.788567,
              "longitude": -84.466947
            },
            "mcc": "1234"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLoyaltyAccountRequest": {
        "required": [
          "idempotency_key",
          "loyalty_account"
        ],
        "type": "object",
        "properties": {
          "loyalty_account": {
            "$ref": "#/components/schemas/LoyaltyAccount"
          },
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreateLoyaltyAccount` request. \nKeys can be any valid string, but must be unique for every request."
          }
        },
        "description": "A request to create a new loyalty account.",
        "example": {
          "request_body": {
            "loyalty_account": {
              "mappings": [
                {
                  "type": "PHONE",
                  "value": "+14155551234"
                }
              ],
              "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd"
            },
            "idempotency_key": "ec78c477-b1c3-4899-a209-a4e71337c996"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLoyaltyAccountResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "loyalty_account": {
            "$ref": "#/components/schemas/LoyaltyAccount"
          }
        },
        "description": "A response that includes loyalty account created.",
        "example": {
          "loyalty_account": {
            "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
            "mappings": [
              {
                "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
                "type": "PHONE",
                "value": "+14155551234",
                "created_at": "2020-05-08T21:44:32Z"
              }
            ],
            "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "balance": 0,
            "lifetime_points": 0,
            "created_at": "2020-05-08T21:44:32Z",
            "updated_at": "2020-05-08T21:44:32Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLoyaltyRewardRequest": {
        "required": [
          "idempotency_key",
          "reward"
        ],
        "type": "object",
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/LoyaltyReward"
          },
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreateLoyaltyReward` request. \nKeys can be any valid string, but must be unique for every request."
          }
        },
        "description": "A request to create a loyalty reward.",
        "example": {
          "request_body": {
            "reward": {
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
              "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY"
            },
            "idempotency_key": "18c2e5ea-a620-4b1f-ad60-7b167285e451"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateLoyaltyRewardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "reward": {
            "$ref": "#/components/schemas/LoyaltyReward"
          }
        },
        "description": "A response that includes the loyalty reward created.",
        "example": {
          "reward": {
            "id": "a8f43ebe-2ad6-3001-bdd5-7d7c2da08943",
            "status": "ISSUED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "order_id": "RFZfrdtm3mhO1oGzf5Cx7fEMsmGZY",
            "created_at": "2020-05-01T21:49:54Z",
            "updated_at": "2020-05-01T21:49:54Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateMobileAuthorizationCodeRequest": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "description": "The Square location ID the authorization code should be tied to."
          }
        },
        "description": "Defines the body parameters that can be provided in a request to the\n__CreateMobileAuthorizationCode__ endpoint.",
        "example": {
          "request_url": "/mobile/authorization-code",
          "request_body": {
            "location_id": "YOUR_LOCATION_ID"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateMobileAuthorizationCodeResponse": {
        "type": "object",
        "properties": {
          "authorization_code": {
            "type": "string",
            "description": "Generated authorization code that connects a mobile application instance\nto a Square account."
          },
          "expires_at": {
            "type": "string",
            "description": "The timestamp when `authorization_code` expires in\n[RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., \"2016-09-04T23:59:33.123Z\"."
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the __CreateMobileAuthorizationCode__ endpoint.",
        "example": {
          "authorization_code": "YOUR_MOBILE_AUTHORIZATION_CODE",
          "expires_at": "2019-01-10T19:42:08Z"
        },
        "x-release-status": "PUBLIC"
      },
      "CreateOrderRequest": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "idempotency_key": {
            "maxLength": 192,
            "type": "string",
            "description": "A value you specify that uniquely identifies this\norder among orders you've created.\n\nIf you're unsure whether a particular order was created successfully,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate orders.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "8193148c-9586-11e6-99f9-28cfe92138cf",
            "order": {
              "reference_id": "my-order-001",
              "location_id": "057P5VYJ4A5X1",
              "line_items": [
                {
                  "name": "New York Strip Steak",
                  "quantity": "1",
                  "base_price_money": {
                    "amount": 1599,
                    "currency": "USD"
                  }
                },
                {
                  "quantity": "2",
                  "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
                  "modifiers": [
                    {
                      "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ"
                    }
                  ],
                  "applied_discounts": [
                    {
                      "discount_uid": "one-dollar-off"
                    }
                  ]
                }
              ],
              "taxes": [
                {
                  "uid": "state-sales-tax",
                  "name": "State Sales Tax",
                  "percentage": "9",
                  "scope": "ORDER"
                }
              ],
              "discounts": [
                {
                  "uid": "labor-day-sale",
                  "name": "Labor Day Sale",
                  "percentage": "5",
                  "scope": "ORDER"
                },
                {
                  "uid": "membership-discount",
                  "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
                  "scope": "ORDER"
                },
                {
                  "uid": "one-dollar-off",
                  "name": "Sale - $1.00 off",
                  "amount_money": {
                    "amount": 100,
                    "currency": "USD"
                  },
                  "scope": "LINE_ITEM"
                }
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateOrderResponse": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the CreateOrder endpoint.\n\nOne of `errors` or `order` is present in a given response (never both).",
        "example": {
          "order": {
            "id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "location_id": "057P5VYJ4A5X1",
            "line_items": [
              {
                "uid": "8uSwfzvUImn3IRrvciqlXC",
                "name": "New York Strip Steak",
                "quantity": "1",
                "applied_taxes": [
                  {
                    "uid": "aKG87ArnDpvMLSZJHxWUl",
                    "tax_uid": "state-sales-tax",
                    "applied_money": {
                      "amount": 136,
                      "currency": "USD"
                    }
                  }
                ],
                "applied_discounts": [
                  {
                    "uid": "jWdgP1TpHPFBuVrz81mXVC",
                    "discount_uid": "membership-discount",
                    "applied_money": {
                      "amount": 8,
                      "currency": "USD"
                    }
                  },
                  {
                    "uid": "jnZOjjVY57eRcQAVgEwFuC",
                    "discount_uid": "labor-day-sale",
                    "applied_money": {
                      "amount": 79,
                      "currency": "USD"
                    }
                  }
                ],
                "base_price_money": {
                  "amount": 1599,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 1599,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 136,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 87,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1648,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 1599,
                  "currency": "USD"
                }
              },
              {
                "uid": "v8ZuEXpOJpb0bazLuvrLDB",
                "name": "New York Steak",
                "quantity": "2",
                "catalog_object_id": "BEMYCSMIJL46OCDV4KYIKXIB",
                "variation_name": "Larger",
                "modifiers": [
                  {
                    "uid": "Lo3qMMckDluu9Qsb58d4CC",
                    "catalog_object_id": "CHQX7Y4KY6N5KINJKZCFURPZ",
                    "name": "Well",
                    "base_price_money": {
                      "amount": 50,
                      "currency": "USD"
                    },
                    "total_price_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ],
                "applied_taxes": [
                  {
                    "uid": "v1dAgrfUVUPTnVTf9sRPz",
                    "tax_uid": "state-sales-tax",
                    "applied_money": {
                      "amount": 374,
                      "currency": "USD"
                    }
                  }
                ],
                "applied_discounts": [
                  {
                    "uid": "nUXvdsIItfKko0dbYtY58C",
                    "discount_uid": "membership-discount",
                    "applied_money": {
                      "amount": 22,
                      "currency": "USD"
                    }
                  },
                  {
                    "uid": "qSdkOOOernlVQqsJ94SPjB",
                    "discount_uid": "labor-day-sale",
                    "applied_money": {
                      "amount": 224,
                      "currency": "USD"
                    }
                  },
                  {
                    "uid": "y7bVl4njrWAnfDwmz19izB",
                    "discount_uid": "one-dollar-off",
                    "applied_money": {
                      "amount": 100,
                      "currency": "USD"
                    }
                  }
                ],
                "base_price_money": {
                  "amount": 2200,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 4500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 374,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 346,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 4528,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 4400,
                  "currency": "USD"
                }
              }
            ],
            "taxes": [
              {
                "uid": "state-sales-tax",
                "name": "State Sales Tax",
                "type": "ADDITIVE",
                "percentage": "9",
                "applied_money": {
                  "amount": 510,
                  "currency": "USD"
                },
                "scope": "ORDER"
              }
            ],
            "discounts": [
              {
                "uid": "membership-discount",
                "catalog_object_id": "DB7L55ZH2BGWI4H23ULIWOQ7",
                "name": "Membership Discount",
                "type": "FIXED_PERCENTAGE",
                "percentage": "0.5",
                "applied_money": {
                  "amount": 30,
                  "currency": "USD"
                },
                "scope": "ORDER"
              },
              {
                "uid": "labor-day-sale",
                "name": "Labor Day Sale",
                "type": "FIXED_PERCENTAGE",
                "percentage": "5",
                "applied_money": {
                  "amount": 303,
                  "currency": "USD"
                },
                "scope": "ORDER"
              },
              {
                "uid": "one-dollar-off",
                "name": "Sale - $1.00 off",
                "type": "FIXED_AMOUNT",
                "amount_money": {
                  "amount": 100,
                  "currency": "USD"
                },
                "applied_money": {
                  "amount": 100,
                  "currency": "USD"
                },
                "scope": "LINE_ITEM"
              }
            ],
            "created_at": "2020-01-17T20:47:53.293Z",
            "updated_at": "2020-01-17T20:47:53.293Z",
            "state": "OPEN",
            "version": 1,
            "reference_id": "my-order-001",
            "total_money": {
              "amount": 6176,
              "currency": "USD"
            },
            "total_tax_money": {
              "amount": 510,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 433,
              "currency": "USD"
            },
            "total_tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_service_charge_money": {
              "amount": 0,
              "currency": "USD"
            },
            "net_amounts": {
              "total_money": {
                "amount": 6176,
                "currency": "USD"
              },
              "tax_money": {
                "amount": 510,
                "currency": "USD"
              },
              "discount_money": {
                "amount": 433,
                "currency": "USD"
              },
              "tip_money": {
                "amount": 0,
                "currency": "USD"
              },
              "service_charge_money": {
                "amount": 0,
                "currency": "USD"
              }
            },
            "source": {
              "name": "My App"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreatePaymentRequest": {
        "required": [
          "amount_money",
          "idempotency_key",
          "source_id"
        ],
        "type": "object",
        "properties": {
          "source_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID for the source of funds for this payment. This can be a payment token \n(card nonce) generated by the Square payment form or a card on file made with the \nCustomers API. If recording a payment that the seller \nreceived outside of Square, specify either \"CASH\" or \"EXTERNAL\". \nFor more information, see \n[Take Payments](https://developer.squareup.com/docs/payments-api/take-payments)."
          },
          "idempotency_key": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreatePayment` request. Keys can be any valid string\nbut must be unique for every `CreatePayment` request.\n\nMax: 45 characters\n\nNote: The number of allowed characters might be less than the stated maximum, if multi-byte\ncharacters are used.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency)."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "tip_money": {
            "$ref": "#/components/schemas/Money"
          },
          "app_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "delay_duration": {
            "type": "string",
            "description": "The duration of time after the payment's creation when Square automatically cancels the\npayment. This automatic cancellation applies only to payments that do not reach a terminal state\n(COMPLETED, CANCELED, or FAILED) before the `delay_duration` time period.\n\nThis parameter should be specified as a time duration, in RFC 3339 format, with a minimum value\nof 1 minute.\n\nNote: This feature is only supported for card payments. This parameter can only be set for a delayed\ncapture payment (`autocomplete=false`).\n\nDefault:\n\n- Card-present payments: \"PT36H\" (36 hours) from the creation time.\n- Card-not-present payments: \"P7D\" (7 days) from the creation time.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "autocomplete": {
            "type": "boolean",
            "description": "If set to `true`, this payment will be completed when possible. If\nset to `false`, this payment is held in an approved state until either\nexplicitly completed (captured) or canceled (voided). For more information, see\n[Delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-payments).\n\nDefault: true"
          },
          "order_id": {
            "type": "string",
            "description": "Associates a previously created order with this payment."
          },
          "customer_id": {
            "type": "string",
            "description": "The `Customer` ID of the customer associated with the payment.\n\nThis is required if the `source_id` refers to a card on file created using the Customers API."
          },
          "location_id": {
            "type": "string",
            "description": "The location ID to associate with the payment. If not specified, the default location is\nused."
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "A user-defined ID to associate with the payment.\n\nYou can use this field to associate the payment to an entity in an external system \n(for example, you might specify an order ID that is generated by a third-party shopping cart).\n\nLimit 40 characters."
          },
          "verification_token": {
            "type": "string",
            "description": "An identifying token generated by `SqPaymentForm.verifyBuyer()`.\nVerification tokens encapsulate customer device information and 3-D Secure\nchallenge results to indicate that Square has verified the buyer identity.\n\nFor more information, see [SCA Overview](https://developer.squareup.com/docs/sca-overview)."
          },
          "accept_partial_authorization": {
            "type": "boolean",
            "description": "If set to `true` and charging a Square Gift Card, a payment might be returned with\n`amount_money` equal to less than what was requested. For example, a request for $20 when charging\na Square Gift Card with a balance of $5 results in an APPROVED payment of $5. You might choose\nto prompt the buyer for an additional payment to cover the remainder or cancel the Gift Card\npayment. This field cannot be `true` when `autocomplete = true`.\n\nFor more information, see\n[Partial amount with Square Gift Cards](https://developer.squareup.com/docs/payments-api/take-payments#partial-payment-gift-card).\n\nDefault: false",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "buyer_email_address": {
            "maxLength": 255,
            "type": "string",
            "description": "The buyer's email address."
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "note": {
            "maxLength": 500,
            "type": "string",
            "description": "An optional note to be entered by the developer when creating a payment.\n\nLimit 500 characters."
          },
          "statement_description_identifier": {
            "maxLength": 20,
            "type": "string",
            "description": "Optional additional payment information to include on the customer's card statement\nas part of the statement description. This can be, for example, an invoice number, ticket number,\nor short description that uniquely identifies the purchase.\n\nNote that the `statement_description_identifier` might get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and name of the\nseller taking the payment.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "cash_details": {
            "$ref": "#/components/schemas/CashPaymentDetails"
          },
          "external_details": {
            "$ref": "#/components/schemas/ExternalPaymentDetails"
          }
        },
        "description": "Describes a request to create a payment using \n[CreatePayment](#endpoint-payments-createpayment).",
        "example": {
          "request_body": {
            "idempotency_key": "4935a656-a929-4792-b97c-8848be85c27c",
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "source_id": "ccof:uIbfJXhXETSP197M3GB",
            "autocomplete": true,
            "customer_id": "VDKXEEKPJN48QDG3BGGFAK05P8",
            "location_id": "XK3DBG77NJBFX",
            "reference_id": "123456",
            "note": "Brief description",
            "app_fee_money": {
              "amount": 10,
              "currency": "USD"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreatePaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "description": "Defines the response returned by [CreatePayment](#endpoint-payments-createpayment).\n\nIf there are errors processing the request, the `payment` field might not be\npresent, or it might be present with a status of `FAILED`.",
        "example": {
          "payment": {
            "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "created_at": "2019-07-10T13:23:49.154Z",
            "updated_at": "2019-07-10T13:23:49.446Z",
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "app_fee_money": {
              "amount": 10,
              "currency": "USD"
            },
            "total_money": {
              "amount": 200,
              "currency": "USD"
            },
            "approved_money": {
              "amount": 200,
              "currency": "USD"
            },
            "status": "COMPLETED",
            "source_type": "CARD",
            "card_details": {
              "status": "CAPTURED",
              "card": {
                "card_brand": "VISA",
                "last_4": "1111",
                "exp_month": 7,
                "exp_year": 2026,
                "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
                "card_type": "DEBIT",
                "prepaid_type": "PREPAID",
                "bin": "411111"
              },
              "entry_method": "ON_FILE",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "nsAyY2",
              "statement_description": "SQ *MY MERCHANT",
              "card_payment_timeline": {
                "authorized_at": "2019-07-10T13:23:49.234Z",
                "captured_at": "2019-07-10T13:23:49.446Z"
              }
            },
            "location_id": "XTI0H92143A39",
            "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
            "reference_id": "123456",
            "note": "Brief description",
            "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
            "receipt_number": "GQTF",
            "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "version_token": "H8Vnk5Z11SKcueuRti79jGpszSEsSVdhKRrSKCOzILG6o"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateRefundRequest": {
        "required": [
          "amount_money",
          "idempotency_key",
          "tender_id"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "A value you specify that uniquely identifies this\nrefund among refunds you've created for the tender.\n\nIf you're unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund.\n\nSee [Idempotency keys](#idempotencykeys) for more information."
          },
          "tender_id": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the tender to refund.\n\nA ``Transaction`` has one or more `tenders` (i.e., methods\nof payment) associated with it, and you refund each tender separately with\nthe Connect API."
          },
          "reason": {
            "maxLength": 192,
            "type": "string",
            "description": "A description of the reason for the refund.\n\nDefault value: `Refund via API`"
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Defines the body parameters that can be included in\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nDeprecated - recommend using [RefundPayment](#endpoint-refunds-refundpayment)",
        "example": {
          "request_body": {
            "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad2",
            "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
            "reason": "a reason",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            }
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateRefund/CreateRefundRequest.python",
          "csharp": "/sdk_samples/CreateRefund/CreateRefundRequest.csharp",
          "java": "/sdk_samples/CreateRefund/CreateRefundRequest.java",
          "php": "/sdk_samples/CreateRefund/CreateRefundRequest.php",
          "javascript": "/sdk_samples/CreateRefund/CreateRefundRequest.javascript",
          "ruby": "/sdk_samples/CreateRefund/CreateRefundRequest.ruby"
        }
      },
      "CreateRefundResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/Refund"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both).",
        "example": {
          "refund": {
            "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "location_id": "18YC4JDH91E1H",
            "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
            "created_at": "2016-02-12T00:28:18Z",
            "reason": "some reason",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "additional_recipients": [
              {
                "location_id": "057P5VYJ4A5X1",
                "description": "Application fees",
                "amount_money": {
                  "amount": 10,
                  "currency": "USD"
                },
                "receivable_id": "ISu5xwxJ5v0CMJTQq7RvqyMF"
              }
            ],
            "status": "PENDING"
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/CreateRefund/CreateRefundResponse.python",
          "csharp": "/sdk_samples/CreateRefund/CreateRefundResponse.csharp",
          "java": "/sdk_samples/CreateRefund/CreateRefundResponse.java",
          "php": "/sdk_samples/CreateRefund/CreateRefundResponse.php",
          "javascript": "/sdk_samples/CreateRefund/CreateRefundResponse.javascript",
          "ruby": "/sdk_samples/CreateRefund/CreateRefundResponse.ruby"
        }
      },
      "CreateShiftRequest": {
        "required": [
          "shift"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 128,
            "type": "string",
            "description": "Unique string value to insure the idempotency of the operation."
          },
          "shift": {
            "$ref": "#/components/schemas/Shift"
          }
        },
        "description": "Represents a request to create a `Shift`",
        "example": {
          "request_body": {
            "idempotency_key": "HIDSNG5KS478L",
            "shift": {
              "team_member_id": "ormj0jJJZ5OZIzxrZYJI",
              "location_id": "PAA1RJZZKXBFG",
              "start_at": "2019-01-25T03:11:00-05:00",
              "end_at": "2019-01-25T13:11:00-05:00",
              "wage": {
                "title": "Barista",
                "hourly_rate": {
                  "amount": 1100,
                  "currency": "USD"
                }
              },
              "breaks": [
                {
                  "start_at": "2019-01-25T06:11:00-05:00",
                  "end_at": "2019-01-25T06:16:00-05:00",
                  "break_type_id": "REGS1EQR1TPZ5",
                  "name": "Tea Break",
                  "expected_duration": "PT5M",
                  "is_paid": true
                }
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateShiftResponse": {
        "type": "object",
        "properties": {
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to the request to create a `Shift`. Contains\nthe created `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "shift": {
            "id": "K0YH4CV5462JB",
            "team_member_id": "ormj0jJJZ5OZIzxrZYJI",
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Barista",
              "hourly_rate": {
                "amount": 1100,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "X7GAQYVVRRG6P",
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ],
            "status": "CLOSED",
            "version": 1,
            "created_at": "2019-02-28T00:39:02Z",
            "updated_at": "2019-02-28T00:39:02Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateSubscriptionRequest": {
        "required": [
          "customer_id",
          "idempotency_key",
          "location_id",
          "plan_id"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreateSubscription` request.\nIf you do not provide a unique string (or provide an empty string as the value),\nthe endpoint treats each request as independent.\n\nFor more information, see [Idempotency keys](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
          },
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location the subscription is associated with."
          },
          "plan_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the subscription plan. For more information, see \n[Subscription Plan Overview](https://developer.squareup.com/docs/docs/subscriptions/overview)."
          },
          "customer_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `customer` profile."
          },
          "start_date": {
            "type": "string",
            "description": "The start date of the subscription, in YYYY-MM-DD format. For example,\n2013-01-15. If the start date is left empty, the subscription begins \nimmediately."
          },
          "canceled_date": {
            "type": "string",
            "description": "The date when the subscription should be canceled, in \nYYYY-MM-DD format (for example, 2025-02-29). This overrides the plan configuration \nif it comes before the date the subscription would otherwise end."
          },
          "tax_percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The tax to add when billing the subscription.\nThe percentage is expressed in decimal form, using a `'.'` as the decimal\nseparator and without a `'%'` sign. For example, a value of 7.5\ncorresponds to 7.5%."
          },
          "price_override_money": {
            "$ref": "#/components/schemas/Money"
          },
          "card_id": {
            "type": "string",
            "description": "The ID of the `customer](#type-customer) [card` to charge.\nIf not specified, Square sends an invoice via email. For an example to\ncreate a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/docs/subscriptions-api/walkthrough)."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone that is used in date calculations for the subscription. If unset, defaults to\nthe location timezone. If a timezone is not configured for the location, defaults to \"America/New_York\".\nFormat: the IANA Timezone Database identifier for the location timezone. For\na list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)."
          }
        },
        "description": "Defines parameters in a \n[CreateSubscription](#endpoint-subscriptions-createsubscription) endpoint request.",
        "example": {
          "request_body": {
            "idempotency_key": "8193148c-9586-11e6-99f9-28cfe92138cf",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
            "start_date": "2020-08-01",
            "tax_percentage": "5",
            "price_override_money": {
              "amount": 100,
              "currency": "USD"
            },
            "timezone": "America/Los_Angeles"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateSubscriptionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "description": "Defines the fields that are included in the response from the\n[CreateSubscription](#endpoint-subscriptions-createsubscription) endpoint.",
        "example": {
          "subscription": {
            "id": "56214fb2-cc85-47a1-93bc-44f3766bb56f",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "start_date": "2020-08-01",
            "status": "PENDING",
            "tax_percentage": "5",
            "price_override_money": {
              "amount": 100,
              "currency": "USD"
            },
            "version": 1594155459464,
            "created_at": "2020-08-03T21:53:10Z",
            "card_id": "ccof:qy5x8hHGYsgLrp4Q4GB",
            "timezone": "America/Los_Angeles"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CreateTeamMemberRequest": {
        "type": "object",
        "properties": {
          "idempotency_key": {
            "type": "string",
            "description": "A unique string that identifies this CreateTeamMember request.\nKeys can be any valid string but must be unique for every request.\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.\n<br>\n<b>Min Length 1    Max Length 45</b>"
          },
          "team_member": {
            "$ref": "#/components/schemas/TeamMember"
          }
        },
        "description": "Represents a create request for a `TeamMember` object.",
        "example": {
          "request_body": {
            "idempotency_key": "idempotency-key-0",
            "team_member": {
              "reference_id": "reference_id_1",
              "status": "ACTIVE",
              "given_name": "Joe",
              "family_name": "Doe",
              "email_address": "joe_doe@gmail.com",
              "phone_number": "+14159283333",
              "assigned_locations": {
                "location_ids": [
                  "YSGH2WBKG94QZ",
                  "GA2Y9HSJ8KRYT"
                ],
                "assignment_type": "EXPLICIT_LOCATIONS"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateTeamMemberResponse": {
        "type": "object",
        "properties": {
          "team_member": {
            "$ref": "#/components/schemas/TeamMember"
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a create request, containing the created `TeamMember` object or error messages.",
        "example": {
          "team_member": {
            "id": "1yJlHapkseYnNPETIU1B",
            "reference_id": "reference_id_1",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Joe",
            "family_name": "Doe",
            "email_address": "joe_doe@gmail.com",
            "phone_number": "+14159283333",
            "assigned_locations": {
              "assignment_type": "EXPLICIT_LOCATIONS",
              "location_ids": [
                "GA2Y9HSJ8KRYT",
                "YSGH2WBKG94QZ"
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateTerminalCheckoutRequest": {
        "required": [
          "checkout",
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreateCheckout` request. Keys can be any valid string but\nmust be unique for every `CreateCheckout` request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          },
          "checkout": {
            "$ref": "#/components/schemas/TerminalCheckout"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "28a0c3bc-7839-11ea-bc55-0242ac130003",
            "checkout": {
              "amount_money": {
                "amount": 2610,
                "currency": "USD"
              },
              "reference_id": "id11572",
              "device_options": {
                "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003"
              },
              "note": "A brief note"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateTerminalCheckoutResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "checkout": {
            "$ref": "#/components/schemas/TerminalCheckout"
          }
        },
        "description": "",
        "example": {
          "checkout": {
            "id": "08YceKh7B3ZqO",
            "amount_money": {
              "amount": 2610,
              "currency": "USD"
            },
            "reference_id": "id11572",
            "note": "A brief note",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
              "tip_settings": {
                "allow_tipping": false
              },
              "skip_receipt_screen": false
            },
            "status": "PENDING",
            "created_at": "2020-04-06T16:39:32.545Z",
            "updated_at": "2020-04-06T16:39:32.545Z",
            "app_id": "APP_ID",
            "deadline_duration": "PT10M",
            "payment_type": "CARD_PRESENT"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateTerminalRefundRequest": {
        "required": [
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `CreateRefund` request. Keys can be any valid string but\nmust be unique for every `CreateRefund` request.\n\nSee [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          },
          "refund": {
            "$ref": "#/components/schemas/TerminalRefund"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "402a640b-b26f-401f-b406-46f839590c04",
            "refund": {
              "amount_money": {
                "amount": 111,
                "currency": "CAD"
              },
              "device_id": "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
              "reason": "Returning items",
              "payment_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CreateTerminalRefundResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/TerminalRefund"
          }
        },
        "description": "",
        "example": {
          "refund": {
            "id": "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "payment_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "amount_money": {
              "amount": 111,
              "currency": "CAD"
            },
            "reason": "Returning items",
            "device_id": "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
            "deadline_duration": "PT5M",
            "status": "PENDING",
            "created_at": "2020-09-29T15:21:46.771Z",
            "updated_at": "2020-09-29T15:21:46.771Z",
            "app_id": "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
            "card": {
              "card_brand": "INTERAC",
              "last_4": "1111",
              "exp_month": 1,
              "exp_year": 2022,
              "fingerprint": "sq-1-B1fP9MNNmZgVVaPKRND6oDKYbz25S2cTvg9Mzwg3RMTK1zT1PiGRT-AE3nTA8vSmmw",
              "card_type": "CREDIT",
              "bin": "411111"
            },
            "order_id": "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
            "location_id": "76C9W6K8CNNQ5"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "CustomAttributeFilter": {
        "type": "object",
        "properties": {
          "custom_attribute_definition_id": {
            "type": "string",
            "description": "A query expression to filter items or item variations by matching their custom attributes'\n`custom_attribute_definition_id`\nproperty value against the the specified id."
          },
          "key": {
            "type": "string",
            "description": "A query expression to filter items or item variations by matching their custom attributes'\n`key` property value against\nthe specified key."
          },
          "string_filter": {
            "type": "string",
            "description": "A query expression to filter items or item variations by matching their custom attributes'\n`string_value`  property value\nagainst the specified text."
          },
          "number_filter": {
            "$ref": "#/components/schemas/Range"
          },
          "selection_uids_filter": {
            "type": "array",
            "description": "A query expression to filter items or item variations by matching  their custom attributes'\n`selection_uid_values`\nvalues against the specified selection uids.",
            "items": {
              "type": "string"
            }
          },
          "bool_filter": {
            "type": "boolean",
            "description": "A query expression to filter items or item variations by matching their custom attributes'\n`boolean_value` property values\nagainst the specified Boolean expression."
          }
        },
        "description": "Supported custom attribute query expressions for calling the\n[SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems)\nendpoint to search for items or item variations.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique Square-assigned ID for the customer profile."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the customer profile was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the customer profile was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "cards": {
            "type": "array",
            "description": "Payment details of cards stored on file for the customer profile.",
            "items": {
              "$ref": "#/components/schemas/Card"
            }
          },
          "given_name": {
            "type": "string",
            "description": "The given (i.e., first) name associated with the customer profile."
          },
          "family_name": {
            "type": "string",
            "description": "The family (i.e., last) name associated with the customer profile."
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the customer profile."
          },
          "company_name": {
            "type": "string",
            "description": "A business name associated with the customer profile."
          },
          "email_address": {
            "type": "string",
            "description": "The email address associated with the customer profile."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "type": "string",
            "description": "The 11-digit phone number associated with the customer profile."
          },
          "birthday": {
            "type": "string",
            "description": "The birthday associated with the customer profile, in RFC 3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
          },
          "reference_id": {
            "type": "string",
            "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
          },
          "note": {
            "type": "string",
            "description": "A custom note associated with the customer profile."
          },
          "preferences": {
            "$ref": "#/components/schemas/CustomerPreferences"
          },
          "groups": {
            "type": "array",
            "description": "The customer groups and segments the customer belongs to. This deprecated field has been replaced with  the dedicated `group_ids` for customer groups and the dedicated `segment_ids` field for customer segments. You can retrieve information about a given customer group and segment respectively using the Customer Groups API and Customer Segments API.",
            "items": {
              "$ref": "#/components/schemas/CustomerGroupInfo"
            },
            "x-is-deprecated": true,
            "x-release-status": "DEPRECATED"
          },
          "creation_source": {
            "type": "string",
            "description": "A creation source represents the method used to create the\ncustomer profile.\nSee [CustomerCreationSource](#type-customercreationsource) for possible values"
          },
          "group_ids": {
            "type": "array",
            "description": "The IDs of customer groups the customer belongs to.",
            "items": {
              "type": "string"
            }
          },
          "segment_ids": {
            "type": "array",
            "description": "The IDs of segments the customer belongs to.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Represents a Square customer profile, which can have one or more\ncards on file associated with it.",
        "x-release-status": "PUBLIC"
      },
      "CustomerCreationSourceFilter": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "description": "The list of creation sources used as filtering criteria.\nSee [CustomerCreationSource](#type-customercreationsource) for possible values",
            "items": {
              "type": "string"
            }
          },
          "rule": {
            "type": "string",
            "description": "Indicates whether a customer profile matching the filter criteria\nshould be included in the result or excluded from the result.\n\nDefault: `INCLUDE`.\nSee [CustomerInclusionExclusion](#type-customerinclusionexclusion) for possible values"
          }
        },
        "description": "Creation source filter.\n\nIf one or more creation sources are set, customer profiles are included in,\nor excluded from, the result if they match at least one of the filter\ncriteria.",
        "x-release-status": "PUBLIC"
      },
      "CustomerFilter": {
        "type": "object",
        "properties": {
          "creation_source": {
            "$ref": "#/components/schemas/CustomerCreationSourceFilter"
          },
          "created_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "updated_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "email_address": {
            "$ref": "#/components/schemas/CustomerTextFilter"
          },
          "phone_number": {
            "$ref": "#/components/schemas/CustomerTextFilter"
          },
          "reference_id": {
            "$ref": "#/components/schemas/CustomerTextFilter"
          },
          "group_ids": {
            "$ref": "#/components/schemas/FilterValue"
          }
        },
        "description": "Represents a set of `CustomerQuery` filters used to limit the set of\n`Customers` returned by `SearchCustomers`.",
        "x-release-status": "PUBLIC"
      },
      "CustomerGroup": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "Unique Square-generated ID for the customer group.",
            "x-read-only": true
          },
          "name": {
            "type": "string",
            "description": "Name of the customer group."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the customer group was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the customer group was last updated, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Represents a group of customer profiles. \n\nCustomer groups can be created, modified, and have their membership defined either via \nthe Customers API or within Customer Directory in the Square Dashboard or Point of Sale.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CustomerGroupInfo": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Customer Group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Customer Group."
          }
        },
        "description": "Contains some brief information about a Customer Group with its identifier included.",
        "x-release-status": "PUBLIC"
      },
      "CustomerPreferences": {
        "type": "object",
        "properties": {
          "email_unsubscribed": {
            "type": "boolean",
            "description": "The customer has unsubscribed from receiving marketing campaign emails."
          }
        },
        "description": "Represents communication preferences for the customer profile.",
        "x-release-status": "PUBLIC"
      },
      "CustomerQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CustomerFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/CustomerSort"
          }
        },
        "description": "Represents a query (including filtering criteria, sorting criteria, or both) used to search\nfor customer profiles.",
        "x-release-status": "PUBLIC"
      },
      "CustomerSegment": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "Unique Square-generated ID for the segment.",
            "x-read-only": true
          },
          "name": {
            "type": "string",
            "description": "Name of the segment.",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the segment was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the segment was last updated, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Represents a group of customer profiles that match one or more predefined filter criteria. \n\nSegments (also known as Smart Groups) are defined and created within Customer Directory in the Square Dashboard or Point of Sale.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "CustomerSort": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": " Use one or more customer attributes as the sort key to sort searched customer profiles. \nFor example, use creation date (`created_at`) of customers or default attributes as the sort key.\n\n\nDefault: `DEFAULT`.\nSee [CustomerSortField](#type-customersortfield) for possible values"
          },
          "order": {
            "type": "string",
            "description": "Indicates the order in which results should be sorted based on the\nsort field value. Strings use standard alphabetic comparison\nto determine order. Strings representing numbers are sorted as strings.\n\nDefault: `ASC`.\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "Specifies how searched customers profiles are sorted, including the sort key and sort order.",
        "x-release-status": "PUBLIC"
      },
      "CustomerTextFilter": {
        "type": "object",
        "properties": {
          "exact": {
            "type": "string",
            "description": "Use the exact filter to select customers whose attributes match exactly the specified query."
          },
          "fuzzy": {
            "type": "string",
            "description": "Use the fuzzy filter to select customers whose attributes match the specified query \nin a fuzzy manner. When the fuzzy option is used, search queries are tokenized, and then \neach query token must be matched somewhere in the searched attribute. For single token queries, \nthis is effectively the same behavior as a partial match operation."
          }
        },
        "description": "A filter to select customers based on exact or fuzzy matching of\ncustomer attributes against a specified query. Depending on customer attributes, \nthe filter can be case sensitive. This filter can be either exact or fuzzy. It cannot be both.",
        "x-release-status": "PUBLIC"
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe beginning of a date range (inclusive)"
          },
          "end_date": {
            "type": "string",
            "description": "String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601\nextended format for calendar dates.\nThe end of a date range (inclusive)"
          }
        },
        "description": "A range defined by two dates. Used for filtering a query for Connect v2\nobjects that have date properties.",
        "x-release-status": "PUBLIC"
      },
      "DeleteBreakTypeRequest": {
        "type": "object",
        "description": "A request to delete a `BreakType`",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "DeleteBreakTypeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request to delete a `BreakType`. May contain a set \nof `Error` objects if the request resulted in errors.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "DeleteCatalogObjectRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python",
          "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp",
          "java": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.java",
          "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php",
          "javascript": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.javascript",
          "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby"
        }
      },
      "DeleteCatalogObjectResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "deleted_object_ids": {
            "type": "array",
            "description": "The IDs of all catalog objects deleted by this request.\nMultiple IDs may be returned when associated objects are also deleted, for example\na catalog item variation will be deleted (and its ID included in this field)\nwhen its parent catalog item is deleted.",
            "items": {
              "type": "string"
            }
          },
          "deleted_at": {
            "type": "string",
            "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)\nof this deletion in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`."
          }
        },
        "description": "",
        "example": {
          "deleted_object_ids": [
            "7SB3ZQYJ5GDMVFL7JK46JCHT",
            "KQLFFHA6K6J3YQAQAWDQAL57"
          ],
          "deleted_at": "2016-11-16T22:25:24.878Z"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python",
          "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp",
          "java": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.java",
          "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php",
          "javascript": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.javascript",
          "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby"
        }
      },
      "DeleteCustomerCardRequest": {
        "type": "object",
        "description": "Defines the fields that are included in requests to the\nDeleteCustomerCard endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python",
          "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp",
          "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.java",
          "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php",
          "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.javascript",
          "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby"
        }
      },
      "DeleteCustomerCardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the DeleteCustomerCard endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python",
          "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp",
          "java": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.java",
          "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php",
          "javascript": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.javascript",
          "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby"
        }
      },
      "DeleteCustomerGroupRequest": {
        "type": "object",
        "description": "Defines the fields that can be provided in a request to the\n[DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "DeleteCustomerGroupResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerGroup](#endpoint-deletecustomergroup) endpoint.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "DeleteCustomerRequest": {
        "type": "object",
        "description": "Defines the fields that are included in a request to the DeleteCustomer\nendpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.python",
          "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp",
          "java": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.java",
          "php": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.php",
          "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.javascript",
          "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby"
        }
      },
      "DeleteCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the DeleteCustomer endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.python",
          "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp",
          "java": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.java",
          "php": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.php",
          "javascript": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.javascript",
          "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby"
        }
      },
      "DeleteInvoiceRequest": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "The version of the `invoice` to delete.\nIf you do not know the version, you can call `GetInvoice` or \n`ListInvoices`."
          }
        },
        "description": "Describes a `DeleteInvoice` request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DeleteInvoiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `DeleteInvoice` response.",
        "example": {},
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DeleteLoyaltyRewardRequest": {
        "type": "object",
        "description": "A request to delete a loyalty reward.",
        "example": {
          "request_params": "?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DeleteLoyaltyRewardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A response returned by the API call.",
        "example": {},
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DeleteShiftRequest": {
        "type": "object",
        "description": "A request to delete a `Shift`",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "DeleteShiftResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request to delete a `Shift`. May contain a set of \n`Error` objects if the request resulted in errors.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The device's Square-issued ID."
          },
          "name": {
            "type": "string",
            "description": "The device's merchant-specified name."
          }
        },
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "DeviceCheckoutOptions": {
        "required": [
          "device_id"
        ],
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The unique ID of the device intended for this `TerminalCheckout`.\nA list of `DeviceCode` objects can be retrieved from the /v2/devices/codes endpoint.\nMatch a `DeviceCode.device_id` value with `device_id` to get the associated device code."
          },
          "skip_receipt_screen": {
            "type": "boolean",
            "description": "Instructs the device to skip the receipt screen. Defaults to false."
          },
          "tip_settings": {
            "$ref": "#/components/schemas/TipSettings"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "DeviceCode": {
        "required": [
          "product_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique id for this device code.",
            "x-read-only": true
          },
          "name": {
            "maxLength": 128,
            "type": "string",
            "description": "An optional user-defined name for the device code."
          },
          "code": {
            "type": "string",
            "description": "The unique code that can be used to login.",
            "x-read-only": true
          },
          "device_id": {
            "type": "string",
            "description": "The unique id of the device that used this code. Populated when the device is paired up.",
            "x-read-only": true
          },
          "product_type": {
            "type": "string",
            "description": "The targeting product type of the device code.\nSee [ProductType](#type-producttype) for possible values"
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The location assigned to this code."
          },
          "status": {
            "type": "string",
            "description": "The pairing status of the device code.\nSee [DeviceCodeStatus](#type-devicecodestatus) for possible values",
            "x-read-only": true
          },
          "pair_by": {
            "type": "string",
            "description": "When this DeviceCode will expire and no longer login. Timestamp in RFC 3339 format.",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "When this DeviceCode was created. Timestamp in RFC 3339 format.",
            "x-read-only": true
          },
          "status_changed_at": {
            "type": "string",
            "description": "When this DeviceCode's status was last changed. Timestamp in RFC 3339 format.",
            "x-read-only": true
          },
          "paired_at": {
            "type": "string",
            "description": "When this DeviceCode was paired. Timestamp in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "DeviceDetails": {
        "type": "object",
        "properties": {
          "device_id": {
            "maxLength": 255,
            "type": "string",
            "description": "The Square-issued ID of the device."
          },
          "device_installation_id": {
            "maxLength": 255,
            "type": "string",
            "description": "The Square-issued installation ID for the device."
          },
          "device_name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the device set by the seller."
          }
        },
        "description": "Details about the device that took the payment.",
        "x-release-status": "PUBLIC"
      },
      "Dispute": {
        "type": "object",
        "properties": {
          "dispute_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The unique ID for this `Dispute`, generated by Square."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "reason": {
            "type": "string",
            "description": "The dispute reason why the cardholder initiated the dispute with their bank.\nSee [DisputeReason](#type-disputereason) for possible values"
          },
          "state": {
            "type": "string",
            "description": "The current state of this dispute.\nSee [DisputeState](#type-disputestate) for possible values"
          },
          "due_at": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The time when the next action is due, in RFC 3339 format."
          },
          "disputed_payment": {
            "$ref": "#/components/schemas/DisputedPayment"
          },
          "evidence_ids": {
            "type": "array",
            "description": "The IDs of the evidence associated with the dispute.",
            "items": {
              "maxLength": 40,
              "minLength": 1,
              "type": "string"
            }
          },
          "card_brand": {
            "type": "string",
            "description": "The card brand used in the disputed payment.\nSee [CardBrand](#type-cardbrand) for possible values"
          },
          "created_at": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the dispute was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the dispute was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "brand_dispute_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the dispute in the card brand system, generated by the card brand."
          },
          "reported_date": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the dispute was reported, in RFC 3339 format."
          },
          "version": {
            "type": "integer",
            "description": "The current version of the `Dispute`."
          },
          "location_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location where the dispute originated."
          }
        },
        "description": "Represents a dispute a cardholder initiated with their bank.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DisputeEvidence": {
        "type": "object",
        "properties": {
          "evidence_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The Square-generated ID of the evidence."
          },
          "dispute_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the dispute the evidence is associated with."
          },
          "uploaded_at": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The time when the next action is due, in RFC 3339 format."
          },
          "evidence_type": {
            "type": "string",
            "description": "The type of the evidence.\nSee [DisputeEvidenceType](#type-disputeevidencetype) for possible values"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DisputeEvidenceFile": {
        "type": "object",
        "properties": {
          "filename": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The file name including the file extension. For example: \"receipt.tiff\"."
          },
          "filetype": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Dispute evidence files must be application/pdf, image/heic, image/heif, image/jpeg, image/png, or image/tiff formats."
          }
        },
        "description": "A file to be uploaded as dispute evidence.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "DisputedPayment": {
        "type": "object",
        "properties": {
          "payment_id": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "Square-generated unique ID of the payment being disputed."
          }
        },
        "description": "The payment the cardholder disputed.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID for this object."
          },
          "first_name": {
            "type": "string",
            "description": "The employee's first name."
          },
          "last_name": {
            "type": "string",
            "description": "The employee's last name."
          },
          "email": {
            "type": "string",
            "description": "The employee's email address"
          },
          "phone_number": {
            "type": "string",
            "description": "The employee's phone number in E.164 format, i.e. \"+12125554250\""
          },
          "location_ids": {
            "type": "array",
            "description": "A list of location IDs where this employee has access to.",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "Specifies the status of the employees being fetched.\nSee [EmployeeStatus](#type-employeestatus) for possible values"
          },
          "is_owner": {
            "type": "boolean",
            "description": "Whether this employee is the owner of the merchant. Each merchant\nhas one owner employee, and that employee has full authority over\nthe account."
          },
          "created_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "An employee object that is used by the external API.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "EmployeeWage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID for this object."
          },
          "employee_id": {
            "type": "string",
            "description": "The `Employee` that this wage is assigned to."
          },
          "title": {
            "type": "string",
            "description": "The job title that this wage relates to."
          },
          "hourly_rate": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "The hourly wage rate that an employee will earn on a `Shift` for doing the job\nspecified by the `title` property of this object. Deprecated at verison 2020-08-26. Use `TeamMemberWage` instead.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "Error": {
        "required": [
          "category",
          "code"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "The high-level category for the error.\nSee [ErrorCategory](#type-errorcategory) for possible values"
          },
          "code": {
            "type": "string",
            "description": "The specific code of the error.\nSee [ErrorCode](#type-errorcode) for possible values"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable description of the error for debugging purposes."
          },
          "field": {
            "type": "string",
            "description": "The name of the field provided in the original request (if any) that\nthe error pertains to."
          }
        },
        "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](#handlingerrors) for more information.",
        "x-release-status": "PUBLIC"
      },
      "ExternalPaymentDetails": {
        "required": [
          "source",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 50,
            "type": "string",
            "description": "The type of external payment the seller received. It can be one of the following:\n- CHECK - Paid using a physical check.\n- BANK_TRANSFER - Paid using ACH or another bank transfer.\n- OTHER\\_GIFT\\_CARD - Paid using a non-Square gift card.\n- CRYPTO - Paid using a crypto currency.\n- SQUARE_CASH - Paid using Square Cash App.\n- SOCIAL - Paid using peer-to-peer payment applications.\n- EXTERNAL - A third-party application gathered this payment outside of Square.\n- EMONEY - Paid using an E-money provider.\n- CARD - A credit or debit card that Square does not support.\n- STORED_BALANCE - Use for house accounts, store credit, and so forth.\n- OTHER - A type not listed here."
          },
          "source": {
            "maxLength": 255,
            "type": "string",
            "description": "A description of the external payment source. For example, \n\"Food Delivery Service\"."
          },
          "source_id": {
            "maxLength": 255,
            "type": "string",
            "description": "An ID to associate the payment to its originating source."
          },
          "source_fee_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Stores details about an external payment. Contains only non-confidential information.\nFor more information, see \n[Take External Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).",
        "x-release-status": "PUBLIC"
      },
      "FilterValue": {
        "type": "object",
        "properties": {
          "all": {
            "type": "array",
            "description": "A list of terms that must be present on the field of the resource.",
            "items": {
              "type": "string"
            }
          },
          "any": {
            "type": "array",
            "description": "A list of terms where at least one of them must be present on the\nfield of the resource.",
            "items": {
              "type": "string"
            }
          },
          "none": {
            "type": "array",
            "description": "A list of terms that must not be present on the field the resource",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "A filter to select resources based on an exact field value. For any given\nvalue, the value can only be in one property. Depending on the field, either\nall properties can be set or only a subset will be available.\n\nRefer to the documentation of the field.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "GetBankAccountByV1IdRequest": {
        "type": "object",
        "description": "Request object for fetching a specific `BankAccount`\nby the object ID.",
        "x-release-status": "PUBLIC"
      },
      "GetBankAccountByV1IdResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          }
        },
        "description": "Response object returned by GetBankAccountByV1Id.",
        "example": {
          "bank_account": {
            "id": "w3yRgCGYQnwmdl0R3GB",
            "account_number_suffix": "971",
            "country": "US",
            "currency": "USD",
            "account_type": "CHECKING",
            "holder_name": "Jane Doe",
            "primary_bank_identification_number": "112200303",
            "location_id": "S8GWD5example",
            "status": "VERIFICATION_IN_PROGRESS",
            "creditable": false,
            "debitable": false,
            "version": 5,
            "bank_name": "Bank Name"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetBankAccountRequest": {
        "type": "object",
        "description": "Request object to fetch a specific `BankAccount`\nby the object ID.",
        "x-release-status": "PUBLIC"
      },
      "GetBankAccountResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          }
        },
        "description": "Response object returned by `GetBankAccount`.",
        "example": {
          "bank_account": {
            "id": "w3yRgCGYQnwmdl0R3GB",
            "account_number_suffix": "971",
            "country": "US",
            "currency": "USD",
            "account_type": "CHECKING",
            "holder_name": "Jane Doe",
            "primary_bank_identification_number": "112200303",
            "location_id": "S8GWD5example",
            "status": "VERIFICATION_IN_PROGRESS",
            "creditable": false,
            "debitable": false,
            "version": 5,
            "bank_name": "Bank Name"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetBreakTypeRequest": {
        "type": "object",
        "description": "A request to GET a `BreakType` by ID",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "GetBreakTypeResponse": {
        "type": "object",
        "properties": {
          "break_type": {
            "$ref": "#/components/schemas/BreakType"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request to get a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "break_type": {
            "id": "lA0mj_RSOprNPwMUXdYp",
            "location_id": "059SB0E0WCNWS",
            "break_name": "Lunch Break",
            "expected_duration": "PT30M",
            "is_paid": true,
            "version": 1,
            "created_at": "2019-02-21T17:50:00Z",
            "updated_at": "2019-02-21T17:50:00Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetDeviceCodeRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "GetDeviceCodeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "device_code": {
            "$ref": "#/components/schemas/DeviceCode"
          }
        },
        "description": "",
        "example": {
          "device_code": {
            "id": "B3Z6NAMYQSMTM",
            "name": "Counter 1",
            "code": "EBCARJ",
            "product_type": "TERMINAL_API",
            "location_id": "B5E4484SHHNYH",
            "created_at": "2020-02-06T18:44:33.000Z",
            "pair_by": "2020-02-06T18:49:33.000Z",
            "status": "PAIRED",
            "device_id": "907CS13101300122",
            "status_changed_at": "2020-02-06T18:47:28.000Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetEmployeeWageRequest": {
        "type": "object",
        "description": "A request to get an `EmployeeWage`",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "GetEmployeeWageResponse": {
        "type": "object",
        "properties": {
          "employee_wage": {
            "$ref": "#/components/schemas/EmployeeWage"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A response to a request to get an `EmployeeWage`. Contains\nthe requested `EmployeeWage` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "employee_wage": {
            "id": "pXS3qCv7BERPnEGedM4S8mhm",
            "employee_id": "33fJchumvVdJwxV0H6L9",
            "title": "Manager",
            "hourly_rate": {
              "amount": 2000,
              "currency": "USD"
            }
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "GetInvoiceRequest": {
        "type": "object",
        "description": "Describes a `GetInvoice` request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "GetInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `GetInvoice` response.",
        "example": {
          "invoice": {
            "id": "gt2zv1z6mnUm1V7KMxxf3w",
            "version": 0,
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": true,
                "reminders": [
                  {
                    "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                    "relative_scheduled_days": -1,
                    "message": "Your invoice is due tomorrow",
                    "status": "PENDING"
                  }
                ],
                "computed_amount_money": {
                  "amount": 10000,
                  "currency": "USD"
                },
                "total_completed_amount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "automatic_payment_source": "NONE"
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "status": "DRAFT",
            "timezone": "America/Los_Angeles",
            "created_at": "2020-06-18T17:45:13Z",
            "updated_at": "2020-06-18T17:45:13Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "phone_number": "1-212-555-4240"
            },
            "custom_fields": [
              {
                "label": "Event Reference Number",
                "value": "Ref. #1234",
                "placement": "ABOVE_LINE_ITEMS"
              },
              {
                "label": "Terms of Service",
                "value": "The terms of service are...",
                "placement": "BELOW_LINE_ITEMS"
              }
            ],
            "delivery_method": "EMAIL"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "GetPaymentRefundRequest": {
        "type": "object",
        "description": "Describes a request to retrieve a refund using \n[GetPaymentRefund](#endpoint-payments-getpaymentrefund).",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "GetPaymentRefundResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/PaymentRefund"
          }
        },
        "description": "Defines the response returned by [GetRefund](#endpoint-refunds-getpaymentrefund).\n\nNote: If there are errors processing the request, the refund field might not be\npresent or it might be present in a FAILED state.",
        "example": {
          "refund": {
            "id": "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
            "created_at": "2019-07-06T18:01:22.123Z",
            "updated_at": "2019-07-06T18:06:03.874Z",
            "status": "COMPLETED",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "payment_id": "O2QAAhTYs7rUfzlxT38GMO7LvaB",
            "order_id": "2duiyoqbfeXY0DBi15GEyk5Epa4F",
            "location_id": "XK3DBG77NJBFX",
            "processing_fee": [
              {
                "effective_at": "2019-07-06T20:01:12.000Z",
                "type": "INITIAL",
                "amount_money": {
                  "amount": -59,
                  "currency": "USD"
                }
              }
            ]
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetPaymentRequest": {
        "type": "object",
        "description": "Describes a request to retrieve a payment using \n[GetPayment](#endpoint-payments-getpayment).",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "GetPaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "description": "Defines the response returned by [GetPayment](#endpoint-payments-getpayment).",
        "example": {
          "payment": {
            "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "created_at": "2019-07-10T13:23:49.154Z",
            "updated_at": "2019-07-10T13:23:49.446Z",
            "amount_money": {
              "amount": 200,
              "currency": "USD"
            },
            "app_fee_money": {
              "amount": 10,
              "currency": "USD"
            },
            "total_money": {
              "amount": 200,
              "currency": "USD"
            },
            "approved_money": {
              "amount": 200,
              "currency": "USD"
            },
            "status": "COMPLETED",
            "source_type": "CARD",
            "card_details": {
              "status": "CAPTURED",
              "card": {
                "card_brand": "VISA",
                "last_4": "1111",
                "exp_month": 7,
                "exp_year": 2026,
                "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw",
                "card_type": "DEBIT",
                "prepaid_type": "PREPAID",
                "bin": "411111"
              },
              "entry_method": "ON_FILE",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "nsAyY2",
              "statement_description": "SQ *MY MERCHANT",
              "card_payment_timeline": {
                "authorized_at": "2019-07-10T13:23:49.234Z",
                "captured_at": "2019-07-10T13:23:49.446Z"
              }
            },
            "location_id": "XTI0H92143A39",
            "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
            "reference_id": "123456",
            "note": "Brief description",
            "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
            "processing_fee": [
              {
                "effective_at": "2019-07-10T15:23:49.000Z",
                "type": "INITIAL",
                "amount_money": {
                  "amount": 36,
                  "currency": "USD"
                }
              }
            ],
            "receipt_number": "GQTF",
            "receipt_url": "https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
            "version_token": "hj8JqHWu9R1Kkfu63UuIUmYc7zm6YFOt92g8d2fb9fz6o"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetShiftRequest": {
        "type": "object",
        "description": "A request to get a `Shift` by ID",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "GetShiftResponse": {
        "type": "object",
        "properties": {
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A response to request to get a `Shift`. Contains\nthe requested `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "shift": {
            "id": "T35HMQSN89SV4",
            "team_member_id": "D71KRMQof6cXGUW0aAv7",
            "employee_id": "D71KRMQof6cXGUW0aAv7",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-02-23T18:00:00-05:00",
            "end_at": "2019-02-23T21:00:00-05:00",
            "wage": {
              "title": "Cashier",
              "hourly_rate": {
                "amount": 1457,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "M9BBKEPQAQD2T",
                "start_at": "2019-02-23T19:00:00-05:00",
                "end_at": "2019-02-23T20:00:00-05:00",
                "break_type_id": "92EPDRQKJ5088",
                "name": "Lunch Break",
                "expected_duration": "PT1H",
                "is_paid": true
              }
            ],
            "status": "CLOSED",
            "version": 1,
            "created_at": "2019-02-27T00:12:12Z",
            "updated_at": "2019-02-27T00:12:12Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetTeamMemberWageRequest": {
        "type": "object",
        "description": "A request to get an `TeamMemberWage`",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "GetTeamMemberWageResponse": {
        "type": "object",
        "properties": {
          "team_member_wage": {
            "$ref": "#/components/schemas/TeamMemberWage"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A response to a request to get a `TeamMemberWage`. Contains\nthe requested `TeamMemberWage` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "team_member_wage": {
            "id": "pXS3qCv7BERPnEGedM4S8mhm",
            "team_member_id": "33fJchumvVdJwxV0H6L9",
            "title": "Manager",
            "hourly_rate": {
              "amount": 2000,
              "currency": "USD"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetTerminalCheckoutRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "GetTerminalCheckoutResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "checkout": {
            "$ref": "#/components/schemas/TerminalCheckout"
          }
        },
        "description": "",
        "example": {
          "checkout": {
            "id": "08YceKh7B3ZqO",
            "amount_money": {
              "amount": 2610,
              "currency": "USD"
            },
            "reference_id": "id11572",
            "note": "A brief note",
            "device_options": {
              "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
              "tip_settings": {
                "allow_tipping": false
              },
              "skip_receipt_screen": false
            },
            "status": "IN_PROGRESS",
            "created_at": "2020-04-06T16:39:32.545Z",
            "updated_at": "2020-04-06T16:39:323.001Z",
            "app_id": "APP_ID",
            "deadline_duration": "PT10M"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "GetTerminalRefundRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "GetTerminalRefundResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/TerminalRefund"
          }
        },
        "description": "",
        "example": {
          "refund": {
            "id": "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "refund_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
            "payment_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
            "amount_money": {
              "amount": 111,
              "currency": "CAD"
            },
            "reason": "Returning item",
            "device_id": "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
            "deadline_duration": "PT5M",
            "status": "COMPLETED",
            "created_at": "2020-09-29T15:21:46.771Z",
            "updated_at": "2020-09-29T15:21:48.675Z",
            "app_id": "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
            "card": {
              "card_brand": "INTERAC",
              "last_4": "1111",
              "exp_month": 1,
              "exp_year": 2022,
              "fingerprint": "sq-1-B1fP9MNNmZgVVaPKRND6oDKYbz25S2cTvg9Mzwg3RMTK1zT1PiGRT-AE3nTA8vSmmw",
              "card_type": "CREDIT",
              "bin": "411111"
            },
            "order_id": "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
            "location_id": "76C9W6K8CNNQ5"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "InventoryAdjustment": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "A unique ID generated by Square for the\n`InventoryAdjustment`."
          },
          "reference_id": {
            "maxLength": 255,
            "type": "string",
            "description": "An optional ID provided by the application to tie the\n`InventoryAdjustment` to an external\nsystem."
          },
          "from_state": {
            "type": "string",
            "description": "The `InventoryState` of the related quantity\nof items before the adjustment.\nSee [InventoryState](#type-inventorystate) for possible values"
          },
          "to_state": {
            "type": "string",
            "description": "The `InventoryState` of the related quantity\nof items after the adjustment.\nSee [InventoryState](#type-inventorystate) for possible values"
          },
          "location_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
          },
          "catalog_object_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square generated ID of the\n`CatalogObject` being tracked."
          },
          "catalog_object_type": {
            "maxLength": 14,
            "type": "string",
            "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
          },
          "quantity": {
            "maxLength": 26,
            "type": "string",
            "description": "The number of items affected by the adjustment as a decimal string.\nCan support up to 5 digits after the decimal point."
          },
          "total_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "occurred_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe adjustment took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
          },
          "created_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the adjustment.",
            "x-read-only": true
          },
          "source": {
            "$ref": "#/components/schemas/SourceApplication"
          },
          "employee_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Employee` responsible for the\ninventory adjustment."
          },
          "transaction_id": {
            "maxLength": 255,
            "type": "string",
            "description": "The read-only Square ID of the [Transaction][#type-transaction] that\ncaused the adjustment. Only relevant for payment-related state\ntransitions."
          },
          "refund_id": {
            "maxLength": 255,
            "type": "string",
            "description": "The read-only Square ID of the [Refund][#type-refund] that\ncaused the adjustment. Only relevant for refund-related state\ntransitions."
          },
          "purchase_order_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The read-only Square ID of the purchase order that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
          },
          "goods_receipt_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The read-only Square ID of the Square goods receipt that caused the\nadjustment. Only relevant for state transitions from the Square for Retail\napp."
          }
        },
        "description": "Represents a change in state or quantity of product inventory at a\nparticular time and location.",
        "x-release-status": "PUBLIC"
      },
      "InventoryChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates how the inventory change was applied. See\n`InventoryChangeType` for all possible values.\nSee [InventoryChangeType](#type-inventorychangetype) for possible values"
          },
          "physical_count": {
            "$ref": "#/components/schemas/InventoryPhysicalCount"
          },
          "adjustment": {
            "$ref": "#/components/schemas/InventoryAdjustment"
          },
          "transfer": {
            "$ref": "#/components/schemas/InventoryTransfer"
          }
        },
        "description": "Represents a single physical count, inventory, adjustment, or transfer\nthat is part of the history of inventory changes for a particular\n`CatalogObject`.",
        "x-release-status": "PUBLIC"
      },
      "InventoryCount": {
        "type": "object",
        "properties": {
          "catalog_object_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square generated ID of the\n`CatalogObject` being tracked."
          },
          "catalog_object_type": {
            "maxLength": 14,
            "type": "string",
            "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
          },
          "state": {
            "type": "string",
            "description": "The current `InventoryState` for the related\nquantity of items.\nSee [InventoryState](#type-inventorystate) for possible values"
          },
          "location_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
          },
          "quantity": {
            "maxLength": 26,
            "type": "string",
            "description": "The number of items affected by the estimated count as a decimal string.\nCan support up to 5 digits after the decimal point."
          },
          "calculated_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the most recent physical count or adjustment that had an affect\non the estimated count."
          }
        },
        "description": "Represents Square's estimated quantity of items in a particular state at a\nparticular location based on the known history of physical counts and\ninventory adjustments.",
        "x-release-status": "PUBLIC"
      },
      "InventoryPhysicalCount": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "A unique ID generated by Square for the\n`InventoryPhysicalCount`."
          },
          "reference_id": {
            "maxLength": 255,
            "type": "string",
            "description": "An optional ID provided by the application to tie the\n`InventoryPhysicalCount` to an external\nsystem."
          },
          "catalog_object_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square generated ID of the\n`CatalogObject` being tracked."
          },
          "catalog_object_type": {
            "maxLength": 14,
            "type": "string",
            "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked. Tracking is only\nsupported for the `ITEM_VARIATION` type."
          },
          "state": {
            "type": "string",
            "description": "The current `InventoryState` for the related\nquantity of items.\nSee [InventoryState](#type-inventorystate) for possible values"
          },
          "location_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Location` where the related\nquantity of items are being tracked."
          },
          "quantity": {
            "maxLength": 26,
            "type": "string",
            "description": "The number of items affected by the physical count as a decimal string.\nCan support up to 5 digits after the decimal point."
          },
          "source": {
            "$ref": "#/components/schemas/SourceApplication"
          },
          "employee_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Employee` responsible for the\nphysical count."
          },
          "occurred_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe physical count took place. For write actions, the `occurred_at`\ntimestamp cannot be older than 24 hours or in the future relative to the\ntime of the request."
          },
          "created_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the physical count.",
            "x-read-only": true
          }
        },
        "description": "Represents the quantity of an item variation that is physically present\nat a specific location, verified by a seller or a seller's employee. For example,\na physical count might come from an employee counting the item variations on\nhand or from syncing with an external system.",
        "x-release-status": "PUBLIC"
      },
      "InventoryTransfer": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "A unique ID generated by Square for the\n`InventoryTransfer`."
          },
          "reference_id": {
            "maxLength": 255,
            "type": "string",
            "description": "An optional ID provided by the application to tie the\n`InventoryTransfer` to an external system."
          },
          "state": {
            "type": "string",
            "description": "The `InventoryState` for the quantity of\nitems being transferred.\nSee [InventoryState](#type-inventorystate) for possible values"
          },
          "from_location_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Location` where the related\nquantity of items were tracked before the transfer."
          },
          "to_location_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Location` where the related\nquantity of items were tracked after the transfer."
          },
          "catalog_object_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square generated ID of the\n`CatalogObject` being tracked."
          },
          "catalog_object_type": {
            "maxLength": 14,
            "type": "string",
            "description": "The `CatalogObjectType` of the\n`CatalogObject` being tracked.Tracking is only\nsupported for the `ITEM_VARIATION` type."
          },
          "quantity": {
            "maxLength": 26,
            "type": "string",
            "description": "The number of items affected by the transfer as a decimal string.\nCan support up to 5 digits after the decimal point."
          },
          "occurred_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A client-generated timestamp in RFC 3339 format that indicates when\nthe transfer took place. For write actions, the `occurred_at` timestamp\ncannot be older than 24 hours or in the future relative to the time of the\nrequest."
          },
          "created_at": {
            "maxLength": 34,
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format that indicates when Square\nreceived the transfer request.",
            "x-read-only": true
          },
          "source": {
            "$ref": "#/components/schemas/SourceApplication"
          },
          "employee_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The Square ID of the `Employee` responsible for the\ninventory transfer."
          }
        },
        "description": "Represents the transfer of a quantity of product inventory at a\nparticular time from one location to another.",
        "x-release-status": "PUBLIC"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Square-assigned ID of the invoice.",
            "x-read-only": true
          },
          "version": {
            "type": "integer",
            "description": "The Square-assigned version number, which is incremented each time an update is committed to the invoice."
          },
          "location_id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location that this invoice is associated with.\nThis field is required when creating an invoice."
          },
          "order_id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `order` for which the invoice is created.\n\nThis order must be in the `OPEN` state and must belong to the `location_id`\nspecified for this invoice. This field is required when creating an invoice."
          },
          "primary_recipient": {
            "$ref": "#/components/schemas/InvoiceRecipient"
          },
          "payment_requests": {
            "type": "array",
            "description": "The payment schedule for the invoice, represented by one or more payment requests that\ndefine payment settings, such as amount due and due date. You can specify a maximum of 13\npayment requests, with up to 12 `INSTALLMENT` request types. For more information, see\n[Payment requests](https://developer.squareup.com/docs/docs/invoices-api/overview#payment-requests).\n\nThis field is required when creating an invoice. It must contain at least one payment request.",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentRequest"
            }
          },
          "delivery_method": {
            "waahhh": "waaahhhh"
          },
          "invoice_number": {
            "maxLength": 191,
            "minLength": 1,
            "type": "string",
            "description": "A user-friendly invoice number. The value is unique within a location.\nIf not provided when creating an invoice, Square assigns a value.\nIt increments from 1 and padded with zeros making it 7 characters long\nfor example, 0000001, 0000002."
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title of the invoice."
          },
          "description": {
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "The description of the invoice. This is visible to the customer receiving the invoice."
          },
          "scheduled_at": {
            "type": "string",
            "description": "The timestamp when the invoice is scheduled for processing, in RFC 3339 format.\nAfter the invoice is published, Square processes the invoice on the specified date, according to the delivery method and payment request settings.\n\nIf the field is not set, Square processes the invoice immediately after it is published."
          },
          "public_url": {
            "type": "string",
            "description": "The URL of the Square-hosted invoice page.\nAfter you publish the invoice using the `PublishInvoice` endpoint, Square hosts the invoice\npage and returns the page URL in the response.",
            "x-read-only": true
          },
          "next_payment_amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "status": {
            "type": "string",
            "description": "The status of the invoice.\nSee [InvoiceStatus](#type-invoicestatus) for possible values",
            "x-read-only": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone used to interpret calendar dates on the invoice, such as `due_date`. When an invoice is created, this field is set to the `timezone` specified for the seller location. The value cannot be changed.\n\nFor example, a payment `due_date` of 2021-03-09 with a `timezone` of America/Los\\_Angeles becomes overdue at midnight on March 9 in America/Los\\_Angeles (which equals a UTC timestamp of 2021-03-10T08:00:00Z).",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the invoice was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the invoice was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "custom_fields": {
            "type": "array",
            "description": "Additional seller-defined fields to render on the invoice. These fields are visible to sellers and buyers\non the Square-hosted invoice page and in emailed or PDF copies of invoices. For more information, see\n[Custom fields](https://developer.squareup.com/docs/docs/invoices-api/overview#custom-fields).\n\nMax: 2 custom fields",
            "items": {
              "$ref": "#/components/schemas/InvoiceCustomField"
            }
          }
        },
        "description": "Stores information about an invoice. You use the Invoices API to create and manage\ninvoices. For more information, see [Manage Invoices Using the Invoices API](/docs/invoices-api/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceCustomField": {
        "type": "object",
        "properties": {
          "label": {
            "maxLength": 30,
            "type": "string",
            "description": "The label or title of the custom field. This field is required for a custom field."
          },
          "value": {
            "maxLength": 2000,
            "type": "string",
            "description": "The text of the custom field. If omitted, only the label is rendered."
          },
          "placement": {
            "type": "string",
            "description": "The location of the custom field on the invoice. This field is required for a custom field.\nSee [InvoiceCustomFieldPlacement](#type-invoicecustomfieldplacement) for possible values"
          }
        },
        "description": "An additional seller-defined and customer-facing field to include on the invoice. For more information, \nsee [Custom fields](/docs/invoices-api/overview#custom-fields).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceFilter": {
        "required": [
          "location_ids"
        ],
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "array",
            "description": "Limits the search to the specified locations. A location is required. \nIn the current implementation, only one location can be specified.",
            "items": {
              "type": "string"
            }
          },
          "customer_ids": {
            "type": "array",
            "description": "Limits the search to the specified customers, within the specified locations. \nSpecifying a customer is optional. In the current implementation, \na maximum of one customer can be specified.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Describes query filters to apply.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoicePaymentReminder": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "A Square-assigned ID that uniquely identifies the reminder within the\n`InvoicePaymentRequest`.",
            "x-read-only": true
          },
          "relative_scheduled_days": {
            "maximum": 32767,
            "minimum": -32767,
            "type": "integer",
            "description": "The number of days before (a negative number) or after (a positive number)\nthe payment request `due_date` when the reminder is sent. For example, -3 indicates that\nthe reminder should be sent 3 days before the payment request `due_date`."
          },
          "message": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string",
            "description": "The reminder message."
          },
          "status": {
            "type": "string",
            "description": "The status of the reminder.\nSee [InvoicePaymentReminderStatus](#type-invoicepaymentreminderstatus) for possible values",
            "x-read-only": true
          },
          "sent_at": {
            "type": "string",
            "description": "If sent, the timestamp when the reminder was sent, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Describes a payment request reminder (automatic notification) that Square sends\nto the customer. You configure a reminder relative to the payment request\n`due_date`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoicePaymentRequest": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The Square-generated ID of the payment request in an `invoice`.",
            "x-read-only": true
          },
          "request_method": {
            "type": "string",
            "description": "Indicates how Square processes the payment request. DEPRECATED at version 2021-01-21. Replaced by the `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.\n\nOne of the following is required when creating an invoice:\n- (Recommended) The `delivery_method` field of the invoice. To configure an automatic payment, the `automatic_payment_source` field of the payment request is also required.\n- This `request_method` field. Note that `invoice` objects returned in responses do not include `request_method`.\nSee [InvoiceRequestMethod](#type-invoicerequestmethod) for possible values",
            "x-is-deprecated": true,
            "x-release-status": "DEPRECATED"
          },
          "request_type": {
            "type": "string",
            "description": "Identifies the payment request type. This type defines how the payment request amount is determined. This field is required to create a payment request.\nSee [InvoiceRequestType](#type-invoicerequesttype) for possible values"
          },
          "due_date": {
            "type": "string",
            "description": "The due date (in the invoice's time zone) for the payment request, in `YYYY-MM-DD` format. This field is required to create a payment request.\n\nAfter this date, the invoice becomes overdue. For example, a payment `due_date` of 2021-03-09 with a `timezone` of America/Los\\_Angeles becomes overdue at midnight on March 9 in America/Los\\_Angeles (which equals a UTC timestamp of 2021-03-10T08:00:00Z)."
          },
          "fixed_amount_requested_money": {
            "$ref": "#/components/schemas/Money"
          },
          "percentage_requested": {
            "type": "string",
            "description": "Specifies the amount for the payment request in percentage:\n\n- When the payment `request_type` is `DEPOSIT`, it is the percentage of the order total amount.\n- When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order total less \nthe deposit, if requested. The sum of the `percentage_requested` in all installment \npayment requests must be equal to 100.\n\nYou cannot specify this when the payment `request_type` is `BALANCE` or when the \npayment request specifies the `fixed_amount_requested_money` field."
          },
          "tipping_enabled": {
            "type": "boolean",
            "description": "If set to true, the Square-hosted invoice page (the `public_url` field of the invoice) \nprovides a place for the customer to pay a tip. \n\nThis field is allowed only on the final payment request  \nand the payment `request_type` must be `BALANCE` or `INSTALLMENT`."
          },
          "automatic_payment_source": {
            "type": "string",
            "description": "The payment method for an automatic payment.\n\nThe default value is `NONE`.\nSee [InvoiceAutomaticPaymentSource](#type-invoiceautomaticpaymentsource) for possible values"
          },
          "card_id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the card on file to charge for the payment request. To get the customer’s card on file,\nuse the `customer_id` of the invoice recipient to call `RetrieveCustomer`\nin the Customers API. Then, get the ID of the target card from the `cards` field in the response."
          },
          "reminders": {
            "type": "array",
            "description": "A list of one or more reminders to send for the payment request.",
            "items": {
              "$ref": "#/components/schemas/InvoicePaymentReminder"
            }
          },
          "computed_amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_completed_amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "rounding_adjustment_included_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents a payment request for an [invoice](#type-Invoice). Invoices can specify a maximum\nof 13 payment requests, with up to 12 `INSTALLMENT` request types.\n\nFor more information, \nsee [Payment requests](/docs/invoices-api/overview#payment-requests).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceQuery": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/InvoiceFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/InvoiceSort"
          }
        },
        "description": "Describes query criteria for searching invoices.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceRecipient": {
        "type": "object",
        "properties": {
          "customer_id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the customer. This is the customer profile ID that \nyou provide when creating a draft invoice."
          },
          "given_name": {
            "type": "string",
            "description": "The recipient's given (that is, first) name.",
            "x-read-only": true
          },
          "family_name": {
            "type": "string",
            "description": "The recipient's family (that is, last) name.",
            "x-read-only": true
          },
          "email_address": {
            "type": "string",
            "description": "The recipient's email address.",
            "x-read-only": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "type": "string",
            "description": "The recipient's phone number.",
            "x-read-only": true
          },
          "company_name": {
            "type": "string",
            "description": "The name of the recipient's company.",
            "x-read-only": true
          }
        },
        "description": "Provides customer data that Square uses to deliver an invoice.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "InvoiceSort": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field to sort on.\nSee [InvoiceSortField](#type-invoicesortfield) for possible values"
          },
          "order": {
            "type": "string",
            "description": "The order to use for sorting the results.\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "Identifies the  sort field and sort order.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ItemVariationLocationOverrides": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "description": "The ID of the `Location`."
          },
          "price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "pricing_type": {
            "type": "string",
            "description": "The pricing type (fixed or variable) for the `CatalogItemVariation` at the given `Location`.\nSee [CatalogPricingType](#type-catalogpricingtype) for possible values"
          },
          "track_inventory": {
            "type": "boolean",
            "description": "If `true`, inventory tracking is active for the `CatalogItemVariation` at this `Location`."
          },
          "inventory_alert_type": {
            "type": "string",
            "description": "Indicates whether the `CatalogItemVariation` displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`.\nSee [InventoryAlertType](#type-inventoryalerttype) for possible values"
          },
          "inventory_alert_threshold": {
            "type": "integer",
            "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
            "format": "int64"
          }
        },
        "description": "Price and inventory alerting overrides for a `CatalogItemVariation` at a specific `Location`.",
        "x-release-status": "PUBLIC"
      },
      "JobAssignment": {
        "required": [
          "job_title",
          "pay_type"
        ],
        "type": "object",
        "properties": {
          "job_title": {
            "minLength": 1,
            "type": "string",
            "description": "The title of the job."
          },
          "pay_type": {
            "type": "string",
            "description": "The current pay type for the job assignment used to\ncalculate the pay amount in a pay period.\nSee [JobAssignmentPayType](#type-jobassignmentpaytype) for possible values"
          },
          "hourly_rate": {
            "$ref": "#/components/schemas/Money"
          },
          "annual_rate": {
            "$ref": "#/components/schemas/Money"
          },
          "weekly_hours": {
            "type": "integer",
            "description": "The planned hours per week for the job. Set if the job `PayType` is `SALARY`."
          }
        },
        "description": "An object describing a job that a team member is assigned to.",
        "x-release-status": "PUBLIC"
      },
      "ListBankAccountsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "The pagination cursor returned by a previous call to this endpoint.\nUse it in the next `ListBankAccounts` request to retrieve the next set \nof results.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
          },
          "limit": {
            "type": "integer",
            "description": "Upper limit on the number of bank accounts to return in the response. \nCurrently, 1000 is the largest supported limit. You can specify a limit \nof up to 1000 bank accounts. This is also the default limit."
          },
          "location_id": {
            "type": "string",
            "description": "Location ID. You can specify this optional filter \nto retrieve only the linked bank accounts belonging to a specific location."
          }
        },
        "description": "Request object for fetching all `BankAccount`\nobjects linked to a account.",
        "x-release-status": "PUBLIC"
      },
      "ListBankAccountsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "bank_accounts": {
            "type": "array",
            "description": "List of BankAccounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "cursor": {
            "type": "string",
            "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch next set of bank accounts.\nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          }
        },
        "description": "Response object returned by ListBankAccounts.",
        "example": {
          "bank_accounts": [
            {
              "id": "ao6iaQ9vhDiaQD7n3GB",
              "account_number_suffix": "971",
              "country": "US",
              "currency": "USD",
              "account_type": "CHECKING",
              "holder_name": "Jane Doe",
              "primary_bank_identification_number": "112200303",
              "location_id": "S8GWD5example",
              "status": "VERIFICATION_IN_PROGRESS",
              "creditable": false,
              "debitable": false,
              "version": 5,
              "bank_name": "Bank Name"
            },
            {
              "id": "4x7WXuaxrkQkVlka3GB",
              "account_number_suffix": "972",
              "country": "US",
              "currency": "USD",
              "account_type": "CHECKING",
              "holder_name": "Jane Doe",
              "primary_bank_identification_number": "112200303",
              "location_id": "S8GWD5example",
              "status": "VERIFICATION_IN_PROGRESS",
              "creditable": false,
              "debitable": false,
              "version": 5,
              "bank_name": "Bank Name"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListBreakTypesRequest": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "description": "Filter Break Types returned to only those that are associated with the\nspecified location."
          },
          "limit": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of Break Types to return per page. Can range between 1\nand 200. The default is the maximum at 200."
          },
          "cursor": {
            "type": "string",
            "description": "Pointer to the next page of Break Type results to fetch."
          }
        },
        "description": "A request for a filtered set of `BreakType` objects",
        "example": {
          "request_params": "?location_id=PAA1RJZZKXBFG&limit=2&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
        },
        "x-release-status": "PUBLIC"
      },
      "ListBreakTypesResponse": {
        "type": "object",
        "properties": {
          "break_types": {
            "type": "array",
            "description": " A page of `BreakType` results.",
            "items": {
              "$ref": "#/components/schemas/BreakType"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Value supplied in the subsequent request to fetch the next next page\nof Break Type results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request for a set of `BreakTypes`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "break_types": [
            {
              "id": "REGS1EQR1TPZ5",
              "location_id": "PAA1RJZZKXBFG",
              "break_name": "Coffee Break",
              "expected_duration": "PT5M",
              "is_paid": false,
              "version": 1,
              "created_at": "2019-01-22T20:47:37Z",
              "updated_at": "2019-01-22T20:47:37Z"
            },
            {
              "id": "92EPDRQKJ5088",
              "location_id": "PAA1RJZZKXBFG",
              "break_name": "Lunch Break",
              "expected_duration": "PT1H",
              "is_paid": true,
              "version": 3,
              "created_at": "2019-01-25T19:26:30Z",
              "updated_at": "2019-01-25T19:26:30Z"
            }
          ],
          "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
        },
        "x-release-status": "PUBLIC"
      },
      "ListCashDrawerShiftEventsRequest": {
        "required": [
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location to list cash drawer shifts for."
          },
          "limit": {
            "maximum": 1000,
            "type": "integer",
            "description": "Number of resources to be returned in a page of results (200 by\ndefault, 1000 max)."
          },
          "cursor": {
            "type": "string",
            "description": "Opaque cursor for fetching the next page of results."
          }
        },
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListCashDrawerShiftEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "description": "All of the events (payments, refunds, etc.) for a cash drawer during\nthe shift.",
            "items": {
              "$ref": "#/components/schemas/CashDrawerShiftEvent"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Opaque cursor for fetching the next page. Cursor is not present in\nthe last page of results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "events": [
            {
              "id": "9F07DB01-D85A-4B77-88C3-D5C64CEB5155",
              "event_type": "CASH_TENDER_PAYMENT",
              "event_money": {
                "amount": 100,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:43:02.000Z",
              "description": ""
            },
            {
              "id": "B2854CEA-A781-49B3-8F31-C64558231F48",
              "event_type": "CASH_TENDER_PAYMENT",
              "event_money": {
                "amount": 250,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:43:12.000Z",
              "description": ""
            },
            {
              "id": "B5FB7F72-95CD-44A3-974D-26C41064D042",
              "event_type": "CASH_TENDER_CANCELLED_PAYMENT",
              "event_money": {
                "amount": 250,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:43:23.000Z",
              "description": ""
            },
            {
              "id": "0B425480-8504-40B4-A867-37B23543931B",
              "event_type": "CASH_TENDER_REFUND",
              "event_money": {
                "amount": 100,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:43:46.000Z",
              "description": ""
            },
            {
              "id": "8C66E60E-FDCF-4EEF-A98D-3B14B7ED5CBE",
              "event_type": "PAID_IN",
              "event_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:44:18.000Z",
              "description": "Transfer from another drawer"
            },
            {
              "id": "D5ACA7FE-C64D-4ADA-8BC8-82118A2DAE4F",
              "event_type": "PAID_OUT",
              "event_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "created_at": "2019-11-22T00:44:29.000Z",
              "description": "Transfer out to another drawer"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListCashDrawerShiftsRequest": {
        "required": [
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location to query for a list of cash drawer shifts."
          },
          "sort_order": {
            "type": "string",
            "description": "The order in which cash drawer shifts are listed in the response,\nbased on their opened_at field. Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "begin_time": {
            "type": "string",
            "description": "The inclusive start time of the query on opened_at, in ISO 8601 format."
          },
          "end_time": {
            "type": "string",
            "description": "The exclusive end date of the query on opened_at, in ISO 8601 format."
          },
          "limit": {
            "maximum": 1000,
            "type": "integer",
            "description": "Number of cash drawer shift events in a page of results (200 by\ndefault, 1000 max)."
          },
          "cursor": {
            "type": "string",
            "description": "Opaque cursor for fetching the next page of results."
          }
        },
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListCashDrawerShiftsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "A collection of CashDrawerShiftSummary objects for shifts that match\nthe query.",
            "items": {
              "$ref": "#/components/schemas/CashDrawerShiftSummary"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Opaque cursor for fetching the next page of results. Cursor is not\npresent in the last page of results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "items": [
            {
              "id": "DCC99978-09A6-4926-849F-300BE9C5793A",
              "state": "CLOSED",
              "opened_at": "2019-11-22T00:42:54.000Z",
              "ended_at": "2019-11-22T00:44:49.000Z",
              "closed_at": "2019-11-22T00:44:49.000Z",
              "description": "Misplaced some change",
              "opened_cash_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "expected_cash_money": {
                "amount": 10000,
                "currency": "USD"
              },
              "closed_cash_money": {
                "amount": 9970,
                "currency": "USD"
              }
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListCatalogRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "types": {
            "type": "string",
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.\n\nThe legal values are taken from the CatalogObjectType enum:\n`ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,\n`MODIFIER`, `MODIFIER_LIST`, or `IMAGE`."
          },
          "catalog_version": {
            "type": "integer",
            "description": "The specific version of the catalog objects to be included in the response. \nThis allows you to retrieve historical\nversions of objects. The specified version value is matched against\nthe `CatalogObject`s' `version` attribute.",
            "format": "int64",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "request_params": "?types=category,tax"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python",
          "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp",
          "java": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.java",
          "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php",
          "javascript": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.javascript",
          "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby"
        }
      },
      "ListCatalogResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "objects": {
            "type": "array",
            "description": "The CatalogObjects returned.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "",
        "example": {
          "objects": [
            {
              "type": "CATEGORY",
              "id": "5ZYQZZ2IECPVJ2IJ5KQPRDC3",
              "updated_at": "2017-02-21T14:50:26.495Z",
              "version": 1487688626495,
              "is_deleted": false,
              "present_at_all_locations": true,
              "category_data": {
                "name": "Beverages"
              }
            },
            {
              "type": "TAX",
              "id": "L5R47DGBZOOVKCAFIXC56AEN",
              "updated_at": "2017-02-21T14:50:26.495Z",
              "version": 1487688626495,
              "is_deleted": false,
              "present_at_all_locations": true,
              "tax_data": {
                "name": "Sales Tax",
                "calculation_phase": "TAX_SUBTOTAL_PHASE",
                "inclusion_type": "ADDITIVE",
                "percentage": "5.0",
                "enabled": true
              }
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python",
          "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp",
          "java": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.java",
          "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php",
          "javascript": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.javascript",
          "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby"
        }
      },
      "ListCustomerGroupsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the query parameters that can be provided in a request to the\n[ListCustomerGroups](#endpoint-listcustomergroups) endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListCustomerGroupsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "groups": {
            "type": "array",
            "description": "A list of customer groups belonging to the current merchant.",
            "items": {
              "$ref": "#/components/schemas/CustomerGroup"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [ListCustomerGroups](#endpoint-listcustomergroups) endpoint.\n\nOne of `errors` or `groups` is present in a given response (never both).",
        "example": {
          "groups": [
            {
              "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
              "name": "Loyal Customers",
              "created_at": "2020-04-13T21:54:57.863Z",
              "updated_at": "2020-04-13T21:54:58Z"
            },
            {
              "id": "4XMEHESXJBNE9S9JAKZD2FGB14",
              "name": "Super Loyal Customers",
              "created_at": "2020-04-13T21:55:18.795Z",
              "updated_at": "2020-04-13T21:55:19Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListCustomerSegmentsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by previous calls to __ListCustomerSegments__.\nUsed to retrieve the next set of query results.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the valid parameters for requests to __ListCustomerSegments__.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListCustomerSegmentsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "segments": {
            "type": "array",
            "description": "The list of customer segments belonging to the associated Square account.",
            "items": {
              "$ref": "#/components/schemas/CustomerSegment"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor to be used in subsequent calls to __ListCustomerSegments__\nto retrieve the next set of query results. Only present only if the request succeeded and\nadditional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the fields included in the response body for requests to __ListCustomerSegments__.\n\nOne of `errors` or `segments` is present in a given response (never both).",
        "example": {
          "segments": [
            {
              "id": "GMNXRZVEXNQDF.CHURN_RISK",
              "name": "Lapsed",
              "created_at": "2020-01-09T19:33:24.469Z",
              "updated_at": "2020-04-13T21:47:04Z"
            },
            {
              "id": "GMNXRZVEXNQDF.LOYAL",
              "name": "Regulars",
              "created_at": "2020-01-09T19:33:24.486Z",
              "updated_at": "2020-04-13T21:47:04Z"
            },
            {
              "id": "GMNXRZVEXNQDF.REACHABLE",
              "name": "Reachable",
              "created_at": "2020-01-09T19:33:21.813Z",
              "updated_at": "2020-04-13T21:47:04Z"
            },
            {
              "id": "gv2:KF92J19VXN5FK30GX2E8HSGQ20",
              "name": "Instant Profile",
              "created_at": "2020-01-09T19:33:25Z",
              "updated_at": "2020-04-13T23:01:03Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListCustomersRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          },
          "sort_field": {
            "type": "string",
            "description": "Indicates how Customers should be sorted.\n\nDefault: `DEFAULT`.\nSee [CustomerSortField](#type-customersortfield) for possible values"
          },
          "sort_order": {
            "type": "string",
            "description": "Indicates whether Customers should be sorted in ascending (`ASC`) or\ndescending (`DESC`) order.\n\nDefault: `ASC`.\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "Defines the query parameters that can be provided in a request to the\nListCustomers endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListCustomers/ListCustomersRequest.python",
          "csharp": "/sdk_samples/ListCustomers/ListCustomersRequest.csharp",
          "java": "/sdk_samples/ListCustomers/ListCustomersRequest.java",
          "php": "/sdk_samples/ListCustomers/ListCustomersRequest.php",
          "javascript": "/sdk_samples/ListCustomers/ListCustomersRequest.javascript",
          "ruby": "/sdk_samples/ListCustomers/ListCustomersRequest.ruby"
        }
      },
      "ListCustomersResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "customers": {
            "type": "array",
            "description": "An array of `Customer` objects that match the provided query.",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for the\noriginal query. Only present if the request succeeded and additional results\nare available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the ListCustomers endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
        "example": {
          "customers": [
            {
              "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "created_at": "2016-03-23T20:21:54.859Z",
              "updated_at": "2016-03-23T20:21:55Z",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "address": {
                "address_line_1": "500 Electric Ave",
                "address_line_2": "Suite 600",
                "locality": "New York",
                "administrative_district_level_1": "NY",
                "postal_code": "10003",
                "country": "US"
              },
              "phone_number": "1-212-555-4240",
              "reference_id": "YOUR_REFERENCE_ID",
              "note": "a customer",
              "groups": [
                {
                  "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                  "name": "Aviation Enthusiasts"
                },
                {
                  "id": "1KB9JE5EGJXCW.REACHABLE",
                  "name": "Reachable"
                }
              ],
              "group_ids": [
                "545AXB44B4XXWMVQ4W8SBT3HHF"
              ],
              "segment_ids": [
                "1KB9JE5EGJXCW.REACHABLE"
              ]
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListCustomers/ListCustomersResponse.python",
          "csharp": "/sdk_samples/ListCustomers/ListCustomersResponse.csharp",
          "java": "/sdk_samples/ListCustomers/ListCustomersResponse.java",
          "php": "/sdk_samples/ListCustomers/ListCustomersResponse.php",
          "javascript": "/sdk_samples/ListCustomers/ListCustomersResponse.javascript",
          "ruby": "/sdk_samples/ListCustomers/ListCustomersResponse.ruby"
        }
      },
      "ListDeviceCodesRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
          },
          "location_id": {
            "type": "string",
            "description": "If specified, only returns DeviceCodes of the specified location.\nReturns DeviceCodes of all locations if empty."
          },
          "product_type": {
            "type": "string",
            "description": "If specified, only returns DeviceCodes targeting the specified product type.\nReturns DeviceCodes of all product types if empty.\nSee [ProductType](#type-producttype) for possible values"
          },
          "status": {
            "type": "array",
            "description": "If specified, returns DeviceCodes with the specified statuses.\nReturns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty.\nSee [DeviceCodeStatus](#type-devicecodestatus) for possible values",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListDeviceCodesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "device_codes": {
            "type": "array",
            "description": "The queried DeviceCode.",
            "items": {
              "$ref": "#/components/schemas/DeviceCode"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee [Paginating results](#paginatingresults) for more information."
          }
        },
        "description": "",
        "example": {
          "device_codes": [
            {
              "id": "B3Z6NAMYQSMTM",
              "name": "Counter 1",
              "code": "EBCARJ",
              "product_type": "TERMINAL_API",
              "location_id": "B5E4484SHHNYH",
              "created_at": "2020-02-06T18:44:33.000Z",
              "pair_by": "2020-02-06T18:49:33.000Z",
              "status": "PAIRED",
              "device_id": "907CS13101300122",
              "status_changed_at": "2020-02-06T18:47:28.000Z"
            },
            {
              "id": "YKGMJMYK8H4PQ",
              "name": "Unused device code",
              "code": "GVXNYN",
              "product_type": "TERMINAL_API",
              "location_id": "A6SYFRSV4WAFW",
              "pair_by": "2020-02-07T20:00:04.000Z",
              "created_at": "2020-02-07T19:55:04.000Z",
              "status": "UNPAIRED",
              "status_changed_at": "2020-02-07T19:55:04.000Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListDisputeEvidenceRequest": {
        "type": "object",
        "description": "Defines the parameters for a `ListDisputeEvidence` request.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListDisputeEvidenceResponse": {
        "type": "object",
        "properties": {
          "evidence": {
            "type": "array",
            "description": "The list of evidence previously uploaded to the specified dispute.",
            "items": {
              "$ref": "#/components/schemas/DisputeEvidence"
            }
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields in a `ListDisputeEvidence` response.",
        "example": {
          "evidence": [
            {
              "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
              "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
              "evidence_text": "1Z8888888888888888",
              "evidence_type": "TRACKING_NUMBER",
              "uploaded_at": "2018-10-18T16:01:10.000Z"
            },
            {
              "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
              "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
              "evidence_file": {
                "filename": "evidence.tiff",
                "filetype": "image/tiff"
              },
              "evidence_type": "GENERIC_EVIDENCE",
              "uploaded_at": "2018-10-18T16:01:10.000Z"
            }
          ],
          "cursor": "G1aSTRm48CLjJsg6Sg3hQN1b1OMaoVuG"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListDisputesRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          },
          "states": {
            "type": "array",
            "description": "The dispute states to filter the result.\nIf not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`,\nor `LOST`).\nSee [DisputeState](#type-disputestate) for possible values",
            "items": {
              "type": "string"
            }
          },
          "location_id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location for which to return a list of disputes. If not specified, the endpoint returns\nall open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations."
          }
        },
        "description": "Defines the request parameters for the `ListDisputes` endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListDisputesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "disputes": {
            "type": "array",
            "description": "The list of disputes.",
            "items": {
              "$ref": "#/components/schemas/Dispute"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request.\nIf unset, this is the final response. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          }
        },
        "description": "Defines fields in a `ListDisputes` response.",
        "example": {
          "disputes": [
            {
              "dispute_id": "OnY1AZwhSi775rbNIK4gv",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "reason": "NO_KNOWLEDGE",
              "state": "EVIDENCE_REQUIRED",
              "due_at": "2018-10-11T00:00:00.000Z",
              "disputed_payments": [
                {
                  "payment_id": "APgIq6RX2jM6DKDhMHiC6QEkuaB"
                }
              ],
              "card_brand": "VISA",
              "created_at": "2018-10-12T02:20:25.577Z",
              "updated_at": "2018-10-12T02:20:25.577Z",
              "brand_dispute_id": "100000809947"
            }
          ],
          "cursor": "G1aSTRm48CLjJsg6Sg3hQN1b1OMaoVuG"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListEmployeeWagesRequest": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "description": "Filter wages returned to only those that are associated with the specified employee."
          },
          "limit": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of Employee Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200."
          },
          "cursor": {
            "type": "string",
            "description": "Pointer to the next page of Employee Wage results to fetch."
          }
        },
        "description": "A request for a set of `EmployeeWage` objects",
        "example": {
          "request_params": "?employee_id=33fJchumvVdJwxV0H6L9&limit=4&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ListEmployeeWagesResponse": {
        "type": "object",
        "properties": {
          "employee_wages": {
            "type": "array",
            "description": "A page of Employee Wage results.",
            "items": {
              "$ref": "#/components/schemas/EmployeeWage"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Value supplied in the subsequent request to fetch the next next page\nof Employee Wage results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request for a set of `EmployeeWage` objects. Contains \na set of `EmployeeWage`.",
        "example": {
          "employee_wages": [
            {
              "id": "pXS3qCv7BERPnEGedM4S8mhm",
              "employee_id": "33fJchumvVdJwxV0H6L9",
              "title": "Manager",
              "hourly_rate": {
                "amount": 3250,
                "currency": "USD"
              }
            },
            {
              "id": "rZduCkzYDUVL3ovh1sQgbue6",
              "employee_id": "33fJchumvVdJwxV0H6L9",
              "title": "Cook",
              "hourly_rate": {
                "amount": 2600,
                "currency": "USD"
              }
            },
            {
              "id": "FxLbs5KpPUHa8wyt5ctjubDX",
              "employee_id": "33fJchumvVdJwxV0H6L9",
              "title": "Barista",
              "hourly_rate": {
                "amount": 1600,
                "currency": "USD"
              }
            },
            {
              "id": "vD1wCgijMDR3cX5TPnu7VXto",
              "employee_id": "33fJchumvVdJwxV0H6L9",
              "title": "Cashier",
              "hourly_rate": {
                "amount": 1700,
                "currency": "USD"
              }
            }
          ],
          "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ListEmployeesRequest": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "description": ""
          },
          "status": {
            "type": "string",
            "description": "Specifies the EmployeeStatus to filter the employee by.\nSee [EmployeeStatus](#type-employeestatus) for possible values"
          },
          "limit": {
            "type": "integer",
            "description": "The number of employees to be returned on each page."
          },
          "cursor": {
            "type": "string",
            "description": "The token required to retrieve the specified page of results."
          }
        },
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ListEmployeesResponse": {
        "type": "object",
        "properties": {
          "employees": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/Employee"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The token to be used to retrieve the next page of results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "ListInvoicesRequest": {
        "required": [
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location for which to list invoices."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices."
          }
        },
        "description": "Describes a `ListInvoice` request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListInvoicesResponse": {
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "description": "The invoices retrieved.",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "cursor": {
            "type": "string",
            "description": "When a response is truncated, it includes a cursor that you can use in a \nsubsequent request to fetch the next set of invoices. If empty, this is the final \nresponse. \nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `ListInvoice` response.",
        "example": {
          "invoices": [
            {
              "invoice": {
                "id": "gt2zv1z6mnUm1V7KMxxf3w",
                "version": 0,
                "location_id": "ES0RJRZYEC39A",
                "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
                "payment_requests": [
                  {
                    "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                    "request_type": "BALANCE",
                    "due_date": "2030-01-24",
                    "tipping_enabled": true,
                    "reminders": [
                      {
                        "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                        "relative_scheduled_days": -1,
                        "message": "Your invoice is due tomorrow",
                        "status": "PENDING"
                      }
                    ],
                    "computed_amount_money": {
                      "amount": 10000,
                      "currency": "USD"
                    },
                    "total_completed_amount_money": {
                      "amount": 0,
                      "currency": "USD"
                    },
                    "automatic_payment_source": "NONE"
                  }
                ],
                "invoice_number": "inv-100",
                "title": "Event Planning Services",
                "description": "We appreciate your business!",
                "scheduled_at": "2030-01-13T10:00:00Z",
                "status": "DRAFT",
                "timezone": "America/Los_Angeles",
                "created_at": "2020-06-18T17:45:13Z",
                "updated_at": "2020-06-18T17:45:13Z",
                "primary_recipient": {
                  "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
                  "given_name": "Amelia",
                  "family_name": "Earhart",
                  "email_address": "Amelia.Earhart@example.com",
                  "phone_number": "1-212-555-4240"
                },
                "custom_fields": [
                  {
                    "label": "Event Reference Number",
                    "value": "Ref. #1234",
                    "placement": "ABOVE_LINE_ITEMS"
                  },
                  {
                    "label": "Terms of Service",
                    "value": "The terms of service are...",
                    "placement": "BELOW_LINE_ITEMS"
                  }
                ],
                "delivery_method": "EMAIL"
              }
            }
          ],
          "cursor": "CURSOR"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListLocationsRequest": {
        "type": "object",
        "description": "Defines the fields that are included in requests to\nthe __ListLocations__ endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListLocations/ListLocationsRequest.python",
          "csharp": "/sdk_samples/ListLocations/ListLocationsRequest.csharp",
          "java": "/sdk_samples/ListLocations/ListLocationsRequest.java",
          "php": "/sdk_samples/ListLocations/ListLocationsRequest.php",
          "javascript": "/sdk_samples/ListLocations/ListLocationsRequest.javascript",
          "ruby": "/sdk_samples/ListLocations/ListLocationsRequest.ruby"
        }
      },
      "ListLocationsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "locations": {
            "type": "array",
            "description": "The business locations.",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the __ListLocations__ endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both).",
        "example": {
          "locations": [
            {
              "id": "18YC4JDH91E1H",
              "name": "your location name",
              "address": {
                "address_line_1": "123 Main St",
                "locality": "San Francisco",
                "administrative_district_level_1": "CA",
                "postal_code": "94114",
                "country": "US"
              },
              "timezone": "America/Los_Angeles",
              "capabilities": [
                "CREDIT_CARD_PROCESSING"
              ],
              "status": "ACTIVE",
              "created_at": "2016-09-19T17:33:12Z",
              "merchant_id": "3MYCJG5GVYQ8Q",
              "country": "US",
              "language_code": "en-US",
              "currency": "USD",
              "phone_number": "+1 650-354-7217",
              "business_name": "Pumbaa's business name"
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListLocations/ListLocationsResponse.python",
          "csharp": "/sdk_samples/ListLocations/ListLocationsResponse.csharp",
          "java": "/sdk_samples/ListLocations/ListLocationsResponse.java",
          "php": "/sdk_samples/ListLocations/ListLocationsResponse.php",
          "javascript": "/sdk_samples/ListLocations/ListLocationsResponse.javascript",
          "ruby": "/sdk_samples/ListLocations/ListLocationsResponse.ruby"
        }
      },
      "ListLoyaltyProgramsRequest": {
        "type": "object",
        "description": "A request to list `LoyaltyProgram`.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListLoyaltyProgramsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "programs": {
            "type": "array",
            "description": "A list of `LoyaltyProgram` for the merchant.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgram"
            }
          }
        },
        "description": "A response that contains all loyalty programs.",
        "example": {
          "programs": [
            {
              "id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "status": "ACTIVE",
              "reward_tiers": [
                {
                  "id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
                  "points": 10,
                  "name": "10% off entire sale",
                  "definition": {
                    "scope": "ORDER",
                    "discount_type": "FIXED_PERCENTAGE",
                    "percentage_discount": "10"
                  },
                  "created_at": "2020-04-20T16:55:11Z",
                  "pricing_rule_reference": {
                    "object_id": "74C4JSHESNLTB2A7ITO5HO6F",
                    "catalog_version": "1605486402527"
                  }
                }
              ],
              "terminology": {
                "one": "Point",
                "other": "Points"
              },
              "location_ids": [
                "P034NEENMD09F"
              ],
              "created_at": "2020-04-20T16:55:11Z",
              "updated_at": "2020-05-01T02:00:02Z",
              "accrual_rules": [
                {
                  "accrual_type": "SPEND",
                  "points": 1,
                  "spend_amount_money": {
                    "amount": 100
                  }
                }
              ]
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListMerchantsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "integer",
            "description": "The cursor generated by the previous response."
          }
        },
        "description": "Request object for the [ListMerchant](#endpoint-listmerchant) endpoint.",
        "x-release-status": "PUBLIC"
      },
      "ListMerchantsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "merchant": {
            "type": "array",
            "description": "The requested `Merchant` entities.",
            "items": {
              "$ref": "#/components/schemas/Merchant"
            }
          },
          "cursor": {
            "type": "integer",
            "description": "If the  response is truncated, the cursor to use in next  request to fetch next set of objects."
          }
        },
        "description": "The response object returned by the [ListMerchant](#endpoint-listmerchant) endpoint.",
        "example": {
          "merchant": [
            {
              "id": "DM7VKY8Q63GNP",
              "business_name": "Apple A Day",
              "country": "US",
              "language_code": "en-US",
              "currency": "USD",
              "status": "ACTIVE",
              "main_location_id": "9A65CGC72ZQG1"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "ListPaymentRefundsRequest": {
        "type": "object",
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "The timestamp for the beginning of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The timestamp for the end of the requested reporting period, in RFC 3339 format.\n\nDefault: The current time."
          },
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          },
          "location_id": {
            "type": "string",
            "description": "Limit results to the location supplied. By default, results are returned\nfor all locations associated with the seller."
          },
          "status": {
            "type": "string",
            "description": "If provided, only refunds with the given status are returned.\nFor a list of refund status values, see `PaymentRefund`.\n\nDefault: If omitted, refunds are returned regardless of their status."
          },
          "source_type": {
            "type": "string",
            "description": "If provided, only refunds with the given source type are returned.\n- `CARD` - List refunds only for payments where `CARD` was specified as the payment\nsource.\n\nDefault: If omitted, refunds are returned regardless of the source type."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of results to be returned in a single page.\n\nIt is possible to receive fewer results than the specified limit on a given page.\n\nIf the supplied value is greater than 100, no more than 100 results are returned.\n\nDefault: 100"
          }
        },
        "description": "Describes a request to list refunds using \n[ListPaymentRefunds](#endpoint-payments-listpaymentrefunds).\n\nThe maximum results per page is 100.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListPaymentRefundsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refunds": {
            "type": "array",
            "description": "The list of requested refunds.",
            "items": {
              "$ref": "#/components/schemas/PaymentRefund"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          }
        },
        "description": "Defines the response returned by [ListPaymentRefunds](#endpoint-refunds-listpaymentrefunds).\n\nEither `errors` or `refunds` is present in a given response (never both).",
        "example": {
          "refunds": [
            {
              "id": "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
              "created_at": "2019-07-06T18:01:22.335Z",
              "updated_at": "2019-07-06T18:06:04.653Z",
              "status": "COMPLETED",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "payment_id": "O2QAAhTYs7rUfzlxT38GMO7LvaB",
              "order_id": "2duiyoqbfeXY0DBi15GEyk5Epa4F",
              "location_id": "XK3DBG77NJBFX",
              "processing_fee": [
                {
                  "effective_at": "2019-07-06T20:01:12.000Z",
                  "type": "INITIAL",
                  "amount_money": {
                    "amount": -59,
                    "currency": "USD"
                  }
                }
              ]
            },
            {
              "id": "8TDIQvFw8PeDIxhSfd5yyX7GuaB_13px5Vrz01qzzuoGzmjsZIxDjfHhbkm2XppBUX1dW7I",
              "created_at": "2019-07-06T17:01:54.232Z",
              "updated_at": "2019-07-06T17:21:04.684Z",
              "status": "COMPLETED",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "payment_id": "8TDIQvFw8PeDIxhSfd5yyX7GuaB",
              "order_id": "w6EXfEwS03oTQsnZTCqfE6f67e4F",
              "processing_fee": [
                {
                  "effective_at": "2019-07-06T19:01:45.000Z",
                  "type": "INITIAL",
                  "amount_money": {
                    "amount": -59,
                    "currency": "USD"
                  }
                }
              ],
              "location_id": "XK3DBG77NJBFX"
            }
          ],
          "cursor": "5evquW1YswHoT4EoyUhzMmTsCnsSXBU9U0WJ4FU4623nrMQcocH0RGU6Up1YkwfiMcF59ood58EBTEGgzMTGHQJpocic7ExOL0NtrTXCeWcv0UJIJNk8eXb"
        },
        "x-release-status": "PUBLIC"
      },
      "ListPaymentsRequest": {
        "type": "object",
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "The timestamp for the beginning of the reporting period, in RFC 3339 format.\nInclusive. Default: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The timestamp for the end of the reporting period, in RFC 3339 format.\n\nDefault: The current time."
          },
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed:\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          },
          "location_id": {
            "type": "string",
            "description": "Limit results to the location supplied. By default, results are returned\nfor the default (main) location associated with the seller."
          },
          "total": {
            "minimum": 0,
            "type": "integer",
            "description": "The exact amount in the `total_money` for a payment.",
            "format": "int64"
          },
          "last_4": {
            "type": "string",
            "description": "The last four digits of a payment card."
          },
          "card_brand": {
            "type": "string",
            "description": "The brand of the payment card (for example, VISA)."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of results to be returned in a single page.\nIt is possible to receive fewer results than the specified limit on a given page.\n\nThe default value of 100 is also the maximum allowed value. If the provided value is \ngreater than 100, it is ignored and the default value is used instead.\n\nDefault: `100`"
          }
        },
        "description": "Describes a request to list payments using \n[ListPayments](#endpoint-payments-listpayments).\n\nThe maximum results per page is 100.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "ListPaymentsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payments": {
            "type": "array",
            "description": "The requested list of payments.",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)."
          }
        },
        "description": "Defines the response returned by [ListPayments](#endpoint-payments-listpayments).",
        "example": {
          "payments": [
            {
              "id": "ifrBnAil7rRfDtd27cdf9g9WO8paB",
              "created_at": "2019-07-09T14:36:13.745Z",
              "updated_at": "2019-07-09T14:36:13.883Z",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "total_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "approved_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "status": "APPROVED",
              "source_type": "CARD",
              "card_details": {
                "status": "AUTHORIZED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111",
                  "exp_month": 2,
                  "exp_year": 2022,
                  "fingerprint": "sq-1-lHpUJIUyqOPQmH89b6GuQEljmc-mZmu4kSTaMlkLDkJI7NVjAl4Zirn2sk3OeyVKVA"
                },
                "entry_method": "KEYED",
                "cvv_status": "CVV_ACCEPTED",
                "avs_status": "AVS_ACCEPTED",
                "auth_result_code": "NQbV3A",
                "card_payment_timeline": {
                  "authorized_at": "2019-07-09T14:36:13.798Z"
                }
              },
              "location_id": "QLIJX16Q3UZ0A",
              "order_id": "MvfIilKnIYKBium4rauH67wFzRxv",
              "capabilities": [
                "EDIT_AMOUNT_UP",
                "EDIT_AMOUNT_DOWN",
                "EDIT_TIP_AMOUNT_UP",
                "EDIT_TIP_AMOUNT_DOWN"
              ],
              "version_token": "v6orqdHcW2TwuzCQRdF6a4ktbG8T8nbDcBx8eyrkoZl6o"
            },
            {
              "id": "GQTFp1ZlXdpoW4o6eGiZhbjosiDFf",
              "created_at": "2019-07-08T01:00:51.607Z",
              "updated_at": "2019-07-08T01:13:58.508Z",
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "total_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "approved_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "status": "COMPLETED",
              "source_type": "CARD",
              "card_details": {
                "status": "CAPTURED",
                "card": {
                  "card_brand": "VISA",
                  "last_4": "2796",
                  "exp_month": 7,
                  "exp_year": 2026,
                  "fingerprint": "sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw"
                },
                "entry_method": "ON_FILE",
                "cvv_status": "CVV_ACCEPTED",
                "avs_status": "AVS_ACCEPTED",
                "auth_result_code": "vPIr0K",
                "card_payment_timeline": {
                  "authorized_at": "2019-07-08T01:00:51.617Z",
                  "captured_at": "2019-07-08T01:13:58.508Z"
                }
              },
              "location_id": "XTI0H92143A39",
              "order_id": "m2Hr8Hk8A3CTyQQ1k4ynExg92tO3",
              "customer_id": "RDX9Z4XTIZR7MRZJUXNY9HUK6I",
              "processing_fee": [
                {
                  "effective_at": "2019-07-08T03:00:53.000Z",
                  "type": "INITIAL",
                  "amount_money": {
                    "amount": 59,
                    "currency": "USD"
                  }
                }
              ],
              "version_token": "pE0wanQBErcnO4ubL49pHCV1yAs4BUScWXb8fVvkRqa6o"
            }
          ],
          "cursor": "2TTnuq0yRYDdBRSFF2XuFkgO1Bclt4ZHNI7YrFNeyZ6rL1WZXkdnLn10H8fBIwFKdKW1Af6ifRa"
        },
        "x-release-status": "PUBLIC"
      },
      "ListRefundsRequest": {
        "type": "object",
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
          },
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
          }
        },
        "description": "Defines the query parameters that can be included in\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nDeprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)",
        "example": {
          "request_params": "?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z"
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListRefunds/ListRefundsRequest.python",
          "csharp": "/sdk_samples/ListRefunds/ListRefundsRequest.csharp",
          "java": "/sdk_samples/ListRefunds/ListRefundsRequest.java",
          "php": "/sdk_samples/ListRefunds/ListRefundsRequest.php",
          "javascript": "/sdk_samples/ListRefunds/ListRefundsRequest.javascript",
          "ruby": "/sdk_samples/ListRefunds/ListRefundsRequest.ruby"
        }
      },
      "ListRefundsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refunds": {
            "type": "array",
            "description": "An array of refunds that match your query.",
            "items": {
              "$ref": "#/components/schemas/Refund"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
        "example": {
          "refunds": [
            {
              "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
              "location_id": "18YC4JDH91E1H",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "created_at": "2016-01-20T00:28:18Z",
              "reason": "some reason",
              "amount_money": {
                "amount": 100,
                "currency": "USD"
              },
              "additional_recipients": [
                {
                  "location_id": "057P5VYJ4A5X1",
                  "description": "Application fees",
                  "amount_money": {
                    "amount": 10,
                    "currency": "USD"
                  }
                }
              ],
              "status": "APPROVED"
            }
          ]
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListRefunds/ListRefundsResponse.python",
          "csharp": "/sdk_samples/ListRefunds/ListRefundsResponse.csharp",
          "java": "/sdk_samples/ListRefunds/ListRefundsResponse.java",
          "php": "/sdk_samples/ListRefunds/ListRefundsResponse.php",
          "javascript": "/sdk_samples/ListRefunds/ListRefundsResponse.javascript",
          "ruby": "/sdk_samples/ListRefunds/ListRefundsResponse.ruby"
        }
      },
      "ListSubscriptionEventsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          },
          "limit": {
            "minimum": 1,
            "type": "integer",
            "description": "The upper limit on the number of subscription events to return \nin the response. \n\nDefault: `200`"
          }
        },
        "description": "Defines parameters in a \n[ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)\nendpoint request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListSubscriptionEventsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscription_events": {
            "type": "array",
            "description": "The `SubscriptionEvents` retrieved.",
            "items": {
              "$ref": "#/components/schemas/SubscriptionEvent"
            }
          },
          "cursor": {
            "type": "string",
            "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch the next set of events. \nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          }
        },
        "description": "Defines the fields that are included in the response from the\n[ListSubscriptionEvents](#endpoint-subscriptions-listsubscriptionevents)\nendpoint.",
        "example": {
          "subscription_events": [
            {
              "id": "06809161-3867-4598-8269-8aea5be4f9de",
              "subscription_event_type": "START_SUBSCRIPTION",
              "effective_date": "2020-04-24",
              "plan_id": "6JHXF3B2CW3YKHDV4XEM674H"
            },
            {
              "id": "a0c08083-5db0-4800-85c7-d398de4fbb6e",
              "subscription_event_type": "STOP_SUBSCRIPTION",
              "effective_date": "2020-05-06",
              "plan_id": "6JHXF3B2CW3YKHDV4XEM674H"
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListTeamMemberBookingProfilesRequest": {
        "type": "object",
        "properties": {
          "bookable_only": {
            "type": "boolean",
            "description": "Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of results to return."
          },
          "cursor": {
            "type": "string",
            "description": "The cursor for paginating through the results."
          },
          "location_id": {
            "type": "string",
            "description": "Indicates whether to include only team members enabled at the given location in the returned result."
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListTeamMemberBookingProfilesResponse": {
        "type": "object",
        "properties": {
          "team_member_booking_profiles": {
            "type": "array",
            "description": "The list of team member booking profiles.",
            "items": {
              "$ref": "#/components/schemas/TeamMemberBookingProfile"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The cursor for paginating through the results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "team_member_booking_profiles": [
            {
              "team_member_id": "TMXUrsBWWcHTt79t",
              "display_name": "Sandbox Seller",
              "is_bookable": true
            },
            {
              "team_member_id": "TMaJcbiRqPIGZuS9",
              "display_name": "Sandbox Staff",
              "is_bookable": true
            }
          ],
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "ListTeamMemberWagesRequest": {
        "type": "object",
        "properties": {
          "team_member_id": {
            "type": "string",
            "description": "Filter wages returned to only those that are associated with the\nspecified team member."
          },
          "limit": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of Team Member Wages to return per page. Can range between\n1 and 200. The default is the maximum at 200."
          },
          "cursor": {
            "type": "string",
            "description": "Pointer to the next page of Employee Wage results to fetch."
          }
        },
        "description": "A request for a set of `TeamMemberWage` objects",
        "example": {
          "request_params": "?team_member_id=33fJchumvVdJwxV0H6L9&limit=4&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
        },
        "x-release-status": "PUBLIC"
      },
      "ListTeamMemberWagesResponse": {
        "type": "object",
        "properties": {
          "team_member_wages": {
            "type": "array",
            "description": "A page of Team Member Wage results.",
            "items": {
              "$ref": "#/components/schemas/TeamMemberWage"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Value supplied in the subsequent request to fetch the next next page\nof Team Member Wage results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request for a set of `TeamMemberWage` objects. Contains\na set of `TeamMemberWage`.",
        "example": {
          "team_member_wages": [
            {
              "id": "pXS3qCv7BERPnEGedM4S8mhm",
              "team_member_id": "33fJchumvVdJwxV0H6L9",
              "title": "Manager",
              "hourly_rate": {
                "amount": 3250,
                "currency": "USD"
              }
            },
            {
              "id": "rZduCkzYDUVL3ovh1sQgbue6",
              "team_member_id": "33fJchumvVdJwxV0H6L9",
              "title": "Cook",
              "hourly_rate": {
                "amount": 2600,
                "currency": "USD"
              }
            },
            {
              "id": "FxLbs5KpPUHa8wyt5ctjubDX",
              "team_member_id": "33fJchumvVdJwxV0H6L9",
              "title": "Barista",
              "hourly_rate": {
                "amount": 1600,
                "currency": "USD"
              }
            },
            {
              "id": "vD1wCgijMDR3cX5TPnu7VXto",
              "team_member_id": "33fJchumvVdJwxV0H6L9",
              "title": "Cashier",
              "hourly_rate": {
                "amount": 1700,
                "currency": "USD"
              }
            }
          ],
          "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
        },
        "x-release-status": "PUBLIC"
      },
      "ListTransactionsRequest": {
        "type": "object",
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time."
          },
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information."
          }
        },
        "description": "Defines the query parameters that can be included in\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nDeprecated - recommend using [SearchOrders](#endpoint-orders-searchorders)",
        "example": {
          "request_params": "?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z"
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListTransactions/ListTransactionsRequest.python",
          "csharp": "/sdk_samples/ListTransactions/ListTransactionsRequest.csharp",
          "java": "/sdk_samples/ListTransactions/ListTransactionsRequest.java",
          "php": "/sdk_samples/ListTransactions/ListTransactionsRequest.php",
          "javascript": "/sdk_samples/ListTransactions/ListTransactionsRequest.javascript",
          "ruby": "/sdk_samples/ListTransactions/ListTransactionsRequest.ruby"
        }
      },
      "ListTransactionsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "transactions": {
            "type": "array",
            "description": "An array of transactions that match your query.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information."
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both).",
        "example": {
          "transactions": [
            {
              "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "location_id": "18YC4JDH91E1H",
              "created_at": "2016-01-20T22:57:56Z",
              "tenders": [
                {
                  "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                  "location_id": "18YC4JDH91E1H",
                  "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                  "created_at": "2016-01-20T22:57:56Z",
                  "note": "some optional note",
                  "amount_money": {
                    "amount": 5000,
                    "currency": "USD"
                  },
                  "processing_fee_money": {
                    "amount": 138,
                    "currency": "USD"
                  },
                  "type": "CARD",
                  "card_details": {
                    "status": "CAPTURED",
                    "card": {
                      "card_brand": "VISA",
                      "last_4": "1111"
                    },
                    "entry_method": "KEYED"
                  },
                  "additional_recipients": [
                    {
                      "location_id": "057P5VYJ4A5X1",
                      "description": "Application fees",
                      "amount_money": {
                        "amount": 20,
                        "currency": "USD"
                      }
                    }
                  ]
                }
              ],
              "refunds": [
                {
                  "id": "7a5RcVI0CxbOcJ2wMOkE",
                  "location_id": "18YC4JDH91E1H",
                  "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                  "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                  "created_at": "2016-01-20T22:59:20Z",
                  "reason": "some reason why",
                  "amount_money": {
                    "amount": 5000,
                    "currency": "USD"
                  },
                  "status": "APPROVED",
                  "processing_fee_money": {
                    "amount": 138,
                    "currency": "USD"
                  },
                  "additional_recipients": [
                    {
                      "location_id": "057P5VYJ4A5X1",
                      "description": "Application fees",
                      "amount_money": {
                        "amount": 100,
                        "currency": "USD"
                      }
                    }
                  ]
                }
              ],
              "reference_id": "some optional reference id",
              "product": "EXTERNAL_API"
            }
          ]
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ListTransactions/ListTransactionsResponse.python",
          "csharp": "/sdk_samples/ListTransactions/ListTransactionsResponse.csharp",
          "java": "/sdk_samples/ListTransactions/ListTransactionsResponse.java",
          "php": "/sdk_samples/ListTransactions/ListTransactionsResponse.php",
          "javascript": "/sdk_samples/ListTransactions/ListTransactionsResponse.javascript",
          "ruby": "/sdk_samples/ListTransactions/ListTransactionsResponse.ruby"
        }
      },
      "ListWorkweekConfigsRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximum number of Workweek Configs to return per page."
          },
          "cursor": {
            "type": "string",
            "description": "Pointer to the next page of Workweek Config results to fetch."
          }
        },
        "description": "A request for a set of `WorkweekConfig` objects",
        "example": {
          "request_params": "?limit=1&cursor=s4R0Z6ecFTzTC4jz8sUDBQTudX3KE313OT9fCt3VUgsXM4sMgED"
        },
        "x-release-status": "PUBLIC"
      },
      "ListWorkweekConfigsResponse": {
        "type": "object",
        "properties": {
          "workweek_configs": {
            "type": "array",
            "description": "A page of Employee Wage results.",
            "items": {
              "$ref": "#/components/schemas/WorkweekConfig"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Value supplied in the subsequent request to fetch the next page of\nEmployee Wage results."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request for a set of `WorkweekConfig` objects. Contains\nthe requested `WorkweekConfig` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "workweek_configs": [
            {
              "id": "FY4VCAQN700GM",
              "start_of_week": "MON",
              "start_of_day_local_time": "10:00",
              "version": 11,
              "created_at": "2016-02-04T00:58:24Z",
              "updated_at": "2019-02-28T01:04:35Z"
            }
          ],
          "cursor": "2fofTniCgT0yIPAq26kmk0YyFQJZfbWkh73OOnlTHmTAx13NgED"
        },
        "x-release-status": "PUBLIC"
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Square-issued ID of the location.",
            "x-read-only": true
          },
          "name": {
            "type": "string",
            "description": "The name of the location.\nThis information appears in the dashboard as the nickname.\nA location name must be unique within a seller account."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "timezone": {
            "type": "string",
            "description": "The [IANA Timezone](https://www.iana.org/time-zones) identifier for\nthe timezone of the location."
          },
          "capabilities": {
            "type": "array",
            "description": "The Square features that are enabled for the location.\nSee `LocationCapability` for possible values.\nSee [LocationCapability](#type-locationcapability) for possible values",
            "items": {
              "type": "string"
            },
            "x-read-only": true
          },
          "status": {
            "type": "string",
            "description": "The status of the location, either active or inactive.\nSee [LocationStatus](#type-locationstatus) for possible values"
          },
          "created_at": {
            "type": "string",
            "description": "The time when the location was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "merchant_id": {
            "type": "string",
            "description": "The ID of the merchant that owns the location.",
            "x-read-only": true
          },
          "country": {
            "type": "string",
            "description": "The country of the location, in ISO 3166-1-alpha-2 format.\n\nSee `Country` for possible values.\nSee [Country](#type-country) for possible values",
            "x-read-only": true
          },
          "language_code": {
            "type": "string",
            "description": "The language associated with the location, in\n[BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A)."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for all transactions at this location,\nin ISO 4217 format.\nSee `Currency` for possible values.\nSee [Currency](#type-currency) for possible values",
            "x-read-only": true
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number of the location in human readable format."
          },
          "business_name": {
            "type": "string",
            "description": "The business name of the location\nThis is the name visible to the customers of the location.\nFor example, this name appears on customer receipts."
          },
          "type": {
            "type": "string",
            "description": "The type of the location, either physical or mobile.\nSee [LocationType](#type-locationtype) for possible values"
          },
          "website_url": {
            "type": "string",
            "description": "The website URL of the location."
          },
          "business_hours": {
            "$ref": "#/components/schemas/BusinessHours"
          },
          "business_email": {
            "type": "string",
            "description": "The email of the location.\nThis email is visible to the customers of the location.\nFor example, the email appears on customer receipts."
          },
          "description": {
            "type": "string",
            "description": "The description of the location."
          },
          "twitter_username": {
            "type": "string",
            "description": "The Twitter username of the location without the '&#64;' symbol."
          },
          "instagram_username": {
            "type": "string",
            "description": "The Instagram username of the location without the '&#64;' symbol."
          },
          "facebook_url": {
            "type": "string",
            "description": "The Facebook profile URL of the location. The URL should begin with 'facebook.com/'."
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "logo_url": {
            "type": "string",
            "description": "The URL of the logo image for the location. The Seller must choose this logo in the Seller\ndashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)\nthat Square generates on behalf of the Seller. This image should have an aspect ratio\nclose to 1:1 and is recommended to be at least 200x200 pixels.",
            "x-read-only": true
          },
          "pos_background_url": {
            "type": "string",
            "description": "The URL of the Point of Sale background image for the location.",
            "x-read-only": true
          },
          "mcc": {
            "type": "string",
            "description": "The merchant category code (MCC) of the location, as standardized by ISO 18245.\nThe MCC describes the kind of goods or services sold at the location.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "full_format_logo_url": {
            "type": "string",
            "description": "The URL of a full-format logo image for the location. The Seller must choose this logo in the\nSeller dashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)\nthat Square generates on behalf of the Seller. This image can have an aspect ratio of 2:1 or greater\nand is recommended to be at least 1280x648 pixels.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "LoyaltyAccount": {
        "required": [
          "mappings",
          "program_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "type": "string",
            "description": "The Square-assigned ID of the loyalty account.",
            "x-read-only": true
          },
          "mappings": {
            "type": "array",
            "description": "The list of mappings that the account is associated with. \nCurrently, a buyer can only be mapped to a loyalty account using \na phone number. Therefore, the list can only have one mapping.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyAccountMapping"
            }
          },
          "program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the `loyalty program` to which the account belongs."
          },
          "balance": {
            "type": "integer",
            "description": "The available point balance in the loyalty account.  \n\nYour application should be able to handle loyalty accounts that have a negative point balance (`balance` is less than 0). This might occur if a seller makes a manual adjustment or as a result of a refund or exchange.",
            "x-read-only": true
          },
          "lifetime_points": {
            "minimum": 0,
            "type": "integer",
            "description": "The total points accrued during the lifetime of the account.",
            "x-read-only": true
          },
          "customer_id": {
            "type": "string",
            "description": "The Square-assigned ID of the `customer` that is associated with the account."
          },
          "enrolled_at": {
            "type": "string",
            "description": "The timestamp when enrollment occurred, in RFC 3339 format.",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the loyalty account was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the loyalty account was last updated, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Describes a loyalty account. For more information, see \n[Loyalty Overview](/docs/loyalty/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyAccountMapping": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "type": "string",
            "description": "The Square-assigned ID of the mapping.",
            "x-read-only": true
          },
          "type": {
            "type": "string",
            "description": "The type of mapping.\nSee [LoyaltyAccountMappingType](#type-loyaltyaccountmappingtype) for possible values"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "The phone number, in E.164 format. For example, \"+14155551111\"."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the mapping was created, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Associates a loyalty account with the buyer's phone number.\nFor more information, see \n[Loyalty Overview](/docs/loyalty/overview).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEvent": {
        "required": [
          "created_at",
          "id",
          "loyalty_account_id",
          "source",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the loyalty event.",
            "x-read-only": true
          },
          "type": {
            "type": "string",
            "description": "The type of the loyalty event.\nSee [LoyaltyEventType](#type-loyaltyeventtype) for possible values",
            "x-read-only": true
          },
          "created_at": {
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the event was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "accumulate_points": {
            "$ref": "#/components/schemas/LoyaltyEventAccumulatePoints"
          },
          "create_reward": {
            "$ref": "#/components/schemas/LoyaltyEventCreateReward"
          },
          "redeem_reward": {
            "$ref": "#/components/schemas/LoyaltyEventRedeemReward"
          },
          "delete_reward": {
            "$ref": "#/components/schemas/LoyaltyEventDeleteReward"
          },
          "adjust_points": {
            "$ref": "#/components/schemas/LoyaltyEventAdjustPoints"
          },
          "loyalty_account_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `loyalty account` in which the event occurred.",
            "x-read-only": true
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the `location` where the event occurred.",
            "x-read-only": true
          },
          "source": {
            "type": "string",
            "description": "Defines whether the event was generated by the Square Point of Sale.\nSee [LoyaltyEventSource](#type-loyaltyeventsource) for possible values",
            "x-read-only": true
          },
          "expire_points": {
            "$ref": "#/components/schemas/LoyaltyEventExpirePoints"
          },
          "other_event": {
            "$ref": "#/components/schemas/LoyaltyEventOther"
          }
        },
        "description": "Provides information about a loyalty event. \nFor more information, see [Loyalty events](/docs/loyalty-api/overview/#loyalty-events).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventAccumulatePoints": {
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "type": "string",
            "description": "The ID of the `loyalty program`.",
            "x-read-only": true
          },
          "points": {
            "minimum": 1,
            "type": "integer",
            "description": "The number of points accumulated by the event."
          },
          "order_id": {
            "type": "string",
            "description": "The ID of the `order` for which the buyer accumulated the points.\nThis field is returned only if the Orders API is used to process orders."
          }
        },
        "description": "Provides metadata when the event `type` is `ACCUMULATE_POINTS`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventAdjustPoints": {
        "required": [
          "points"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "type": "string",
            "description": "The Square-assigned ID of the `loyalty program`.",
            "x-read-only": true
          },
          "points": {
            "type": "integer",
            "description": "The number of points added or removed."
          },
          "reason": {
            "type": "string",
            "description": "The reason for the adjustment of points."
          }
        },
        "description": "Provides metadata when the event `type` is `ADJUST_POINTS`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventCreateReward": {
        "required": [
          "loyalty_program_id",
          "points"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `loyalty program`.",
            "x-read-only": true
          },
          "reward_id": {
            "maxLength": 36,
            "type": "string",
            "description": "The Square-assigned ID of the created `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
            "x-read-only": true
          },
          "points": {
            "maximum": 0,
            "type": "integer",
            "description": "The loyalty points used to create the reward.",
            "x-read-only": true
          }
        },
        "description": "Provides metadata when the event `type` is `CREATE_REWARD`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventDateTimeFilter": {
        "required": [
          "created_at"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/TimeRange"
          }
        },
        "description": "Filter events by date time range.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventDeleteReward": {
        "required": [
          "loyalty_program_id",
          "points"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `loyalty program`.",
            "x-read-only": true
          },
          "reward_id": {
            "maxLength": 36,
            "type": "string",
            "description": "The ID of the deleted `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
            "x-read-only": true
          },
          "points": {
            "minimum": 0,
            "type": "integer",
            "description": "The number of points returned to the loyalty account.",
            "x-read-only": true
          }
        },
        "description": "Provides metadata when the event `type` is `DELETE_REWARD`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventExpirePoints": {
        "required": [
          "loyalty_program_id",
          "points"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the `loyalty program`.",
            "x-read-only": true
          },
          "points": {
            "maximum": 0,
            "type": "integer",
            "description": "The number of points expired."
          }
        },
        "description": "Provides metadata when the event `type` is `EXPIRE_POINTS`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventFilter": {
        "type": "object",
        "properties": {
          "loyalty_account_filter": {
            "$ref": "#/components/schemas/LoyaltyEventLoyaltyAccountFilter"
          },
          "type_filter": {
            "$ref": "#/components/schemas/LoyaltyEventTypeFilter"
          },
          "date_time_filter": {
            "$ref": "#/components/schemas/LoyaltyEventDateTimeFilter"
          },
          "location_filter": {
            "$ref": "#/components/schemas/LoyaltyEventLocationFilter"
          },
          "order_filter": {
            "$ref": "#/components/schemas/LoyaltyEventOrderFilter"
          }
        },
        "description": "The filtering criteria. If the request specifies multiple filters, \nthe endpoint uses a logical AND to evaluate them.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventLocationFilter": {
        "required": [
          "location_ids"
        ],
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "array",
            "description": "The `location` IDs for loyalty events to query.\nIf multiple values are specified, the endpoint uses \na logical OR to combine them.",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        },
        "description": "Filter events by location.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventLoyaltyAccountFilter": {
        "required": [
          "loyalty_account_id"
        ],
        "type": "object",
        "properties": {
          "loyalty_account_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `loyalty account` associated with loyalty events."
          }
        },
        "description": "Filter events by loyalty account.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventOrderFilter": {
        "required": [
          "order_id"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `order` associated with the event."
          }
        },
        "description": "Filter events by the order associated with the event.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventOther": {
        "required": [
          "loyalty_program_id",
          "points"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the `loyalty program`.",
            "x-read-only": true
          },
          "points": {
            "type": "integer",
            "description": "The number of points added or removed."
          }
        },
        "description": "Provides metadata when the event `type` is `OTHER`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/LoyaltyEventFilter"
          }
        },
        "description": "Represents a query used to search for loyalty events.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventRedeemReward": {
        "required": [
          "loyalty_program_id"
        ],
        "type": "object",
        "properties": {
          "loyalty_program_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `loyalty program`.",
            "x-read-only": true
          },
          "reward_id": {
            "maxLength": 36,
            "type": "string",
            "description": "The ID of the redeemed `loyalty reward`.\nThis field is returned only if the event source is `LOYALTY_API`.",
            "x-read-only": true
          },
          "order_id": {
            "type": "string",
            "description": "The ID of the `order` that redeemed the reward.\nThis field is returned only if the Orders API is used to process orders.",
            "x-read-only": true
          }
        },
        "description": "Provides metadata when the event `type` is `REDEEM_REWARD`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyEventTypeFilter": {
        "required": [
          "types"
        ],
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "description": "The loyalty event types used to filter the result.\nIf multiple values are specified, the endpoint uses a \nlogical OR to combine them.\nSee [LoyaltyEventType](#type-loyaltyeventtype) for possible values",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter events by event type.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgram": {
        "required": [
          "accrual_rules",
          "created_at",
          "id",
          "location_ids",
          "reward_tiers",
          "status",
          "terminology",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the loyalty program. Updates to \nthe loyalty program do not modify the identifier.",
            "x-read-only": true
          },
          "status": {
            "type": "string",
            "description": "Whether the program is currently active.\nSee [LoyaltyProgramStatus](#type-loyaltyprogramstatus) for possible values",
            "x-read-only": true
          },
          "reward_tiers": {
            "type": "array",
            "description": "The list of rewards for buyers, sorted by ascending points.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgramRewardTier"
            },
            "x-read-only": true
          },
          "expiration_policy": {
            "$ref": "#/components/schemas/LoyaltyProgramExpirationPolicy"
          },
          "terminology": {
            "$ref": "#/components/schemas/LoyaltyProgramTerminology"
          },
          "location_ids": {
            "type": "array",
            "description": "The `locations` at which the program is active.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "x-read-only": true
          },
          "created_at": {
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the program was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "minLength": 1,
            "type": "string",
            "description": "The timestamp when the reward was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "accrual_rules": {
            "type": "array",
            "description": "Defines how buyers can earn loyalty points.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyProgramAccrualRule"
            },
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramAccrualRule": {
        "required": [
          "accrual_type"
        ],
        "type": "object",
        "properties": {
          "accrual_type": {
            "type": "string",
            "description": "The type of the accrual rule that defines how buyers can earn points.\nSee [LoyaltyProgramAccrualRuleType](#type-loyaltyprogramaccrualruletype) for possible values",
            "x-read-only": true
          },
          "points": {
            "minimum": 1,
            "type": "integer",
            "description": "The number of points that \nbuyers earn based on the `accrual_type`.",
            "x-read-only": true
          },
          "visit_minimum_amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "spend_amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "catalog_object_id": {
            "type": "string",
            "description": "The ID of the `catalog object` to purchase to earn the number of points defined by the\nrule. This is either an item variation or a category, depending on the type. This is defined on\n`ITEM_VARIATION` rules and `CATEGORY` rules.",
            "x-read-only": true
          }
        },
        "description": "Defines an accrual rule, which is how buyers can earn points.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramExpirationPolicy": {
        "required": [
          "expiration_duration"
        ],
        "type": "object",
        "properties": {
          "expiration_duration": {
            "minLength": 1,
            "type": "string",
            "description": "The duration of time before points expire, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Describes when the loyalty program expires.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramRewardDefinition": {
        "required": [
          "discount_type",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "description": "Indicates the scope of the reward tier. DEPRECATED at version 2020-12-16. You can find this information in the\n`discount_target_scope` field of the `PRICING_RULE` catalog object and the `product_set_data` field of the `PRODUCT_SET`\ncatalog object referenced by the pricing rule. For `ORDER` scopes, the target scope is `WHOLE_PURCHASE` and `all_products`\nis true. For `ITEM_VARIATION` and `CATEGORY` scopes, the target scope is `LINE_ITEM` and `product_ids_any` is a list of\ncatalog object IDs of the given type.\nSee [LoyaltyProgramRewardDefinitionScope](#type-loyaltyprogramrewarddefinitionscope) for possible values",
            "x-read-only": true
          },
          "discount_type": {
            "type": "string",
            "description": "The type of discount the reward tier offers. DEPRECATED at version 2020-12-16. You can find this information\nin the `discount_data.discount_type` field of the `DISCOUNT` catalog object referenced by the pricing rule.\nSee [LoyaltyProgramRewardDefinitionType](#type-loyaltyprogramrewarddefinitiontype) for possible values",
            "x-read-only": true
          },
          "percentage_discount": {
            "type": "string",
            "description": "The fixed percentage of the discount. Present if `discount_type` is `FIXED_PERCENTAGE`.\nFor example, a 7.25% off discount will be represented as \"7.25\". DEPRECATED at version 2020-12-16. You can find this\ninformation in the `discount_data.percentage` field of the `DISCOUNT` catalog object referenced by the pricing rule.",
            "x-read-only": true
          },
          "catalog_object_ids": {
            "type": "array",
            "description": "The list of catalog objects to which this reward can be applied. They are either all item-variation ids or category ids, depending on the `type` field.\nDEPRECATED at version 2020-12-16. You can find this information in the `product_set_data.product_ids_any` field\nof the `PRODUCT_SET` catalog object referenced by the pricing rule.",
            "items": {
              "type": "string"
            },
            "x-read-only": true
          },
          "fixed_discount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "max_discount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Provides details about the reward tier discount. DEPRECATED at version 2020-12-16. Discount details\nare now defined using a catalog pricing rule and other catalog objects. For more information, see\n[Get discount details for the reward](/docs/loyalty-api/overview#get-discount-details).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramRewardTier": {
        "required": [
          "created_at",
          "definition",
          "id",
          "name",
          "points"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the reward tier.",
            "x-read-only": true
          },
          "points": {
            "minimum": 1,
            "type": "integer",
            "description": "The points exchanged for the reward tier.",
            "x-read-only": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the reward tier.",
            "x-read-only": true
          },
          "definition": {
            "$ref": "#/components/schemas/LoyaltyProgramRewardDefinition"
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the reward tier was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "pricing_rule_reference": {
            "$ref": "#/components/schemas/CatalogObjectReference"
          }
        },
        "description": "Describes a loyalty program reward tier.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyProgramTerminology": {
        "required": [
          "one",
          "other"
        ],
        "type": "object",
        "properties": {
          "one": {
            "minLength": 1,
            "type": "string",
            "description": "A singular unit for a point (for example, 1 point is called 1 star).",
            "x-read-only": true
          },
          "other": {
            "minLength": 1,
            "type": "string",
            "description": "A plural unit for point (for example, 10 points is called 10 stars).",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "LoyaltyReward": {
        "required": [
          "loyalty_account_id",
          "reward_tier_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "type": "string",
            "description": "The Square-assigned ID of the loyalty reward.",
            "x-read-only": true
          },
          "status": {
            "type": "string",
            "description": "The status of a loyalty reward.\nSee [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible values",
            "x-read-only": true
          },
          "loyalty_account_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the `loyalty account` to which the reward belongs."
          },
          "reward_tier_id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The Square-assigned ID of the `reward tier` used to create the reward."
          },
          "points": {
            "minimum": 1,
            "type": "integer",
            "description": "The number of loyalty points used for the reward.",
            "x-read-only": true
          },
          "order_id": {
            "type": "string",
            "description": "The Square-assigned ID of the `order` to which the reward is attached."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the reward was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp when the reward was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "redeemed_at": {
            "type": "string",
            "description": "The timestamp when the reward was redeemed, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnit": {
        "type": "object",
        "properties": {
          "custom_unit": {
            "$ref": "#/components/schemas/MeasurementUnitCustom"
          },
          "area_unit": {
            "type": "string",
            "description": "Represents a standard area unit.\nSee [MeasurementUnitArea](#type-measurementunitarea) for possible values"
          },
          "length_unit": {
            "type": "string",
            "description": "Represents a standard length unit.\nSee [MeasurementUnitLength](#type-measurementunitlength) for possible values"
          },
          "volume_unit": {
            "type": "string",
            "description": "Represents a standard volume unit.\nSee [MeasurementUnitVolume](#type-measurementunitvolume) for possible values"
          },
          "weight_unit": {
            "type": "string",
            "description": "Represents a standard unit of weight or mass.\nSee [MeasurementUnitWeight](#type-measurementunitweight) for possible values"
          },
          "generic_unit": {
            "type": "string",
            "description": "Reserved for API integrations that lack the ability to specify a real measurement unit\nSee [MeasurementUnitGeneric](#type-measurementunitgeneric) for possible values"
          },
          "time_unit": {
            "type": "string",
            "description": "Represents a standard unit of time.\nSee [MeasurementUnitTime](#type-measurementunittime) for possible values"
          },
          "type": {
            "type": "string",
            "description": "Represents the type of the measurement unit.\nSee [MeasurementUnitUnitType](#type-measurementunitunittype) for possible values"
          }
        },
        "description": "Represents a unit of measurement to use with a quantity, such as ounces\nor inches. Exactly one of the following fields are required: `custom_unit`,\n`area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "MeasurementUnitCustom": {
        "required": [
          "abbreviation",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom unit, for example \"bushel\"."
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation of the custom unit, such as \"bsh\" (bushel). This appears\nin the cart for the Point of Sale app, and in reports."
          }
        },
        "description": "The information needed to define a custom unit, provided by the seller.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Merchant": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Square-issued ID of the merchant."
          },
          "business_name": {
            "type": "string",
            "description": "The business name of the merchant."
          },
          "country": {
            "type": "string",
            "description": "The country code associated with the merchant account, in ISO 3166 format.\nSee [Country](#type-country) for possible values"
          },
          "language_code": {
            "type": "string",
            "description": "The language code associated with the merchant account, in BCP 47 format."
          },
          "currency": {
            "type": "string",
            "description": "The currency associated with the merchant account, in ISO 4217 format.\nSee [Currency](#type-currency) for possible values"
          },
          "status": {
            "type": "string",
            "description": "The merchant status, active or inactive.\nSee [MerchantStatus](#type-merchantstatus) for possible values"
          },
          "main_location_id": {
            "type": "string",
            "description": "The ID of the main `Location` for this merchant."
          }
        },
        "description": "Represents a Square seller.",
        "x-release-status": "PUBLIC"
      },
      "Money": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The amount of money, in the smallest denomination of the currency\nindicated by `currency`. For example, when `currency` is `USD`, `amount` is\nin cents. Monetary amounts can be positive or negative. See the specific\nfield description to determine the meaning of the sign in a particular case.",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee `Currency` for possible values.\nSee [Currency](#type-currency) for possible values"
          }
        },
        "description": "Represents an amount of money. `Money` fields can be signed or unsigned.\nFields that do not explicitly define whether they are signed or unsigned are\nconsidered unsigned and can only hold positive amounts. For signed fields, the\nsign of the value indicates the purpose of the money transfer. See\n[Working with Monetary Amounts](/build-basics/working-with-monetary-amounts)\nfor more information.",
        "x-release-status": "PUBLIC"
      },
      "ObtainTokenRequest": {
        "required": [
          "client_id",
          "client_secret",
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The Square-issued ID of your application, available from the\n[application dashboard](https://connect.squareup.com/apps)."
          },
          "client_secret": {
            "type": "string",
            "description": "The Square-issued application secret for your application, available\nfrom the [application dashboard](https://connect.squareup.com/apps)."
          },
          "code": {
            "type": "string",
            "description": "The authorization code to exchange.\nThis is required if `grant_type` is set to `authorization_code`, to indicate that\nthe application wants to exchange an authorization code for an OAuth access token."
          },
          "redirect_uri": {
            "type": "string",
            "description": "The redirect URL assigned in the [application dashboard](https://connect.squareup.com/apps)."
          },
          "grant_type": {
            "type": "string",
            "description": "Specifies the method to request an OAuth access token.\nValid values are: `authorization_code`, `refresh_token`, and `migration_token`"
          },
          "refresh_token": {
            "type": "string",
            "description": "A valid refresh token for generating a new OAuth access token.\nA valid refresh token is required if `grant_type` is set to `refresh_token` ,\nto indicate the application wants a replacement for an expired OAuth access token."
          },
          "migration_token": {
            "type": "string",
            "description": "Legacy OAuth access token obtained using a Connect API version prior\nto 2019-03-13. This parameter is required if `grant_type` is set to\n`migration_token` to indicate that the application wants to get a replacement\nOAuth access token. The response also returns a refresh token.\nFor more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/authz/oauth/migration)."
          },
          "scopes": {
            "type": "array",
            "description": "__OPTIONAL__\n\nA JSON list of strings representing the permissions the application is requesting.\nFor example: \"`[\"MERCHANT_PROFILE_READ\",\"PAYMENTS_READ\",\"BANK_ACCOUNTS_READ\"]`\"\nThe access token returned in the response is granted the permissions\nthat comprise the intersection between the requested list of permissions, and those\nthat belong to the provided refresh token.",
            "items": {
              "type": "string"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "short_lived": {
            "type": "boolean",
            "description": "__OPTIONAL__\n\nA boolean indicating a request for a short-lived access token.\nThe short-lived access token returned in the response will expire in 24 hours.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "client_id": "APPLICATION_ID",
            "client_secret": "APPLICATION_SECRET",
            "code": "CODE_FROM_AUTHORIZE",
            "grant_type": "authorization_code"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ObtainToken/ObtainTokenRequest.python",
          "csharp": "/sdk_samples/ObtainToken/ObtainTokenRequest.csharp",
          "java": "/sdk_samples/ObtainToken/ObtainTokenRequest.java",
          "php": "/sdk_samples/ObtainToken/ObtainTokenRequest.php",
          "javascript": "/sdk_samples/ObtainToken/ObtainTokenRequest.javascript",
          "ruby": "/sdk_samples/ObtainToken/ObtainTokenRequest.ruby"
        }
      },
      "ObtainTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "A valid OAuth access token. OAuth access tokens are 64 bytes long.\nProvide the access token in a header with every request to Connect API\nendpoints. See [OAuth API: Walkthrough](https://developer.squareup.com/docs/oauth-api/walkthrough)\nfor more information."
          },
          "token_type": {
            "type": "string",
            "description": "This value is always _bearer_."
          },
          "expires_at": {
            "type": "string",
            "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
          },
          "merchant_id": {
            "type": "string",
            "description": "The ID of the authorizing merchant's business."
          },
          "subscription_id": {
            "type": "string",
            "description": "__LEGACY FIELD__. The ID of a subscription plan the merchant signed up\nfor. Only present if the merchant signed up for a subscription during authorization."
          },
          "plan_id": {
            "type": "string",
            "description": "__LEGACY FIELD__. The ID of the subscription plan the merchant signed\nup for. Only present if the merchant signed up for a subscription during\nauthorization."
          },
          "id_token": {
            "type": "string",
            "description": "Then OpenID token belonging to this this person. Only present if the\nOPENID scope is included in the authorize request."
          },
          "refresh_token": {
            "type": "string",
            "description": "A refresh token. OAuth refresh tokens are 64 bytes long.\nFor more information, see [OAuth access token management](https://developer.squareup.com/docs/authz/oauth/how-it-works#oauth-access-token-management)."
          },
          "short_lived": {
            "type": "boolean",
            "description": "A boolean indicating the access token is a short-lived access token.\nThe short-lived access token returned in the response will expire in 24 hours.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "access_token": "ACCESS_TOKEN",
          "token_type": "bearer",
          "expires_at": "2006-01-02T15:04:05Z",
          "merchant_id": "MERCHANT_ID",
          "refresh_token": "REFRESH_TOKEN"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ObtainToken/ObtainTokenResponse.python",
          "csharp": "/sdk_samples/ObtainToken/ObtainTokenResponse.csharp",
          "java": "/sdk_samples/ObtainToken/ObtainTokenResponse.java",
          "php": "/sdk_samples/ObtainToken/ObtainTokenResponse.php",
          "javascript": "/sdk_samples/ObtainToken/ObtainTokenResponse.javascript",
          "ruby": "/sdk_samples/ObtainToken/ObtainTokenResponse.ruby"
        }
      },
      "OnboardAppointmentsRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OnboardAppointmentsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Order": {
        "required": [
          "location_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The order's unique ID.",
            "x-read-only": true
          },
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the merchant location this order is associated with."
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "A client specified identifier to associate an entity in another system\nwith this order."
          },
          "source": {
            "$ref": "#/components/schemas/OrderSource"
          },
          "customer_id": {
            "maxLength": 191,
            "type": "string",
            "description": "The `Customer` ID of the customer associated with the order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "line_items": {
            "type": "array",
            "description": "The line items included in the order.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItem"
            }
          },
          "taxes": {
            "type": "array",
            "description": "The list of all taxes associated with the order.\n\nTaxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an\n`OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes\nwith `ORDER` scope, the server will generate an `OrderLineItemAppliedTax` for every line item.\n\nOn reads, each tax in the list will include the total amount of that tax applied to the order.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, usage of the deprecated\n`line_items.taxes` field will result in an error. Please use `line_items.applied_taxes`\ninstead.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemTax"
            }
          },
          "discounts": {
            "type": "array",
            "description": "The list of all discounts associated with the order.\n\nDiscounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,\nan `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.\nFor discounts with `ORDER` scope, the server will generate an `OrderLineItemAppliedDiscount`\nfor every line item.\n\n__IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, usage of the deprecated\n`line_items.discounts` field will result in an error. Please use `line_items.applied_discounts`\ninstead.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemDiscount"
            }
          },
          "service_charges": {
            "type": "array",
            "description": "A list of service charges applied to the order.",
            "items": {
              "$ref": "#/components/schemas/OrderServiceCharge"
            }
          },
          "fulfillments": {
            "type": "array",
            "description": "Details on order fulfillment.\n\nOrders can only be created with at most one fulfillment. However, orders returned\nby the API may contain multiple fulfillments.",
            "items": {
              "$ref": "#/components/schemas/OrderFulfillment"
            }
          },
          "returns": {
            "type": "array",
            "description": "Collection of items from sale Orders being returned in this one. Normally part of an\nItemized Return or Exchange.  There will be exactly one `Return` object per sale Order being\nreferenced.",
            "items": {
              "$ref": "#/components/schemas/OrderReturn"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "return_amounts": {
            "$ref": "#/components/schemas/OrderMoneyAmounts"
          },
          "net_amounts": {
            "$ref": "#/components/schemas/OrderMoneyAmounts"
          },
          "rounding_adjustment": {
            "$ref": "#/components/schemas/OrderRoundingAdjustment"
          },
          "tenders": {
            "type": "array",
            "description": "The Tenders which were used to pay for the Order.",
            "items": {
              "$ref": "#/components/schemas/Tender"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "refunds": {
            "type": "array",
            "description": "The Refunds that are part of this Order.",
            "items": {
              "$ref": "#/components/schemas/Refund"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this order. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp for when the order was created. In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp for when the order was last updated. In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "closed_at": {
            "type": "string",
            "description": "Timestamp for when the order reached a terminal [state](#property-state). In RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "state": {
            "type": "string",
            "description": "The current state of the order. `OPEN`,`COMPLETED`,`CANCELED`\nSee [OrderState](#type-orderstate) for possible values"
          },
          "version": {
            "type": "integer",
            "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_discount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tip_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_service_charge_money": {
            "$ref": "#/components/schemas/Money"
          },
          "pricing_options": {
            "$ref": "#/components/schemas/OrderPricingOptions"
          },
          "rewards": {
            "type": "array",
            "description": "A set-like list of rewards that have been added to the order.",
            "items": {
              "$ref": "#/components/schemas/OrderReward"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Contains all information related to a single order to process with Square,\nincluding line items that specify the products to purchase. Order objects also\ninclude information on any associated tenders, refunds, and returns.\n\nAll Connect V2 Transactions have all been converted to Orders including all associated\nitemization data.",
        "x-release-status": "PUBLIC"
      },
      "OrderCreated": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The order's unique ID."
          },
          "version": {
            "type": "integer",
            "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the merchant location this order is associated with."
          },
          "state": {
            "type": "string",
            "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp for when the order was created in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderCreatedObject": {
        "type": "object",
        "properties": {
          "order_created": {
            "$ref": "#/components/schemas/OrderCreated"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderEntry": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The id of the Order"
          },
          "version": {
            "type": "integer",
            "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "location_id": {
            "type": "string",
            "description": "The location id the Order belongs to."
          }
        },
        "description": "A lightweight description of an [Order](#type-order) that is returned when `returned_entries` is true on a\n[SearchOrderRequest](#type-searchorderrequest)",
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillment": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the fulfillment only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "type": {
            "type": "string",
            "description": "The type of the fulfillment.\nSee [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values"
          },
          "state": {
            "type": "string",
            "description": "The state of the fulfillment.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this fulfillment. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "pickup_details": {
            "$ref": "#/components/schemas/OrderFulfillmentPickupDetails"
          },
          "shipment_details": {
            "$ref": "#/components/schemas/OrderFulfillmentShipmentDetails"
          }
        },
        "description": "Contains details on how to fulfill this order.",
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentPickupDetails": {
        "type": "object",
        "properties": {
          "recipient": {
            "$ref": "#/components/schemas/OrderFulfillmentRecipient"
          },
          "expires_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwill expire if it is not accepted. Must be in RFC 3339 format\ne.g., \"2016-09-04T23:59:33.123Z\". Expiration time can only be set up to 7\ndays in the future. If `expires_at` is not set, this pickup fulfillment\nwill be automatically accepted when placed."
          },
          "auto_complete_duration": {
            "type": "string",
            "description": "The duration of time after which an open and accepted pickup fulfillment\nwill automatically move to the `COMPLETED` state. Must be in RFC3339\nduration format e.g., \"P1W3D\".\n\nIf not set, this pickup fulfillment will remain accepted until it is canceled or completed."
          },
          "schedule_type": {
            "type": "string",
            "description": "The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`.\nSee [OrderFulfillmentPickupDetailsScheduleType](#type-orderfulfillmentpickupdetailsscheduletype) for possible values"
          },
          "pickup_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) that represents the start of the pickup window.\nMust be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".\nFor fulfillments with the schedule type `ASAP`, this is automatically set\nto the current time plus the expected duration to prepare the fulfillment."
          },
          "pickup_window_duration": {
            "type": "string",
            "description": "The window of time in which the order should be picked up after the `pickup_at` timestamp.\nMust be in RFC3339 duration format, e.g., \"P1W3D\". Can be used as an\ninformational guideline for merchants."
          },
          "prep_time_duration": {
            "type": "string",
            "description": "The duration of time it takes to prepare this fulfillment.\nMust be in RFC3339 duration format, e.g., \"P1W3D\"."
          },
          "note": {
            "maxLength": 500,
            "type": "string",
            "description": "A note meant to provide additional instructions about the pickup\nfulfillment displayed in the Square Point of Sale and set by the API."
          },
          "placed_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas placed. Must be in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "accepted_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas accepted. In RFC3339 timestamp format,\ne.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "rejected_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas rejected. In RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "ready_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment is\nmarked as ready for pickup. In RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "expired_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment expired.\nIn RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "picked_up_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the fulfillment\nwas picked up by the recipient. In RFC3339 timestamp format,\ne.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "canceled_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) in RFC3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the fulfillment was canceled.",
            "x-read-only": true
          },
          "cancel_reason": {
            "maxLength": 100,
            "type": "string",
            "description": "A description of why the pickup was canceled. Max length: 100 characters."
          },
          "is_curbside_pickup": {
            "type": "boolean",
            "description": "If true, indicates this pickup order is for curbside pickup, not in-store pickup.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "curbside_pickup_details": {
            "$ref": "#/components/schemas/OrderFulfillmentPickupDetailsCurbsidePickupDetails"
          }
        },
        "description": "Contains details necessary to fulfill a pickup order.",
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentPickupDetailsCurbsidePickupDetails": {
        "type": "object",
        "properties": {
          "curbside_details": {
            "maxLength": 250,
            "type": "string",
            "description": "Specific details for curbside pickup, such as parking number, vehicle model, etc."
          },
          "buyer_arrived_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\",\nindicating when the buyer arrived and is waiting for pickup."
          }
        },
        "description": "Specific details for curbside pickup.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderFulfillmentRecipient": {
        "type": "object",
        "properties": {
          "customer_id": {
            "maxLength": 191,
            "type": "string",
            "description": "The Customer ID of the customer associated with the fulfillment.\n\nIf `customer_id` is provided, the fulfillment recipient's `display_name`,\n`email_address`, and `phone_number` are automatically populated from the\ntargeted customer profile. If these fields are set in the request, the request\nvalues will override the information from the customer profile. If the\ntargeted customer profile does not contain the necessary information and\nthese fields are left unset, the request will result in an error."
          },
          "display_name": {
            "maxLength": 255,
            "type": "string",
            "description": "The display name of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
          },
          "email_address": {
            "maxLength": 255,
            "type": "string",
            "description": "The email address of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
          },
          "phone_number": {
            "maxLength": 17,
            "type": "string",
            "description": "The phone number of the fulfillment recipient.\n\nIf provided, overrides the value pulled from the customer profile indicated by `customer_id`."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "description": "Contains information on the recipient of a fulfillment.",
        "x-release-status": "PUBLIC"
      },
      "OrderFulfillmentShipmentDetails": {
        "type": "object",
        "properties": {
          "recipient": {
            "$ref": "#/components/schemas/OrderFulfillmentRecipient"
          },
          "carrier": {
            "maxLength": 50,
            "type": "string",
            "description": "The shipping carrier being used to ship this fulfillment\ne.g. UPS, FedEx, USPS, etc."
          },
          "shipping_note": {
            "maxLength": 500,
            "type": "string",
            "description": "A note with additional information for the shipping carrier."
          },
          "shipping_type": {
            "maxLength": 50,
            "type": "string",
            "description": "A description of the type of shipping product purchased from the carrier.\ne.g. First Class, Priority, Express"
          },
          "tracking_number": {
            "maxLength": 100,
            "type": "string",
            "description": "The reference number provided by the carrier to track the shipment's progress."
          },
          "tracking_url": {
            "maxLength": 2000,
            "type": "string",
            "description": "A link to the tracking webpage on the carrier's website."
          },
          "placed_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the shipment was\nrequested. Must be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "in_progress_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when this fulfillment was\nmoved to the `RESERVED` state. Indicates that preparation of this shipment has begun.\nMust be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "packaged_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwas moved to the `PREPARED` state. Indicates that the fulfillment is packaged.\nMust be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "expected_shipped_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the shipment is\nexpected to be delivered to the shipping carrier. Must be in RFC 3339 timestamp\nformat, e.g., \"2016-09-04T23:59:33.123Z\"."
          },
          "shipped_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when this fulfillment\nwas moved to the `COMPLETED`state. Indicates that the fulfillment has been given\nto the shipping carrier. Must be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "canceled_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating the shipment was canceled.\nMust be in RFC 3339 timestamp format, e.g., \"2016-09-04T23:59:33.123Z\"."
          },
          "cancel_reason": {
            "maxLength": 100,
            "type": "string",
            "description": "A description of why the shipment was canceled."
          },
          "failed_at": {
            "type": "string",
            "description": "The [timestamp](#workingwithdates) indicating when the shipment\nfailed to be completed. Must be in RFC 3339 timestamp format, e.g.,\n\"2016-09-04T23:59:33.123Z\".",
            "x-read-only": true
          },
          "failure_reason": {
            "maxLength": 100,
            "type": "string",
            "description": "A description of why the shipment failed to be completed."
          }
        },
        "description": "Contains details necessary to fulfill a shipment order.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderFulfillmentUpdated": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The order's unique ID."
          },
          "version": {
            "type": "integer",
            "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the merchant location this order is associated with."
          },
          "state": {
            "type": "string",
            "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp for when the order was created in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp for when the order was last updated in RFC 3339 format.",
            "x-read-only": true
          },
          "fulfillment_update": {
            "type": "array",
            "description": "The fulfillments that were updated with this version change.",
            "items": {
              "$ref": "#/components/schemas/OrderFulfillmentUpdatedUpdate"
            }
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderFulfillmentUpdatedObject": {
        "type": "object",
        "properties": {
          "order_fulfillment_updated": {
            "$ref": "#/components/schemas/OrderFulfillmentUpdated"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderFulfillmentUpdatedUpdate": {
        "type": "object",
        "properties": {
          "fulfillment_uid": {
            "type": "string",
            "description": "Unique ID that identifies the fulfillment only within this order."
          },
          "old_state": {
            "type": "string",
            "description": "The state of the fulfillment before the change.\nWill not be populated if the fulfillment is created with this new Order version.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
          },
          "new_state": {
            "type": "string",
            "description": "The state of the fulfillment after the change. May be equal to old_state if a non-state\nfield was changed on the fulfillment (e.g. tracking number).\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values"
          }
        },
        "description": "Information about fulfillment updates.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItem": {
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the line item only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "name": {
            "maxLength": 512,
            "type": "string",
            "description": "The name of the line item."
          },
          "quantity": {
            "maxLength": 12,
            "minLength": 1,
            "type": "string",
            "description": "The quantity purchased, formatted as a decimal number.\nFor example: `\"3\"`.\n\nLine items with a quantity of `\"0\"` will be automatically removed\nupon paying for or otherwise completing the order.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example: `\"1.70000\"`."
          },
          "quantity_unit": {
            "$ref": "#/components/schemas/OrderQuantityUnit"
          },
          "note": {
            "maxLength": 2000,
            "type": "string",
            "description": "The note of the line item."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The `CatalogItemVariation` id applied to this line item."
          },
          "variation_name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the variation applied to this line item."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this line item. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "modifiers": {
            "type": "array",
            "description": "The `CatalogModifier`s applied to this line item.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemModifier"
            }
          },
          "applied_taxes": {
            "type": "array",
            "description": "The list of references to taxes applied to this line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a\ntop-level `OrderLineItemTax` applied to the line item. On reads, the\namount applied is populated.\n\nAn `OrderLineItemAppliedTax` will be automatically created on every line\nitem for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`\nrecords for `LINE_ITEM` scoped taxes must be added in requests for the tax\nto apply to any line items.\n\nTo change the amount of a tax, modify the referenced top-level tax.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedTax"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "applied_discounts": {
            "type": "array",
            "description": "The list of references to discounts applied to this line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderLineItemDiscounts` applied to the line item. On reads, the amount\napplied is populated.\n\nAn `OrderLineItemAppliedDiscount` will be automatically created on every line item for all\n`ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records\nfor `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any\nline items.\n\nTo change the amount of a discount, modify the referenced top-level discount.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedDiscount"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "base_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "variation_total_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "gross_sales_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_discount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "pricing_blocklists": {
            "$ref": "#/components/schemas/OrderLineItemPricingBlocklists"
          }
        },
        "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details.",
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemAppliedDiscount": {
        "required": [
          "discount_uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the applied discount only within this order."
          },
          "discount_uid": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The `uid` of the discount the applied discount represents. Must\nreference a discount present in the `order.discounts` field.\n\nThis field is immutable. To change which discounts apply to a line item,\nyou must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`."
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents an applied portion of a discount to a line item in an order.\n\nOrder scoped discounts will automatically have applied discounts present for each line item.\nLine item scoped discounts must have applied discounts added manually for any applicable line\nitems. The corresponding applied money will automatically be computed based on participating\nline items.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItemAppliedTax": {
        "required": [
          "tax_uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the applied tax only within this order."
          },
          "tax_uid": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The `uid` of the tax for which this applied tax represents.  Must reference\na tax present in the `order.taxes` field.\n\nThis field is immutable. To change which taxes apply to a line item, delete and add new\n`OrderLineItemAppliedTax`s."
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents an applied portion of a tax to a line item in an order.\n\nOrder-scoped taxes automatically include the applied taxes in each line item.\nLine item taxes must be referenced from any applicable line items.\nThe corresponding applied money is automatically computed, based on the\nset of participating line items.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItemDiscount": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the discount only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogDiscount`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The discount's name."
          },
          "type": {
            "type": "string",
            "description": "The type of the discount.\n\nDiscounts that don't reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values"
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The percentage of the discount, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this discount. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "scope": {
            "type": "string",
            "description": "Indicates the level at which the discount applies. For `ORDER` scoped discounts,\nSquare generates references in `applied_discounts` on all order line items that do\nnot have them. For `LINE_ITEM` scoped discounts, the discount only applies to line items\nwith a discount reference in their `applied_discounts` field.\n\nThis field is immutable. To change the scope of a discount you must delete\nthe discount and re-add it as a new discount.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values"
          },
          "reward_ids": {
            "type": "array",
            "description": "The reward identifiers corresponding to this discount. The application and\nspecification of discounts that have `reward_ids` are completely controlled by the backing\ncriteria corresponding to the reward tiers of the rewards that are added to the order\nthrough the Loyalty API. To manually unapply discounts that are the result of added rewards,\nthe rewards must be removed from the order through the Loyalty API.",
            "items": {
              "type": "string"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "pricing_rule_id": {
            "type": "string",
            "description": "The object identifier of a `pricing rule` to be applied automatically\nto this discount. The specification and application of the discounts, to which a `pricing_rule_id` is\nassigned, are completely controlled by the corresponding pricing rule.",
            "x-read-only": true
          }
        },
        "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the\namount contributed by the item to the order subtotal.",
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemModifier": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the modifier only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogModifier`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the item modifier."
          },
          "base_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_price_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "A [CatalogModifier](#type-catalogmodifier).",
        "x-release-status": "PUBLIC"
      },
      "OrderLineItemPricingBlocklists": {
        "type": "object",
        "properties": {
          "blocked_discounts": {
            "type": "array",
            "description": "A list of discounts blocked from applying to the line item. \nDiscounts can be blocked by the `discount_uid` (for ad-hoc discounts) or \nthe `discount_catalog_object_id` (for catalog discounts).",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemPricingBlocklistsBlockedDiscount"
            }
          },
          "blocked_taxes": {
            "type": "array",
            "description": "A list of taxes blocked from applying to the line item. \nTaxes can be blocked by the `tax_uid` (for ad-hoc taxes) or \nthe `tax_catalog_object_id` (for catalog taxes).",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemPricingBlocklistsBlockedTax"
            }
          }
        },
        "description": "Describes pricing adjustments that are blocked from manual and \nautomatic application to a line item. For more information, see \n[Apply Taxes and Discounts](/docs/orders-api/apply-taxes-and-discounts).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItemPricingBlocklistsBlockedDiscount": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID of the `BlockedDiscount` within the order."
          },
          "discount_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "The `uid` of the discount that should be blocked. Use this field to block \nad-hoc discounts. For catalog discounts use the `discount_catalog_object_id` field."
          },
          "discount_catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The `catalog_object_id` of the discount that should be blocked. \nUse this field to block catalog discounts. For ad-hoc discounts use the \n`discount_uid` field."
          }
        },
        "description": "A discount to block from applying to a line item. The discount must be \nidentified by either `discount_uid` or `discount_catalog_object_id`, but not both.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItemPricingBlocklistsBlockedTax": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID of the `BlockedTax` within the order."
          },
          "tax_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "The `uid` of the tax that should be blocked. Use this field to block \nad-hoc taxes. For catalog taxes use the `tax_catalog_object_id` field."
          },
          "tax_catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The `catalog_object_id` of the tax that should be blocked. \nUse this field to block catalog taxes. For ad-hoc taxes use the \n`tax_uid` field."
          }
        },
        "description": "A tax to block from applying to a line item. The tax must be \nidentified by either `tax_uid` or `tax_catalog_object_id`, but not both.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderLineItemTax": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the tax only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogTax`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The tax's name."
          },
          "type": {
            "type": "string",
            "description": "Indicates the calculation method used to apply the tax.\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values"
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The percentage of the tax, as a string representation of a decimal\nnumber. For example, a value of `\"7.25\"` corresponds to a percentage of\n7.25%."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this tax. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "scope": {
            "type": "string",
            "description": "Indicates the level at which the tax applies. For `ORDER` scoped taxes,\nSquare generates references in `applied_taxes` on all order line items that do\nnot have them. For `LINE_ITEM` scoped taxes, the tax will only apply to line items\nwith references in their `applied_taxes` field.\n\nThis field is immutable. To change the scope, you must delete the tax and\nre-add it as a new tax.\nSee [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible values"
          },
          "auto_applied": {
            "type": "boolean",
            "description": "Determines whether the tax was automatically applied to the order based on\nthe catalog configuration. For an example, see \n[Automatically Apply Taxes to an Order](https://developer.squareup.com/docs/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes).",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Represents a tax that applies to one or more line item in the order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to the amount the item\ncontributes to the order subtotal.",
        "x-release-status": "PUBLIC"
      },
      "OrderMoneyAmounts": {
        "type": "object",
        "properties": {
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "discount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "tip_money": {
            "$ref": "#/components/schemas/Money"
          },
          "service_charge_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "A collection of various money amounts.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderPricingOptions": {
        "type": "object",
        "properties": {
          "auto_apply_discounts": {
            "type": "boolean",
            "description": "The option to determine whether pricing rule-based\ndiscounts are automatically applied to an order."
          },
          "auto_apply_taxes": {
            "type": "boolean",
            "description": "The option to determine whether rule-based taxes are automatically\napplied to an order when the criteria of the corresponding rules are met.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Pricing options for an order. The options affect how the order's price is calculated.\nThey can be used, for example, to apply automatic price adjustments that are based on pre-configured\n[pricing rules](/reference/square/objects/CatalogPricingRule).",
        "x-release-status": "PUBLIC"
      },
      "OrderQuantityUnit": {
        "type": "object",
        "properties": {
          "measurement_unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "precision": {
            "type": "integer",
            "description": "For non-integer quantities, represents the number of digits after the decimal point that are\nrecorded for this quantity.\n\nFor example, a precision of 1 allows quantities like `\"1.0\"` and `\"1.1\"`, but not `\"1.01\"`.\n\nMin: 0. Max: 5."
          }
        },
        "description": "Contains the measurement unit for a quantity and a precision which\nspecifies the number of digits after the decimal point for decimal quantities.",
        "x-release-status": "PUBLIC"
      },
      "OrderReturn": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the return only within this order."
          },
          "source_order_id": {
            "type": "string",
            "description": "Order which contains the original sale of these returned line items. This will be unset\nfor unlinked returns."
          },
          "return_line_items": {
            "type": "array",
            "description": "Collection of line items which are being returned.",
            "items": {
              "$ref": "#/components/schemas/OrderReturnLineItem"
            }
          },
          "return_service_charges": {
            "type": "array",
            "description": "Collection of service charges which are being returned.",
            "items": {
              "$ref": "#/components/schemas/OrderReturnServiceCharge"
            },
            "x-read-only": true
          },
          "return_taxes": {
            "type": "array",
            "description": "Collection of references to taxes being returned for an order, including the total\napplied tax amount to be returned. The taxes must reference a top-level tax ID from the source\norder.",
            "items": {
              "$ref": "#/components/schemas/OrderReturnTax"
            }
          },
          "return_discounts": {
            "type": "array",
            "description": "Collection of references to discounts being returned for an order, including the total\napplied discount amount to be returned. The discounts must reference a top-level discount ID\nfrom the source order.",
            "items": {
              "$ref": "#/components/schemas/OrderReturnDiscount"
            }
          },
          "rounding_adjustment": {
            "$ref": "#/components/schemas/OrderRoundingAdjustment"
          },
          "return_amounts": {
            "$ref": "#/components/schemas/OrderMoneyAmounts"
          }
        },
        "description": "The set of line items, service charges, taxes, discounts, tips, etc. being returned in an Order.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderReturnDiscount": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the return discount only within this order."
          },
          "source_discount_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "`uid` of the Discount from the Order which contains the original application of this discount."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogDiscount`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The discount's name."
          },
          "type": {
            "type": "string",
            "description": "The type of the discount. If it is created by API, it would be either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nDiscounts that don't reference a catalog object ID must have a type of\n`FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values"
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\n`percentage` is not set for amount-based discounts."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "scope": {
            "type": "string",
            "description": "Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped\ndiscounts, the server will generate references in `applied_discounts` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount will only apply to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values"
          }
        },
        "description": "Represents a discount being returned that applies to one or more return line items in an\norder.\n\nFixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderReturnLineItem": {
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique identifier for this return line item entry."
          },
          "source_line_item_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "`uid` of the LineItem in the original sale Order."
          },
          "name": {
            "maxLength": 512,
            "type": "string",
            "description": "The name of the line item."
          },
          "quantity": {
            "maxLength": 12,
            "minLength": 1,
            "type": "string",
            "description": "The quantity returned, formatted as a decimal number.\nFor example: `\"3\"`.\n\nLine items with a `quantity_unit` can have non-integer quantities.\nFor example: `\"1.70000\"`."
          },
          "quantity_unit": {
            "$ref": "#/components/schemas/OrderQuantityUnit"
          },
          "note": {
            "maxLength": 2000,
            "type": "string",
            "description": "The note of the returned line item."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The `CatalogItemVariation` id applied to this returned line item."
          },
          "variation_name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the variation applied to this returned line item."
          },
          "return_modifiers": {
            "type": "array",
            "description": "The `CatalogModifier`s applied to this line item.",
            "items": {
              "$ref": "#/components/schemas/OrderReturnLineItemModifier"
            }
          },
          "applied_taxes": {
            "type": "array",
            "description": "The list of references to `OrderReturnTax` entities applied to the returned line item. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderReturnTax` applied to the returned line item. On reads, the amount applied\nis populated.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedTax"
            }
          },
          "applied_discounts": {
            "type": "array",
            "description": "The list of references to `OrderReturnDiscount` entities applied to the returned line item. Each\n`OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level\n`OrderReturnDiscount` applied to the returned line item. On reads, the amount\napplied is populated.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedDiscount"
            }
          },
          "base_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "variation_total_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "gross_return_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_discount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "The line item being returned in an Order.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderReturnLineItemModifier": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the return modifier only within this order."
          },
          "source_modifier_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "`uid` of the Modifier from the LineItem from the Order which contains the\noriginal sale of this line item modifier."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogModifier`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the item modifier."
          },
          "base_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_price_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "A line item modifier being returned.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderReturnServiceCharge": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the return service charge only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "source_service_charge_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "`uid` of the Service Charge from the Order containing the original\ncharge of the service charge. `source_service_charge_uid` is `null` for\nunlinked returns."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the service charge."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object ID of the associated `CatalogServiceCharge`."
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The percentage of the service charge, as a string representation of\na decimal number. For example, a value of `\"7.25\"` corresponds to a\npercentage of 7.25%.\n\nExactly one of `percentage` or `amount_money` should be set."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "calculation_phase": {
            "type": "string",
            "description": "The calculation phase after which to apply the service charge.\nSee [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values",
            "x-read-only": true
          },
          "taxable": {
            "type": "boolean",
            "description": "Indicates whether the surcharge can be taxed. Service charges\ncalculated in the `TOTAL_PHASE` cannot be marked as taxable."
          },
          "applied_taxes": {
            "type": "array",
            "description": "The list of references to `OrderReturnTax` entities applied to the\n`OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`\nthat references the `uid` of a top-level `OrderReturnTax` that is being\napplied to the `OrderReturnServiceCharge`. On reads, the amount applied is\npopulated.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedTax"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Represents the service charge applied to the original order.",
        "x-release-status": "PUBLIC"
      },
      "OrderReturnTax": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the return tax only within this order."
          },
          "source_tax_uid": {
            "maxLength": 60,
            "type": "string",
            "description": "`uid` of the Tax from the Order which contains the original charge of this tax."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object id referencing `CatalogTax`."
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The tax's name."
          },
          "type": {
            "type": "string",
            "description": "Indicates the calculation method used to apply the tax.\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values"
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The percentage of the tax, as a string representation of a decimal number.\nFor example, a value of `\"7.25\"` corresponds to a percentage of 7.25%."
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "scope": {
            "type": "string",
            "description": "Indicates the level at which the `OrderReturnTax` applies. For `ORDER` scoped\ntaxes, Square generates references in `applied_taxes` on all\n`OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax will only apply to\n`OrderReturnLineItem`s with references in their `applied_discounts` field.\nSee [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible values"
          }
        },
        "description": "Represents a tax being returned that applies to one or more return line items in an order.\n\nFixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.\nThe amount distributed to each return line item is relative to that item’s contribution to the\norder subtotal.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderReward": {
        "required": [
          "id",
          "reward_tier_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the reward."
          },
          "reward_tier_id": {
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the reward tier corresponding to this reward."
          }
        },
        "description": "Represents a reward that may be applied to an order if the necessary\nreward tier criteria are met. Rewards are created through the Loyalty API.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderRoundingAdjustment": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the rounding adjustment only within this order."
          },
          "name": {
            "type": "string",
            "description": "The name of the rounding adjustment from the original sale Order."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "A rounding adjustment of the money being returned. Commonly used to apply Cash Rounding\nwhen the minimum unit of account is smaller than the lowest physical denomination of currency.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderServiceCharge": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 60,
            "type": "string",
            "description": "Unique ID that identifies the service charge only within this order.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "The name of the service charge."
          },
          "catalog_object_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The catalog object ID referencing the service charge `CatalogObject`."
          },
          "percentage": {
            "maxLength": 10,
            "type": "string",
            "description": "The service charge percentage as a string representation of a\ndecimal number. For example, `\"7.25\"` indicates a service charge of 7.25%.\n\nExactly 1 of `percentage` or `amount_money` should be set."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "applied_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/Money"
          },
          "calculation_phase": {
            "type": "string",
            "description": "The calculation phase at which to apply the service charge.\nSee [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values"
          },
          "taxable": {
            "type": "boolean",
            "description": "Indicates whether the service charge can be taxed. If set to `true`,\norder-level taxes automatically apply to the service charge. Note that\nservice charges calculated in the `TOTAL_PHASE` cannot be marked as taxable."
          },
          "applied_taxes": {
            "type": "array",
            "description": "The list of references to taxes applied to this service charge. Each\n`OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level\n`OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied\nis populated.\n\nAn `OrderLineItemAppliedTax` will be automatically created on every taxable service charge\nfor all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records\nfor `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable\nservice charge.  Taxable service charges have the `taxable` field set to true and calculated\nin the `SUBTOTAL_PHASE`.\n\nTo change the amount of a tax, modify the referenced top-level tax.",
            "items": {
              "$ref": "#/components/schemas/OrderLineItemAppliedTax"
            },
            "x-is-beta": true,
            "x-release-status": "BETA"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-defined data attached to this service charge. Metadata fields are intended\nto store descriptive references or associations with an entity in another system or store brief\ninformation about the object. Square does not process this field; it only stores and returns it\nin relevant API calls. Do not use metadata to store any sensitive information (personally\nidentifiable information, card details, etc.).\n\nKeys written by applications must be 60 characters or less and must be in the character set\n`[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed\nwith a namespace, separated from the key with a ':' character.\n\nValues have a max length of 255 characters.\n\nAn application may have up to 10 entries per metadata field.\n\nEntries written by applications are private and can only be read or modified by the same\napplication.\n\nSee [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Represents a service charge applied to an order.",
        "x-release-status": "PUBLIC"
      },
      "OrderSource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name used to identify the place (physical or digital) that an order originates.\nIf unset, the name defaults to the name of the application that created the order."
          }
        },
        "description": "Represents the origination details of an order.",
        "x-release-status": "PUBLIC"
      },
      "OrderUpdated": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The order's unique ID."
          },
          "version": {
            "type": "integer",
            "description": "Version number which is incremented each time an update is committed to the order.\nOrders that were not created through the API will not include a version and\nthus cannot be updated.\n\n[Read more about working with versions](https://developer.squareup.com/docs/docs/orders-api/manage-orders#update-orders)"
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the merchant location this order is associated with."
          },
          "state": {
            "type": "string",
            "description": "The state of the order.\nSee [OrderState](#type-orderstate) for possible values"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp for when the order was created in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp for when the order was last updated in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "OrderUpdatedObject": {
        "type": "object",
        "properties": {
          "order_updated": {
            "$ref": "#/components/schemas/OrderUpdated"
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "PayOrderRequest": {
        "required": [
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 192,
            "minLength": 1,
            "type": "string",
            "description": "A value you specify that uniquely identifies this request among requests you've sent. If\nyou're unsure whether a particular payment request was completed successfully, you can reattempt\nit with the same idempotency key without worrying about duplicate payments.\n\nSee [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency) for more information."
          },
          "order_version": {
            "type": "integer",
            "description": "The version of the order being paid. If not supplied, the latest version will be paid."
          },
          "payment_ids": {
            "type": "array",
            "description": "The IDs of the `payments` to collect.\nThe payment total must match the order total.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Defines the fields that are included in requests to the\n[PayOrder](#endpoint-payorder) endpoint.",
        "example": {
          "request_body": {
            "idempotency_key": "c043a359-7ad9-4136-82a9-c3f1d66dcbff",
            "payment_ids": [
              "EnZdNAlWCmfh6Mt5FMNST1o7taB",
              "0LRiVlbXVwe8ozu4KbZxd12mvaB"
            ]
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "PayOrderResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          }
        },
        "description": "Defines the fields that are included in the response body of a request to the\n[PayOrder](#endpoint-payorder) endpoint.",
        "example": {
          "order": {
            "id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
            "location_id": "P3CCK6HSNDAS7",
            "line_items": [
              {
                "uid": "QW6kofLHJK7JEKMjlSVP5C",
                "quantity": "1",
                "name": "Item 1",
                "base_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 500,
                  "currency": "USD"
                }
              },
              {
                "uid": "zhw8MNfRGdFQMI2WE1UBJD",
                "quantity": "2",
                "name": "Item 2",
                "base_price_money": {
                  "amount": 750,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1500,
                  "currency": "USD"
                }
              }
            ],
            "created_at": "2019-08-06T02:47:35.693Z",
            "updated_at": "2019-08-06T02:47:37.140Z",
            "version": 4,
            "total_tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "closed_at": "2019-08-06T02:47:37.140Z",
            "tenders": [
              {
                "id": "EnZdNAlWCmfh6Mt5FMNST1o7taB",
                "location_id": "P3CCK6HSNDAS7",
                "transaction_id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
                "created_at": "2019-08-06T02:47:36.293Z",
                "amount_money": {
                  "amount": 1000,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111",
                    "exp_month": 2,
                    "exp_year": 2022,
                    "fingerprint": "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ"
                  },
                  "entry_method": "KEYED"
                },
                "payment_id": "EnZdNAlWCmfh6Mt5FMNST1o7taB"
              },
              {
                "id": "0LRiVlbXVwe8ozu4KbZxd12mvaB",
                "location_id": "P3CCK6HSNDAS7",
                "transaction_id": "lgwOlEityYPJtcuvKTVKT1pA986YY",
                "created_at": "2019-08-06T02:47:36.809Z",
                "amount_money": {
                  "amount": 1000,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111",
                    "exp_month": 2,
                    "exp_year": 2022,
                    "fingerprint": "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ"
                  },
                  "entry_method": "KEYED"
                },
                "payment_id": "0LRiVlbXVwe8ozu4KbZxd12mvaB"
              }
            ],
            "total_service_charge_money": {
              "amount": 0,
              "currency": "USD"
            },
            "net_amounts": {
              "total_money": {
                "amount": 2000,
                "currency": "USD"
              },
              "tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "discount_money": {
                "amount": 0,
                "currency": "USD"
              },
              "tip_money": {
                "amount": 0,
                "currency": "USD"
              },
              "service_charge_money": {
                "amount": 0,
                "currency": "USD"
              }
            },
            "source": {
              "name": "Source Name"
            },
            "state": "COMPLETED"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 192,
            "type": "string",
            "description": "A unique ID for the payment.",
            "x-read-only": true
          },
          "created_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp of when the payment was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp of when the payment was last updated, in RFC 3339 format.",
            "x-read-only": true
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "tip_money": {
            "$ref": "#/components/schemas/Money"
          },
          "total_money": {
            "$ref": "#/components/schemas/Money"
          },
          "app_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "approved_money": {
            "$ref": "#/components/schemas/Money"
          },
          "processing_fee": {
            "type": "array",
            "description": "The processing fees and fee adjustments assessed by Square for this payment.",
            "items": {
              "$ref": "#/components/schemas/ProcessingFee"
            },
            "x-read-only": true
          },
          "refunded_money": {
            "$ref": "#/components/schemas/Money"
          },
          "status": {
            "maxLength": 50,
            "type": "string",
            "description": "Indicates whether the payment is APPROVED, COMPLETED, CANCELED, or FAILED.",
            "x-read-only": true
          },
          "delay_duration": {
            "type": "string",
            "description": "The duration of time after the payment's creation when Square automatically applies the\n`delay_action` to the payment. This automatic `delay_action` applies only to payments that\ndo not reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delay_duration`\ntime period.\n\nThis field is specified as a time duration, in RFC 3339 format.\n\nNotes:\nThis feature is only supported for card payments.\n\nDefault:\n\n- Card-present payments: \"PT36H\" (36 hours) from the creation time.\n- Card-not-present payments: \"P7D\" (7 days) from the creation time.",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "delay_action": {
            "type": "string",
            "description": "The action to be applied to the payment when the `delay_duration` has elapsed. This field\nis read-only.\n\nCurrent values include `CANCEL`.",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "delayed_until": {
            "type": "string",
            "description": "The read-only timestamp of when the `delay_action` is automatically applied,\nin RFC 3339 format.\n\nNote that this field is calculated by summing the payment's `delay_duration` and `created_at`\nfields. The `created_at` field is generated by Square and might not exactly match the\ntime on your local machine.",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "source_type": {
            "maxLength": 50,
            "type": "string",
            "description": "The source type for this payment.\n\nCurrent values include `CARD`, `CASH`, or `EXTERNAL`.",
            "x-read-only": true
          },
          "card_details": {
            "$ref": "#/components/schemas/CardPaymentDetails"
          },
          "cash_details": {
            "$ref": "#/components/schemas/CashPaymentDetails"
          },
          "external_details": {
            "$ref": "#/components/schemas/ExternalPaymentDetails"
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The ID of the location associated with the payment.",
            "x-read-only": true
          },
          "order_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the order associated with the payment.",
            "x-read-only": true
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "An optional ID that associates the payment with an entity in\nanother system.",
            "x-read-only": true
          },
          "customer_id": {
            "maxLength": 191,
            "type": "string",
            "description": "The `Customer` ID of the customer associated with the payment.",
            "x-read-only": true
          },
          "employee_id": {
            "maxLength": 192,
            "type": "string",
            "description": "An optional ID of the employee associated with taking the payment.",
            "x-read-only": true
          },
          "refund_ids": {
            "type": "array",
            "description": "A list of `refund_id`s identifying refunds for the payment.",
            "items": {
              "type": "string"
            },
            "x-read-only": true
          },
          "risk_evaluation": {
            "$ref": "#/components/schemas/RiskEvaluation"
          },
          "buyer_email_address": {
            "maxLength": 255,
            "type": "string",
            "description": "The buyer's email address.",
            "x-read-only": true
          },
          "billing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "note": {
            "maxLength": 500,
            "type": "string",
            "description": "An optional note to include when creating a payment.",
            "x-read-only": true
          },
          "statement_description_identifier": {
            "type": "string",
            "description": "Additional payment information that gets added to the customer's card statement\nas part of the statement description.\n\nNote that the `statement_description_identifier` might get truncated on the statement description\nto fit the required information including the Square identifier (SQ *) and the name of the\nseller taking the payment.",
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "capabilities": {
            "type": "array",
            "description": "Actions that can be performed on this payment:\n- `EDIT_AMOUNT_UP` - The payment amount can be edited up.\n- `EDIT_AMOUNT_DOWN` - The payment amount can be edited down.\n- `EDIT_TIP_AMOUNT_UP` - The tip amount can be edited up.\n- `EDIT_TIP_AMOUNT_DOWN` - The tip amount can be edited down.",
            "items": {
              "type": "string"
            },
            "x-is-beta": true,
            "x-read-only": true,
            "x-release-status": "BETA"
          },
          "receipt_number": {
            "maxLength": 4,
            "type": "string",
            "description": "The payment's receipt number.\nThe field is missing if a payment is canceled.",
            "x-read-only": true
          },
          "receipt_url": {
            "maxLength": 255,
            "type": "string",
            "description": "The URL for the payment's receipt.\nThe field is only populated for COMPLETED payments.",
            "x-read-only": true
          },
          "version_token": {
            "type": "string",
            "description": "Used for optimistic concurrency. This opaque token identifies a specific version of the\n`Payment` object.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "Represents a payment processed by the Square API.",
        "x-release-status": "PUBLIC"
      },
      "PaymentOptions": {
        "type": "object",
        "properties": {
          "autocomplete": {
            "type": "boolean",
            "description": "Indicates whether the `Payment` objects created from this `TerminalCheckout` are automatically\n`COMPLETED` or left in an `APPROVED` state for later modification."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "PaymentRefund": {
        "required": [
          "amount_money",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The unique ID for this refund, generated by Square."
          },
          "status": {
            "maxLength": 50,
            "type": "string",
            "description": "The refund's status:\n- `PENDING` - Awaiting approval.\n- `COMPLETED` - Successfully completed.\n- `REJECTED` - The refund was rejected.\n- `FAILED` - An error occurred."
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The location ID associated with the payment this refund is attached to."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "app_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "processing_fee": {
            "type": "array",
            "description": "Processing fees and fee adjustments assessed by Square for this refund.",
            "items": {
              "$ref": "#/components/schemas/ProcessingFee"
            }
          },
          "payment_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the payment associated with this refund."
          },
          "order_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the order associated with the refund."
          },
          "reason": {
            "maxLength": 192,
            "type": "string",
            "description": "The reason for the refund."
          },
          "created_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp of when the refund was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "updated_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp of when the refund was last updated, in RFC 3339 format.",
            "x-read-only": true
          }
        },
        "description": "Represents a refund of a payment made using Square. Contains information about\nthe original payment and the amount of money refunded.",
        "x-release-status": "PUBLIC"
      },
      "ProcessingFee": {
        "type": "object",
        "properties": {
          "effective_at": {
            "type": "string",
            "description": "The timestamp of when the fee takes effect, in RFC 3339 format."
          },
          "type": {
            "type": "string",
            "description": "The type of fee assessed or adjusted. The fee type can be `INITIAL` or `ADJUSTMENT`."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents the Square processing fee.",
        "x-release-status": "PUBLIC"
      },
      "PublishInvoiceRequest": {
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "The version of the `Invoice` to publish.\nThis must match the current version of the invoice,\notherwise the request is rejected."
          },
          "idempotency_key": {
            "maxLength": 128,
            "type": "string",
            "description": "A unique string that identifies the `PublishInvoice` request. If you do not \nprovide `idempotency_key` (or provide an empty string as the value), the endpoint \ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
          }
        },
        "description": "Describes a `PublishInvoice` request.",
        "example": {
          "request_body": {
            "version": 1,
            "idempotency_key": "32da42d0-1997-41b0-826b-f09464fc2c2e"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "PublishInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `PublishInvoice` response.",
        "example": {
          "invoice": {
            "id": "gt2zv1z6mnUm1V7KMxxf3w",
            "version": 1,
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": true,
                "reminders": [
                  {
                    "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                    "relative_scheduled_days": -1,
                    "message": "Your invoice is due tomorrow",
                    "status": "PENDING"
                  }
                ],
                "computed_amount_money": {
                  "amount": 10000,
                  "currency": "USD"
                },
                "total_completed_amount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "automatic_payment_source": "NONE"
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "status": "SCHEDULED",
            "timezone": "America/Los_Angeles",
            "created_at": "2020-06-18T17:45:13Z",
            "updated_at": "2020-06-18T18:23:11Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "phone_number": "1-212-555-4240"
            },
            "custom_fields": [
              {
                "label": "Event Reference Number",
                "value": "Ref. #1234",
                "placement": "ABOVE_LINE_ITEMS"
              },
              {
                "label": "Terms of Service",
                "value": "The terms of service are...",
                "placement": "BELOW_LINE_ITEMS"
              }
            ],
            "delivery_method": "EMAIL"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Range": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "The lower bound of the number range."
          },
          "max": {
            "type": "string",
            "description": "The upper bound of the number range."
          }
        },
        "description": "The range of a number value between the specified lower and upper bounds.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RedeemLoyaltyRewardRequest": {
        "required": [
          "idempotency_key",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `RedeemLoyaltyReward` request. \nKeys can be any valid string, but must be unique for every request."
          },
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `location` where the reward is redeemed."
          }
        },
        "description": "A request to redeem a loyalty reward.",
        "example": {
          "request_params": "?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810",
          "request_body": {
            "idempotency_key": "98adc7f7-6963-473b-b29c-f3c9cdd7d994",
            "location_id": "P034NEENMD09F"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RedeemLoyaltyRewardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "event": {
            "$ref": "#/components/schemas/LoyaltyEvent"
          }
        },
        "description": "A response that includes the `LoyaltyEvent` published for redeeming the reward.",
        "example": {
          "event": {
            "id": "67377a6e-dbdc-369d-aa16-2e7ed422e71f",
            "type": "REDEEM_REWARD",
            "created_at": "2020-05-08T21:56:00Z",
            "redeem_reward": {
              "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "reward_id": "9f18ac21-233a-31c3-be77-b45840f5a810"
            },
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "location_id": "P034NEENMD09F",
            "source": "LOYALTY_API"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Refund": {
        "required": [
          "amount_money",
          "id",
          "location_id",
          "reason",
          "status",
          "tender_id",
          "transaction_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "The refund's unique ID."
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The ID of the refund's associated location."
          },
          "transaction_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the transaction that the refunded tender is part of."
          },
          "tender_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the refunded tender."
          },
          "created_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp for when the refund was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "reason": {
            "maxLength": 192,
            "type": "string",
            "description": "The reason for the refund being issued."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "status": {
            "type": "string",
            "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`).\nSee [RefundStatus](#type-refundstatus) for possible values"
          },
          "processing_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "additional_recipients": {
            "type": "array",
            "description": "Additional recipients (other than the merchant) receiving a portion of this refund.\nFor example, fees assessed on a refund of a purchase by a third party integration.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRecipient"
            }
          }
        },
        "description": "Represents a refund processed for a Square transaction.",
        "x-release-status": "PUBLIC"
      },
      "RefundPaymentRequest": {
        "required": [
          "amount_money",
          "idempotency_key",
          "payment_id"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "minLength": 1,
            "type": "string",
            "description": " A unique string that identifies this `RefundPayment` request. The key can be any valid string\nbut must be unique for every `RefundPayment` request.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency)."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "app_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "payment_id": {
            "minLength": 1,
            "type": "string",
            "description": "The unique ID of the payment being refunded."
          },
          "reason": {
            "maxLength": 192,
            "type": "string",
            "description": "A description of the reason for the refund."
          }
        },
        "description": "Describes a request to refund a payment using [RefundPayment](#endpoint-payments-refundpayment).",
        "example": {
          "request_body": {
            "idempotency_key": "a7e36d40-d24b-11e8-b568-0800200c9a66",
            "payment_id": "UNOE3kv2BZwqHlJ830RCt5YCuaB",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RefundPaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refund": {
            "$ref": "#/components/schemas/PaymentRefund"
          }
        },
        "description": "Defines the response returned by \n[RefundPayment](#endpoint-payments-refundpayment).\n\nIf there are errors processing the request, the `refund` field might not be\npresent, or it might be present with a status of `FAILED`.",
        "example": {
          "refund": {
            "id": "UNOE3kv2BZwqHlJ830RCt5YCuaB_xVteEWVFkXDvKN1ddidfJWipt8p9whmElKT5mZtJ7wZ",
            "status": "PENDING",
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "payment_id": "UNOE3kv2BZwqHlJ830RCt5YCuaB",
            "created_at": "2018-10-17T20:41:55.520Z",
            "updated_at": "2018-10-17T20:41:55.520Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RegisterDomainRequest": {
        "required": [
          "domain_name"
        ],
        "type": "object",
        "properties": {
          "domain_name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "A domain name as described in RFC-1034 that will be registered with ApplePay"
          }
        },
        "description": "Defines the parameters that can be included in the body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.",
        "example": {
          "request_body": {
            "domain_name": "example.com"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.python",
          "csharp": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.csharp",
          "java": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.java",
          "php": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.php",
          "javascript": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.javascript",
          "ruby": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainRequest.ruby"
        }
      },
      "RegisterDomainResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the domain registration.\n\nSee `RegisterDomainResponseStatus` for possible values.\nSee [RegisterDomainResponseStatus](#type-registerdomainresponsestatus) for possible values"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [RegisterDomain](#endpoint-registerdomain) endpoint.\n\nEither `errors` or `status` are present in a given response (never both).",
        "example": {
          "status": "VERIFIED"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.python",
          "csharp": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.csharp",
          "java": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.java",
          "php": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.php",
          "javascript": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.javascript",
          "ruby": "/sdk_samples/ApplePay/RegisterDomain/RegisterDomainResponse.ruby"
        }
      },
      "RemoveDisputeEvidenceRequest": {
        "type": "object",
        "description": "Defines the parameters for a `RemoveDisputeEvidence` request.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RemoveDisputeEvidenceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields in a `RemoveDisputeEvidence` response.",
        "example": {},
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RemoveGroupFromCustomerRequest": {
        "type": "object",
        "description": "Defines the fields that are included in the request body of\na request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer) endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RemoveGroupFromCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [RemoveGroupFromCustomer](#endpoint-removegroupfromcustomer)\nendpoint.",
        "example": {},
        "x-release-status": "PUBLIC"
      },
      "RenewTokenRequest": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The token you want to renew."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "access_token": "ACCESS_TOKEN"
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RenewToken/RenewTokenRequest.python",
          "csharp": "/sdk_samples/RenewToken/RenewTokenRequest.csharp",
          "java": "/sdk_samples/RenewToken/RenewTokenRequest.java",
          "php": "/sdk_samples/RenewToken/RenewTokenRequest.php",
          "javascript": "/sdk_samples/RenewToken/RenewTokenRequest.javascript",
          "ruby": "/sdk_samples/RenewToken/RenewTokenRequest.ruby"
        }
      },
      "RenewTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The renewed access token.\nThis value might be different from the `access_token` you provided in your request.\nYou provide this token in a header with every request to Connect API endpoints.\nSee [Request and response headers](https://developer.squareup.com/docs/api/connect/v2/#requestandresponseheaders) for the format of this header."
          },
          "token_type": {
            "type": "string",
            "description": "This value is always _bearer_."
          },
          "expires_at": {
            "type": "string",
            "description": "The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."
          },
          "merchant_id": {
            "type": "string",
            "description": "The ID of the authorizing merchant's business."
          },
          "subscription_id": {
            "type": "string",
            "description": "__LEGACY FIELD__. The ID of the merchant subscription associated with\nthe authorization. Only present if the merchant signed up for a subscription\nduring authorization.."
          },
          "plan_id": {
            "type": "string",
            "description": "__LEGACY FIELD__. The ID of the subscription plan the merchant signed\nup for. Only present if the merchant signed up for a subscription during\nauthorization."
          }
        },
        "description": "",
        "example": {
          "access_token": "ACCESS_TOKEN",
          "token_type": "bearer",
          "expires_at": "2006-01-02T15:04:05Z",
          "merchant_id": "MERCHANT_ID"
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RenewToken/RenewTokenResponse.python",
          "csharp": "/sdk_samples/RenewToken/RenewTokenResponse.csharp",
          "java": "/sdk_samples/RenewToken/RenewTokenResponse.java",
          "php": "/sdk_samples/RenewToken/RenewTokenResponse.php",
          "javascript": "/sdk_samples/RenewToken/RenewTokenResponse.javascript",
          "ruby": "/sdk_samples/RenewToken/RenewTokenResponse.ruby"
        }
      },
      "RetrieveBookingRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "booking": {
            "id": "zkras0xv0xwswx",
            "version": 1,
            "status": "ACCEPTED",
            "created_at": "2020-10-28T15:47:41Z",
            "updated_at": "2020-10-28T15:49:25Z",
            "location_id": "LEQHH0YY8B42M",
            "customer_id": "EX2QSVGTZN4K1E5QE1CBFNVQ8M",
            "customer_note": "",
            "seller_note": "",
            "start_at": "2020-11-26T13:00:00Z",
            "appointment_segments": [
              {
                "duration_minutes": 60,
                "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                "team_member_id": "TMXUrsBWWcHTt79t",
                "service_variation_version": 1599775456731
              }
            ]
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveBusinessBookingProfileRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveBusinessBookingProfileResponse": {
        "type": "object",
        "properties": {
          "business_booking_profile": {
            "$ref": "#/components/schemas/BusinessBookingProfile"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "business_booking_profile": {
            "seller_id": "MLJQYZZRM0D3Y",
            "created_at": "2020-09-10T21:40:38Z",
            "booking_enabled": true,
            "customer_timezone_choice": "CUSTOMER_CHOICE",
            "booking_policy": "ACCEPT_ALL",
            "allow_user_cancel": true,
            "business_appointment_settings": {
              "location_types": [
                "BUSINESS_LOCATION"
              ],
              "alignment_time": "HALF_HOURLY",
              "min_booking_lead_time_seconds": 0,
              "max_booking_lead_time_seconds": 31536000,
              "any_team_member_booking_enabled": true,
              "multiple_service_booking_enabled": true,
              "cancellation_fee_money": {
                "currency": "USD"
              },
              "cancellation_policy": "CUSTOM_POLICY",
              "skip_booking_flow_staff_selection": false
            }
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveCashDrawerShiftRequest": {
        "required": [
          "location_id"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the location to retrieve cash drawer shifts from."
          }
        },
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveCashDrawerShiftResponse": {
        "type": "object",
        "properties": {
          "cash_drawer_shift": {
            "$ref": "#/components/schemas/CashDrawerShift"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "cash_drawer_shift": {
            "id": "DCC99978-09A6-4926-849F-300BE9C5793A",
            "state": "CLOSED",
            "opened_at": "2019-11-22T00:42:54.000Z",
            "ended_at": "2019-11-22T00:44:49.000Z",
            "closed_at": "2019-11-22T00:44:49.000Z",
            "opening_employee_id": "",
            "ending_employee_id": "",
            "closing_employee_id": "",
            "description": "Misplaced some change",
            "opened_cash_money": {
              "amount": 10000,
              "currency": "USD"
            },
            "cash_payment_money": {
              "amount": 100,
              "currency": "USD"
            },
            "cash_refunds_money": {
              "amount": -100,
              "currency": "USD"
            },
            "cash_paid_in_money": {
              "amount": 10000,
              "currency": "USD"
            },
            "cash_paid_out_money": {
              "amount": -10000,
              "currency": "USD"
            },
            "expected_cash_money": {
              "amount": 10000,
              "currency": "USD"
            },
            "closed_cash_money": {
              "amount": 9970,
              "currency": "USD"
            },
            "device": {
              "name": "My iPad"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveCatalogObjectRequest": {
        "type": "object",
        "properties": {
          "include_related_objects": {
            "type": "boolean",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a `CatalogItem`, its associated\n`CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will\nbe returned in the `related_objects` field of the response. If the `object` field of\nthe response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned\nin the `related_objects` field of the response.\n\nDefault value: `false`"
          },
          "catalog_version": {
            "type": "integer",
            "description": "Requests objects as of a specific version of the catalog. This allows you to retrieve historical\nversions of objects. The value to retrieve a specific version of an object can be found\nin the version field of `CatalogObject`s.",
            "format": "int64",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "request_params": "?include_related_objects=true"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python",
          "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp",
          "java": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.java",
          "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php",
          "javascript": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.javascript",
          "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby"
        }
      },
      "RetrieveCatalogObjectResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "object": {
            "$ref": "#/components/schemas/CatalogObject"
          },
          "related_objects": {
            "type": "array",
            "description": "A list of `CatalogObject`s referenced by the object in the `object` field.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          }
        },
        "description": "",
        "example": {
          "object": {
            "type": "ITEM",
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878,
            "is_deleted": false,
            "present_at_all_locations": true,
            "item_data": {
              "name": "Tea",
              "description": "Hot Leaf Juice",
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "type": "ITEM_VARIATION",
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878,
                  "is_deleted": false,
                  "present_at_all_locations": true,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "pricing_type": "FIXED_PRICING",
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    }
                  }
                }
              ]
            }
          },
          "related_objects": [
            {
              "type": "CATEGORY",
              "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "category_data": {
                "name": "Beverages"
              }
            },
            {
              "type": "TAX",
              "id": "HURXQOOAIC4IZSI2BEXQRYFY",
              "updated_at": "2016-11-16T22:25:24.878Z",
              "version": 1479335124878,
              "is_deleted": false,
              "present_at_all_locations": true,
              "tax_data": {
                "name": "Sales Tax",
                "calculation_phase": "TAX_SUBTOTAL_PHASE",
                "inclusion_type": "ADDITIVE",
                "percentage": "5.0",
                "enabled": true
              }
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python",
          "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp",
          "java": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.java",
          "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php",
          "javascript": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.javascript",
          "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby"
        }
      },
      "RetrieveCustomerGroupRequest": {
        "type": "object",
        "description": "Defines the fields that can be provided in a request to the\n[RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveCustomerGroupResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomerGroup](#endpoint-retrievecustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
        "example": {
          "group": {
            "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
            "name": "Loyal Customers",
            "created_at": "2020-04-13T21:54:57.863Z",
            "updated_at": "2020-04-13T21:54:58Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveCustomerRequest": {
        "type": "object",
        "description": "Defines the fields that are included in requests to the RetrieveCustomer\nendpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python",
          "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp",
          "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.java",
          "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php",
          "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.javascript",
          "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby"
        }
      },
      "RetrieveCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the RetrieveCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
        "example": {
          "customer": {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-23T20:21:54.859Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "a customer",
            "groups": [
              {
                "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                "name": "Aviation Enthusiasts"
              },
              {
                "id": "1KB9JE5EGJXCW.REACHABLE",
                "name": "Reachable"
              }
            ],
            "group_ids": [
              "545AXB44B4XXWMVQ4W8SBT3HHF"
            ],
            "segment_ids": [
              "1KB9JE5EGJXCW.REACHABLE"
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python",
          "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp",
          "java": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.java",
          "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php",
          "javascript": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.javascript",
          "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby"
        }
      },
      "RetrieveCustomerSegmentRequest": {
        "type": "object",
        "description": "Defines the valid parameters for requests to __RetrieveCustomerSegmentRequest__.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveCustomerSegmentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "segment": {
            "$ref": "#/components/schemas/CustomerSegment"
          }
        },
        "description": "Defines the fields included in the response body for requests to __RetrieveCustomerSegment__.\n\nOne of `errors` or `segment` is present in a given response (never both).",
        "example": {
          "segment": {
            "id": "GMNXRZVEXNQDF.CHURN_RISK",
            "name": "Lapsed",
            "created_at": "2020-01-09T19:33:24.469Z",
            "updated_at": "2020-04-13T23:01:13Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveDisputeEvidenceRequest": {
        "type": "object",
        "description": "Defines the parameters for a `RetrieveDisputeEvidence` request.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveDisputeEvidenceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "evidence": {
            "$ref": "#/components/schemas/DisputeEvidence"
          }
        },
        "description": "Defines the fields in a `RetrieveDisputeEvidence` response.",
        "example": {
          "evidence": {
            "evidence_id": "TOomLInj6iWmP3N8qfCXrB",
            "dispute_id": "bVTprrwk0gygTLZ96VX1oB",
            "evidence_file": {
              "filename": "evidence.tiff",
              "filetype": "image/tiff"
            },
            "evidence_type": "GENERIC_EVIDENCE",
            "uploaded_at": "2018-10-18T16:01:10.000Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveDisputeRequest": {
        "type": "object",
        "description": "Defines the request parameters for the `RetrieveDispute` endpoint.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveDisputeResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "dispute": {
            "$ref": "#/components/schemas/Dispute"
          }
        },
        "description": "Defines fields in a `RetrieveDispute` response.",
        "example": {
          "dispute": {
            "dispute_id": "XDgyFu7yo1E2S5lQGGpYn",
            "amount_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "reason": "NO_KNOWLEDGE",
            "state": "LOST",
            "due_at": "2018-11-01T00:00:00.000Z",
            "disputed_payments": [
              {
                "payment_id": "6Ee10wvqhfipStz297mtUhBXvaB"
              }
            ],
            "card_brand": "VISA",
            "created_at": "2018-10-18T15:59:13.613Z",
            "updated_at": "2018-10-18T15:59:13.613Z",
            "brand_dispute_id": "100000282394"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveEmployeeRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "RetrieveEmployeeResponse": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "RetrieveInventoryAdjustmentRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.python",
          "csharp": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.csharp",
          "java": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.java",
          "php": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.php",
          "javascript": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.javascript",
          "ruby": "/sdk_samples/Inventory/RetrieveInventoryAdjustment/RetrieveInventoryAdjustmentRequest.ruby"
        }
      },
      "RetrieveInventoryAdjustmentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "adjustment": {
            "$ref": "#/components/schemas/InventoryAdjustment"
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "adjustment": {
            "id": "UDMOEO78BG6GYWA2XDRYX3KB",
            "reference_id": "4a366069-4096-47a2-99a5-0084ac879509",
            "from_state": "IN_STOCK",
            "to_state": "SOLD",
            "location_id": "C6W5YS5QM06F5",
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "quantity": "7",
            "total_price_money": {
              "amount": 4550,
              "currency": "USD"
            },
            "occurred_at": "2016-11-16T25:44:22.837Z",
            "created_at": "2016-11-17T13:02:15.142Z",
            "source": {
              "product": "SQUARE_POS",
              "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
              "name": "Square Point of Sale 4.37"
            },
            "employee_id": "LRK57NSQ5X7PUD05"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveInventoryChangesRequest": {
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "string",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "request_params": "?location_ids=&cursor="
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.python",
          "csharp": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.csharp",
          "java": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.java",
          "php": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.php",
          "javascript": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.javascript",
          "ruby": "/sdk_samples/Inventory/RetrieveInventoryChanges/RetrieveInventoryChangesRequest.ruby"
        }
      },
      "RetrieveInventoryChangesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "changes": {
            "type": "array",
            "description": "The set of inventory changes for the requested object and locations.",
            "items": {
              "$ref": "#/components/schemas/InventoryChange"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "changes": [
            {
              "type": "ADJUSTMENT",
              "adjustment": {
                "id": "OJKJIUANKLMLQANZADNPLKAD",
                "reference_id": "d8207693-168f-4b44-a2fd-a7ff533ddd26",
                "from_state": "IN_STOCK",
                "to_state": "SOLD",
                "location_id": "C6W5YS5QM06F5",
                "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
                "catalog_object_type": "ITEM_VARIATION",
                "quantity": "3",
                "total_price_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "occurred_at": "2016-11-16T22:25:24.878Z",
                "created_at": "2016-11-16T22:25:24.878Z",
                "source": {
                  "product": "SQUARE_POS",
                  "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
                  "name": "Square Point of Sale 4.37"
                },
                "employee_id": "AV7YRCGI2H1J5NQ8E1XIZCNA",
                "transaction_id": "5APV6JYK1SNCZD11AND2RX1Z"
              }
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveInventoryCountRequest": {
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "string",
            "description": "The `Location` IDs to look up as a comma-separated\nlist. An empty list queries all locations."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "request_params": "?location_ids=C6W5YS5QM06F5&cursor="
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.python",
          "csharp": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.csharp",
          "java": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.java",
          "php": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.php",
          "javascript": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.javascript",
          "ruby": "/sdk_samples/Inventory/RetrieveInventoryCount/RetrieveInventoryCountRequest.ruby"
        }
      },
      "RetrieveInventoryCountResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "counts": {
            "type": "array",
            "description": "The current calculated inventory counts for the requested object and\nlocations.",
            "items": {
              "$ref": "#/components/schemas/InventoryCount"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\n\nSee the [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) guide for more information."
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "counts": [
            {
              "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
              "catalog_object_type": "ITEM_VARIATION",
              "state": "IN_STOCK",
              "location_id": "C6W5YS5QM06F5",
              "quantity": "22",
              "calculated_at": "2016-11-16T22:28:01.223Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveInventoryPhysicalCountRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.python",
          "csharp": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.csharp",
          "java": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.java",
          "php": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.php",
          "javascript": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.javascript",
          "ruby": "/sdk_samples/Inventory/RetrieveInventoryPhysicalCount/RetrieveInventoryPhysicalCountRequest.ruby"
        }
      },
      "RetrieveInventoryPhysicalCountResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "count": {
            "$ref": "#/components/schemas/InventoryPhysicalCount"
          }
        },
        "description": "",
        "example": {
          "errors": [],
          "count": {
            "id": "ANZADNPLKADOJKJIUANKLMLQ",
            "reference_id": "f857ec37-f9a0-4458-8e23-5b5e0bea4e53",
            "catalog_object_id": "W62UWFY35CWMYGVWK6TWJDNI",
            "catalog_object_type": "ITEM_VARIATION",
            "state": "IN_STOCK",
            "location_id": "C6W5YS5QM06F5",
            "quantity": "15",
            "source": {
              "product": "SQUARE_POS",
              "application_id": "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
              "name": "Square Point of Sale 4.37"
            },
            "employee_id": "LRK57NSQ5X7PUD05",
            "occurred_at": "2016-11-16T22:25:24.878Z",
            "created_at": "2016-11-16T22:25:24.878Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveLocationRequest": {
        "type": "object",
        "description": "Defines the fields that are included in the request body for\nthe __RetrieveLocation__ endpoint.",
        "example": {},
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.python",
          "csharp": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.csharp",
          "java": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.java",
          "php": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.php",
          "javascript": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.javascript",
          "ruby": "/sdk_samples/RetrieveLocation/RetrieveLocationRequest.ruby"
        }
      },
      "RetrieveLocationResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Defines the fields that the\n[RetrieveLocation](#endpoint-retrievelocation) endpoint returns\nin a response.",
        "example": {
          "location": {
            "id": "18YC4JDH91E1H",
            "name": "Jet Fuel Coffee - Grant Park",
            "address": {
              "address_line_1": "123 Main St",
              "locality": "San Francisco",
              "administrative_district_level_1": "CA",
              "postal_code": "94114",
              "country": "US"
            },
            "timezone": "America/Los_Angeles",
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "status": "ACTIVE",
            "created_at": "2016-09-19T17:33:12Z",
            "merchant_id": "3MYCJG5GVYQ8Q",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "phone_number": "+1 650-354-7217",
            "business_name": "Jet Fuel Coffee"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.python",
          "csharp": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.csharp",
          "java": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.java",
          "php": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.php",
          "javascript": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.javascript",
          "ruby": "/sdk_samples/RetrieveLocation/RetrieveLocationResponse.ruby"
        }
      },
      "RetrieveLoyaltyAccountRequest": {
        "type": "object",
        "description": "A request to retrieve a loyalty account.",
        "example": {
          "request_params": "?account_id=79b807d2-d786-46a9-933b-918028d7a8c5"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveLoyaltyAccountResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "loyalty_account": {
            "$ref": "#/components/schemas/LoyaltyAccount"
          }
        },
        "description": "A response that includes the loyalty account.",
        "example": {
          "loyalty_account": {
            "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
            "mappings": [
              {
                "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
                "type": "PHONE",
                "value": "+14155551234",
                "created_at": "2020-05-08T21:44:32Z"
              }
            ],
            "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
            "balance": 10,
            "lifetime_points": 20,
            "customer_id": "Q8002FAM9V1EZ0ADB2T5609X6NET1H0",
            "created_at": "2020-05-08T21:44:32Z",
            "updated_at": "2020-05-08T21:44:32Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveLoyaltyRewardRequest": {
        "type": "object",
        "description": "A request to retrieve a loyalty reward.",
        "example": {
          "request_params": "?reward_id=9f18ac21-233a-31c3-be77-b45840f5a810"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveLoyaltyRewardResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "reward": {
            "$ref": "#/components/schemas/LoyaltyReward"
          }
        },
        "description": "A response that includes the loyalty reward.",
        "example": {
          "reward": {
            "id": "9f18ac21-233a-31c3-be77-b45840f5a810",
            "status": "REDEEMED",
            "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
            "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
            "points": 10,
            "created_at": "2020-05-08T21:55:42Z",
            "updated_at": "2020-05-08T21:56:00Z",
            "redeemed_at": "2020-05-08T21:56:00Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveMerchantRequest": {
        "type": "object",
        "description": "Request object for the [RetrieveMerchant](#endpoint-retrievemerchant) endpoint.",
        "x-release-status": "PUBLIC"
      },
      "RetrieveMerchantResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "merchant": {
            "$ref": "#/components/schemas/Merchant"
          }
        },
        "description": "The response object returned by the [RetrieveMerchant](#endpoint-retrieveMerchant) endpoint.",
        "example": {
          "merchant": {
            "id": "DM7VKY8Q63GNP",
            "business_name": "Apple A Day",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "status": "ACTIVE",
            "main_location_id": "9A65CGC72ZQG1"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveObsMigrationProfileRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveObsMigrationProfileResponse": {
        "type": "object",
        "properties": {
          "banner_enabled": {
            "type": "boolean",
            "description": "Indicates whether the seller has enabled the COVID banner (`true`) or not (`false`)."
          },
          "banner_text": {
            "type": "string",
            "description": "The text appearing on the COVID banner."
          },
          "banner_cta_text": {
            "type": "string",
            "description": "The text of the label of the CTA button beneath the banner."
          },
          "banner_cta_url": {
            "type": "string",
            "description": "The URL to link to when the CTA button is clicked."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveOrderRequest": {
        "type": "object",
        "description": "",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveOrderResponse": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "order": {
            "id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "location_id": "D7AVYMEAPJ3A3",
            "line_items": [
              {
                "uid": "ULkg0tQTRK2bkU9fNv3IJD",
                "quantity": "1",
                "name": "Item 1",
                "base_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 250,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 250,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "applied_discounts": [
                  {
                    "uid": "9zr9S4dxvPAixvn0lpa1VC",
                    "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                    "applied_money": {
                      "amount": 250,
                      "currency": "USD"
                    }
                  }
                ]
              },
              {
                "uid": "mumY8Nun4BC5aKe2yyx5a",
                "quantity": "2",
                "name": "Item 2",
                "base_price_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 600,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "total_discount_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 300,
                  "currency": "USD"
                },
                "variation_total_price_money": {
                  "amount": 600,
                  "currency": "USD"
                },
                "applied_discounts": [
                  {
                    "uid": "qa8LwwZK82FgSEkQc2HYVC",
                    "discount_uid": "zGsRZP69aqSSR9lq9euSPB",
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "discounts": [
              {
                "uid": "zGsRZP69aqSSR9lq9euSPB",
                "name": "50% Off",
                "percentage": "50",
                "applied_money": {
                  "amount": 550,
                  "currency": "USD"
                },
                "type": "FIXED_PERCENTAGE",
                "scope": "ORDER"
              }
            ],
            "created_at": "2020-05-18T16:30:49.614Z",
            "updated_at": "2020-05-18T16:30:49.614Z",
            "state": "OPEN",
            "version": 1,
            "total_tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_discount_money": {
              "amount": 550,
              "currency": "USD"
            },
            "total_tip_money": {
              "amount": 0,
              "currency": "USD"
            },
            "total_money": {
              "amount": 550,
              "currency": "USD"
            },
            "total_service_charge_money": {
              "amount": 0,
              "currency": "USD"
            },
            "net_amounts": {
              "total_money": {
                "amount": 550,
                "currency": "USD"
              },
              "tax_money": {
                "amount": 0,
                "currency": "USD"
              },
              "discount_money": {
                "amount": 550,
                "currency": "USD"
              },
              "tip_money": {
                "amount": 0,
                "currency": "USD"
              },
              "service_charge_money": {
                "amount": 0,
                "currency": "USD"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveSubscriptionRequest": {
        "type": "object",
        "description": "Defines parameters in a \n[RetrieveSubscription](#endpoint-subscriptions-retrievesubscription) endpoint request.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveSubscriptionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "description": "Defines the fields that are included in the response from the\n[RetrieveSubscription](#endpoint-subscriptions-retrievesubscription) endpoint.",
        "example": {
          "subscription": {
            "id": "8151fc89-da15-4eb9-a685-1a70883cebfc",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "start_date": "2020-05-11",
            "charged_through_date": "2020-06-11",
            "status": "ACTIVE",
            "invoice_ids": [
              "grebK0Q_l8H4fqoMMVvt-Q",
              "rcX_i3sNmHTGKhI4W2mceA"
            ],
            "price_override_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "created_at": "2020-08-03T21:53:10Z",
            "paid_until_date": "2020-06-11",
            "timezone": "America/Los_Angeles"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveTeamMemberBookingProfileRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveTeamMemberBookingProfileResponse": {
        "type": "object",
        "properties": {
          "team_member_booking_profile": {
            "$ref": "#/components/schemas/TeamMemberBookingProfile"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "team_member_booking_profile": {
            "team_member_id": "TMaJcbiRqPIGZuS9",
            "display_name": "Sandbox Staff",
            "is_bookable": true
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "RetrieveTeamMemberRequest": {
        "type": "object",
        "description": "Represents a retrieve request for a `TeamMember` object.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveTeamMemberResponse": {
        "type": "object",
        "properties": {
          "team_member": {
            "$ref": "#/components/schemas/TeamMember"
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a retrieve request, containing a `TeamMember` object or error messages.",
        "example": {
          "team_member": {
            "id": "1yJlHapkseYnNPETIU1B",
            "reference_id": "reference_id_1",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Joe",
            "family_name": "Doe",
            "email_address": "joe_doe@gmail.com",
            "phone_number": "+14159283333",
            "created_at": "2020-06-11T22:55:45.867Z",
            "updated_at": "2020-06-11T22:55:45.867Z",
            "assigned_locations": {
              "assignment_type": "EXPLICIT_LOCATIONS",
              "location_ids": [
                "GA2Y9HSJ8KRYT",
                "YSGH2WBKG94QZ"
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveTransactionRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python",
          "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp",
          "java": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.java",
          "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php",
          "javascript": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.javascript",
          "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby"
        }
      },
      "RetrieveTransactionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
        "example": {
          "transaction": {
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "created_at": "2016-03-10T22:57:56Z",
            "tenders": [
              {
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "created_at": "2016-03-10T22:57:56Z",
                "note": "some optional note",
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "type": "CARD",
                "card_details": {
                  "status": "CAPTURED",
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED"
                },
                "additional_recipients": [
                  {
                    "location_id": "057P5VYJ4A5X1",
                    "description": "Application fees",
                    "amount_money": {
                      "amount": 20,
                      "currency": "USD"
                    }
                  }
                ]
              }
            ],
            "reference_id": "some optional reference id",
            "product": "EXTERNAL_API"
          }
        },
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python",
          "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp",
          "java": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.java",
          "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php",
          "javascript": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.javascript",
          "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby"
        }
      },
      "RetrieveWageSettingRequest": {
        "type": "object",
        "description": "Represents a retrieve request for the wage setting of a team member",
        "example": {
          "request_body": {}
        },
        "x-release-status": "PUBLIC"
      },
      "RetrieveWageSettingResponse": {
        "type": "object",
        "properties": {
          "wage_setting": {
            "$ref": "#/components/schemas/WageSetting"
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a retrieve request, containing the specified `WageSetting` object or error messages.",
        "example": {
          "wage_setting": {
            "team_member_id": "1yJlHapkseYnNPETIU1B",
            "job_assignments": [
              {
                "job_title": "Manager",
                "pay_type": "SALARY",
                "hourly_rate": {
                  "amount": 2164,
                  "currency": "USD"
                },
                "annual_rate": {
                  "amount": 4500000,
                  "currency": "USD"
                },
                "weekly_hours": 40
              }
            ],
            "is_overtime_exempt": false,
            "version": 1,
            "created_at": "2020-06-11T23:01:21+00:00",
            "updated_at": "2020-06-11T23:01:21+00:00"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "RevokeTokenRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The Square issued ID for your application, available from the\n[application dashboard](https://connect.squareup.com/apps)."
          },
          "access_token": {
            "type": "string",
            "description": "The access token of the merchant whose token you want to revoke.\nDo not provide a value for merchant_id if you provide this parameter."
          },
          "merchant_id": {
            "type": "string",
            "description": "The ID of the merchant whose token you want to revoke.\nDo not provide a value for access_token if you provide this parameter."
          },
          "revoke_only_access_token": {
            "type": "boolean",
            "description": "If `true`, terminate the given single access token, but do not\nterminate the entire authorization.\nDefault: `false`"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "access_token": "ACCESS_TOKEN",
            "client_id": "CLIENT_ID"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RevokeToken/RevokeTokenRequest.python",
          "csharp": "/sdk_samples/RevokeToken/RevokeTokenRequest.csharp",
          "java": "/sdk_samples/RevokeToken/RevokeTokenRequest.java",
          "php": "/sdk_samples/RevokeToken/RevokeTokenRequest.php",
          "javascript": "/sdk_samples/RevokeToken/RevokeTokenRequest.javascript",
          "ruby": "/sdk_samples/RevokeToken/RevokeTokenRequest.ruby"
        }
      },
      "RevokeTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "If the request is successful, this is true."
          }
        },
        "description": "",
        "example": {
          "success": true
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/RevokeToken/RevokeTokenResponse.python",
          "csharp": "/sdk_samples/RevokeToken/RevokeTokenResponse.csharp",
          "java": "/sdk_samples/RevokeToken/RevokeTokenResponse.java",
          "php": "/sdk_samples/RevokeToken/RevokeTokenResponse.php",
          "javascript": "/sdk_samples/RevokeToken/RevokeTokenResponse.javascript",
          "ruby": "/sdk_samples/RevokeToken/RevokeTokenResponse.ruby"
        }
      },
      "RiskEvaluation": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "description": "The timestamp when payment risk was evaluated, in RFC 3339 format.",
            "x-read-only": true
          },
          "risk_level": {
            "type": "string",
            "description": "The risk level associated with the payment\nSee [RiskEvaluationRiskLevel](#type-riskevaluationrisklevel) for possible values"
          }
        },
        "description": "Represents fraud risk information for the associated payment.\n\nWhen you take a payment through Square's Payments API (using the `CreatePayment`\nendpoint), Square evaluates it and assigns a risk level to the payment. Sellers\ncan use this information to determine the course of action (for example,\nprovide the goods/services or refund the payment).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchAvailabilityFilter": {
        "required": [
          "start_at_range"
        ],
        "type": "object",
        "properties": {
          "start_at_range": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "location_id": {
            "type": "string",
            "description": "The query expression to search for availabilities matching the specified seller location IDs.\nThis query expression is not applicable when `booking_id` is present."
          },
          "segment_filters": {
            "type": "array",
            "description": "The list of segment filters to apply. A query with `n` segment filters returns availabilities with `n` segments per\navailability. It is not applicable when `booking_id` is present.",
            "items": {
              "$ref": "#/components/schemas/SegmentFilter"
            }
          },
          "booking_id": {
            "type": "string",
            "description": "The query expression to search for availabilities for an existing booking by matching the specified `booking_id` value.\nThis is commonly used to reschedule an appointment.\nIf this expression is specified, the `location_id` and `segment_filters` expressions are not allowed."
          }
        },
        "description": "A query filter to search for availabilities by.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchAvailabilityQuery": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SearchAvailabilityFilter"
          }
        },
        "description": "Query conditions to search for availabilities of bookings.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchAvailabilityRequest": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/SearchAvailabilityQuery"
          }
        },
        "description": "",
        "example": {
          "query": {
            "filter": {
              "start_at_range": {
                "start_at": "2020-11-26T13:00:00Z",
                "end_at": "2020-11-27T13:00:00Z"
              },
              "location_id": "LEQHH0YY8B42M",
              "segment_filters": [
                {
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "team_member_id_filter": {
                    "any": [
                      "TMXUrsBWWcHTt79t",
                      "TMaJcbiRqPIGZuS9"
                    ]
                  }
                }
              ]
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchAvailabilityResponse": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "description": "List of slots available for booking.",
            "items": {
              "$ref": "#/components/schemas/Availability"
            }
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "availabilities": [
            {
              "start_at": "2020-11-26T13:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T13:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T14:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T14:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T15:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T15:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-26T16:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T09:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T09:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T10:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T10:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T11:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T11:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T12:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T12:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T13:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T13:30:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMXUrsBWWcHTt79t",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            },
            {
              "start_at": "2020-11-27T14:00:00Z",
              "location_id": "LEQHH0YY8B42M",
              "appointment_segments": [
                {
                  "duration_minutes": 60,
                  "team_member_id": "TMaJcbiRqPIGZuS9",
                  "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                  "service_variation_version": 1599775456731
                }
              ]
            }
          ],
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchCatalogItemsRequest": {
        "type": "object",
        "properties": {
          "text_filter": {
            "type": "string",
            "description": "The text filter expression to return items or item variations containing specified text in\nthe `name`, `description`, or `abbreviation` attribute value of an item, or in\nthe `name`, `sku`, or `upc` attribute value of an item variation."
          },
          "category_ids": {
            "type": "array",
            "description": "The category id query expression to return items containing the specified category IDs.",
            "items": {
              "type": "string"
            }
          },
          "stock_levels": {
            "type": "array",
            "description": "The stock-level query expression to return item variations with the specified stock levels.\nSee [SearchCatalogItemsRequestStockLevel](#type-searchcatalogitemsrequeststocklevel) for possible values",
            "items": {
              "type": "string"
            }
          },
          "enabled_location_ids": {
            "type": "array",
            "description": "The enabled-location query expression to return items and item variations having specified enabled locations.",
            "items": {
              "type": "string"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination token, returned in the previous response, used to fetch the next batch of pending results."
          },
          "limit": {
            "maximum": 100,
            "type": "integer",
            "description": "The maximum number of results to return per page. The default value is 100."
          },
          "sort_order": {
            "type": "string",
            "description": "The order to sort the results by item names. The default sort order is ascending (`ASC`).\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "product_types": {
            "type": "array",
            "description": "The product types query expression to return items or item variations having the specified product types.\nSee [CatalogItemProductType](#type-catalogitemproducttype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "custom_attribute_filters": {
            "type": "array",
            "description": "The customer-attribute filter to return items or item variations matching the specified\ncustom attribute expressions. A maximum number of 10 custom attribute expressions are supported in\na single call to the `SearchCatalogItems` endpoint.",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeFilter"
            }
          }
        },
        "description": "Defines the request body for the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) endpoint.",
        "example": {
          "request_body": {
            "sort_order": "ASC",
            "product_types": [
              "REGULAR"
            ],
            "category_ids": [
              "WINE_CATEGORY_ID"
            ],
            "enabled_location_ids": [
              "ATL_LOCATION_ID"
            ],
            "text_filter": "red",
            "custom_attribute_filters": [
              {
                "custom_attribute_definition_id": "VEGAN_DEFINITION_ID",
                "bool_filter": true
              },
              {
                "custom_attribute_definition_id": "BRAND_DEFINITION_ID",
                "string_filter": "Dark Horse"
              },
              {
                "key": "VINTAGE",
                "number_filter": {
                  "min": 2017,
                  "max": 2018
                }
              },
              {
                "custom_attribute_definition_id": "VARIETAL_DEFINITION_ID",
                "selection_ids_filter": "MERLOT_SELECTION_ID"
              }
            ],
            "stock_levels": [
              "OUT",
              "LOW"
            ],
            "limit": 100
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchCatalogItemsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "items": {
            "type": "array",
            "description": "Returned items matching the specified query expressions.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Pagination token used in the next request to return more of the search result."
          },
          "matched_variation_ids": {
            "type": "array",
            "description": "Ids of returned item variations matching the specified query expression.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Defines the response body returned from the [SearchCatalogItems](#endpoint-Catalog-SearchCatalogItems) endpoint.",
        "example": {
          "items": [
            {
              "type": "ITEM",
              "id": "GPOKJPTV2KDLVKCADJ7I77EZ",
              "updated_at": "2020-06-18T17:55:56.646Z",
              "version": 1592502956646,
              "is_deleted": false,
              "present_at_all_locations": true,
              "custom_attribute_values": {
                "VINTAGE": {
                  "name": "Vintage",
                  "custom_attribute_definition_id": "EI7IJQDUKYSHULREPIPH6HNU",
                  "type": "NUMBER",
                  "number_value": 2018,
                  "key": "VINTAGE"
                },
                "VARIETAL": {
                  "name": "Varietal",
                  "custom_attribute_definition_id": "VARIETAL_DEFINITION_ID",
                  "type": "SELECTION",
                  "selection_uid_values": [
                    "MERLOT_SELECTION_ID",
                    null
                  ],
                  "key": "VARIETAL"
                },
                "BRAND": {
                  "name": "Brand",
                  "custom_attribute_definition_id": "BRAND_DEFINITION_ID",
                  "type": "STRING",
                  "string_value": "Dark Horse",
                  "key": "BRAND"
                }
              },
              "item_data": {
                "name": "Dark Horse Merlot 2018",
                "product_type": "REGULAR",
                "description": "A nice red wine",
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "VBJNPHCOKDFECR6VU25WRJUD",
                    "updated_at": "2020-06-18T17:55:56.646Z",
                    "version": 1592502956646,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "GPOKJPTV2KDLVKCADJ7I77EZ",
                      "name": "750 mL",
                      "ordinal": 0,
                      "pricing_type": "FIXED_PRICING",
                      "price_money": {
                        "amount": 1000,
                        "currency": "USD"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "matched_variation_ids": [
            "VBJNPHCOKDFECR6VU25WRJUD"
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchCatalogObjectsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "object_types": {
            "type": "array",
            "description": "The desired set of object types to appear in the search results.\nSee [CatalogObjectType](#type-catalogobjecttype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "include_deleted_objects": {
            "type": "boolean",
            "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`."
          },
          "include_related_objects": {
            "type": "boolean",
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf a CatalogItem is returned in the object field of the response,\nits associated CatalogCategory, CatalogTax objects,\nCatalogImage objects and CatalogModifierList objects\nwill be included in the `related_objects` field of the response.\n\nIf a CatalogItemVariation is returned in the object field of the\nresponse, its parent CatalogItem will be included in the `related_objects` field of\nthe response."
          },
          "begin_time": {
            "type": "string",
            "description": "Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339\nformat, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a\ntimestamp equal to `begin_time` will not be included in the response."
          },
          "query": {
            "$ref": "#/components/schemas/CatalogQuery"
          },
          "limit": {
            "type": "integer",
            "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "object_types": [
              "ITEM"
            ],
            "query": {
              "prefix_query": {
                "attribute_name": "name",
                "attribute_prefix": "tea"
              }
            },
            "limit": 100
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python",
          "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp",
          "java": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.java",
          "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php",
          "javascript": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.javascript",
          "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby"
        }
      },
      "SearchCatalogObjectsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "objects": {
            "type": "array",
            "description": "The CatalogObjects returned.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "related_objects": {
            "type": "array",
            "description": "A list of CatalogObjects referenced by the objects in the `objects` field.",
            "items": {
              "$ref": "#/components/schemas/CatalogObject"
            }
          },
          "latest_time": {
            "type": "string",
            "description": "When the associated product catalog was last updated. Will\nmatch the value for `end_time` or `cursor` if either field is included in the `SearchCatalog` request.",
            "x-is-beta": true,
            "x-release-status": "BETA"
          }
        },
        "description": "",
        "example": {
          "objects": [
            {
              "type": "ITEM",
              "id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
              "updated_at": "2017-10-26T15:41:32.337Z",
              "version": 1509032492337,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Tea - Black",
                "description": "A delicious blend of black tea.",
                "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
                "product_type": "REGULAR",
                "tax_ids": [
                  "ZXITPM6RWHZ7GZ7EIP3YKECM"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "5GSZPX6EU7MM75S57OONG3V5",
                    "updated_at": "2017-10-26T15:27:31.626Z",
                    "version": 1509031651626,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                      "name": "Regular",
                      "ordinal": 1,
                      "price_money": {
                        "amount": 150,
                        "currency": "USD"
                      },
                      "pricing_type": "FIXED_PRICING"
                    }
                  },
                  {
                    "type": "ITEM_VARIATION",
                    "id": "XVLBN7DU6JTWHJTG5F265B43",
                    "updated_at": "2017-10-26T15:27:31.626Z",
                    "version": 1509031651626,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "X5DZ5NWWAQ44CKBLKIFQGOWK",
                      "name": "Large",
                      "ordinal": 2,
                      "price_money": {
                        "amount": 225,
                        "currency": "USD"
                      },
                      "pricing_type": "FIXED_PRICING"
                    }
                  }
                ],
                "visibility": "PRIVATE"
              }
            },
            {
              "type": "ITEM",
              "id": "NNNEM3LA656Q46NXLWCNI7S5",
              "updated_at": "2017-10-26T15:41:23.232Z",
              "version": 1509032483232,
              "is_deleted": false,
              "present_at_all_locations": true,
              "item_data": {
                "name": "Tea - Green",
                "description": "Relaxing green herbal tea.",
                "category_id": "E7CLE5RZZ744BHWVQQEAHI2C",
                "product_type": "REGULAR",
                "tax_ids": [
                  "ZXITPM6RWHZ7GZ7EIP3YKECM"
                ],
                "variations": [
                  {
                    "type": "ITEM_VARIATION",
                    "id": "FHYBVIA6NVBCSOVETA62WEA4",
                    "updated_at": "2017-10-26T15:29:00.524Z",
                    "version": 1509031740524,
                    "is_deleted": false,
                    "present_at_all_locations": true,
                    "item_variation_data": {
                      "item_id": "NNNEM3LA656Q46NXLWCNI7S5",
                      "name": "Regular",
                      "ordinal": 1,
                      "price_money": {
                        "amount": 150,
                        "currency": "USD"
                      },
                      "pricing_type": "FIXED_PRICING"
                    }
                  }
                ],
                "visibility": "PRIVATE"
              }
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python",
          "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp",
          "java": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.java",
          "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php",
          "javascript": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.javascript",
          "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby"
        }
      },
      "SearchCustomersRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "Include the pagination cursor in subsequent calls to this endpoint to retrieve\nthe next set of results associated with the original query.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "A limit on the number of results to be returned in a single page.\nThe limit is advisory - the implementation may return more or fewer results.\nIf the supplied limit is negative, zero, or is higher than the maximum limit\nof 100, it will be ignored.",
            "format": "int64"
          },
          "query": {
            "$ref": "#/components/schemas/CustomerQuery"
          }
        },
        "description": "Defines the fields included in the request body for the\nSearchCustomers endpoint.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "email_address": {
                  "fuzzy": "example.com"
                },
                "creation_source": {
                  "values": [
                    "THIRD_PARTY"
                  ],
                  "rule": "INCLUDE"
                },
                "created_at": {
                  "start_at": "2018-01-01T00:00:00-00:00",
                  "end_at": "2018-02-01T00:00:00-00:00"
                },
                "group_ids": {
                  "all": [
                    "545AXB44B4XXWMVQ4W8SBT3HHF"
                  ]
                }
              },
              "sort": {
                "field": "CREATED_AT",
                "order": "ASC"
              }
            },
            "limit": 2
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/SearchCustomers/SearchCustomersRequest.python",
          "csharp": "/sdk_samples/SearchCustomers/SearchCustomersRequest.csharp",
          "java": "/sdk_samples/SearchCustomers/SearchCustomersRequest.java",
          "php": "/sdk_samples/SearchCustomers/SearchCustomersRequest.php",
          "javascript": "/sdk_samples/SearchCustomers/SearchCustomersRequest.javascript",
          "ruby": "/sdk_samples/SearchCustomers/SearchCustomersRequest.ruby"
        }
      },
      "SearchCustomersResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "customers": {
            "type": "array",
            "description": "An array of `Customer` objects that match a query.",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor that can be used during subsequent calls\nto SearchCustomers to retrieve the next set of results associated\nwith the original query. Pagination cursors are only present when\na request succeeds and additional results are available.\n\nSee the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information."
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the SearchCustomers endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
        "example": {
          "customers": [
            {
              "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "created_at": "2018-01-23T20:21:54.859Z",
              "updated_at": "2018-04-20T10:02:43.083Z",
              "given_name": "James",
              "family_name": "Bond",
              "email_address": "james.bond@example.com",
              "address": {
                "address_line_1": "505 Electric Ave",
                "address_line_2": "Suite 600",
                "locality": "New York",
                "administrative_district_level_1": "NY",
                "postal_code": "10003",
                "country": "US"
              },
              "phone_number": "1-212-555-4250",
              "reference_id": "YOUR_REFERENCE_ID_2",
              "creation_source": "THIRD_PARTY",
              "groups": [
                {
                  "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                  "name": "Aviation Enthusiasts"
                },
                {
                  "id": "1KB9JE5EGJXCW.REACHABLE",
                  "name": "Reachable"
                }
              ],
              "group_ids": [
                "545AXB44B4XXWMVQ4W8SBT3HHF"
              ],
              "segment_ids": [
                "1KB9JE5EGJXCW.REACHABLE"
              ]
            },
            {
              "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "created_at": "2018-01-30T14:10:54.859Z",
              "updated_at": "2018-03-08T18:25:54.859Z",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "amelia.earhart@example.com",
              "address": {
                "address_line_1": "500 Electric Ave",
                "address_line_2": "Suite 600",
                "locality": "New York",
                "administrative_district_level_1": "NY",
                "postal_code": "10003",
                "country": "US"
              },
              "phone_number": "1-212-555-4240",
              "reference_id": "YOUR_REFERENCE_ID_1",
              "note": "a customer",
              "creation_source": "THIRD_PARTY",
              "groups": [
                {
                  "id": "545AXB44B4XXWMVQ4W8SBT3HHF",
                  "name": "Aviation Enthusiasts"
                },
                {
                  "id": "1KB9JE5EGJXCW.REACHABLE",
                  "name": "Reachable"
                }
              ],
              "group_ids": [
                "545AXB44B4XXWMVQ4W8SBT3HHF"
              ],
              "segment_ids": [
                "1KB9JE5EGJXCW.REACHABLE"
              ]
            }
          ],
          "cursor": "9dpS093Uy12AzeE"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/SearchCustomers/SearchCustomersResponse.python",
          "csharp": "/sdk_samples/SearchCustomers/SearchCustomersResponse.csharp",
          "java": "/sdk_samples/SearchCustomers/SearchCustomersResponse.java",
          "php": "/sdk_samples/SearchCustomers/SearchCustomersResponse.php",
          "javascript": "/sdk_samples/SearchCustomers/SearchCustomersResponse.javascript",
          "ruby": "/sdk_samples/SearchCustomers/SearchCustomersResponse.ruby"
        }
      },
      "SearchInvoicesRequest": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/InvoiceQuery"
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of invoices to return (200 is the maximum `limit`). \nIf not provided, the server \nuses a default limit of 100 invoices."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint. \nProvide this cursor to retrieve the next set of results for your original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          }
        },
        "description": "Describes a `SearchInvoices` request.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "location_ids": [
                  "ES0RJRZYEC39A"
                ],
                "customer_ids": [
                  "JDKYHBWT1D4F8MFH63DBMEN8Y4"
                ]
              },
              "sort": {
                "field": "INVOICE_SORT_DATE",
                "order": "DESC"
              },
              "limit": 100
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchInvoicesResponse": {
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "description": "The list of invoices returned by the search.",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "cursor": {
            "type": "string",
            "description": "When a response is truncated, it includes a cursor that you can use in a \nsubsequent request to fetch the next set of invoices. If empty, this is the final \nresponse. \nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `SearchInvoices` response.",
        "example": {
          "invoices": [
            {
              "invoice": {
                "id": "gt2zv1z6mnUm1V7KMxxf3w",
                "version": 0,
                "location_id": "ES0RJRZYEC39A",
                "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
                "payment_requests": [
                  {
                    "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                    "request_type": "BALANCE",
                    "due_date": "2030-01-24",
                    "tipping_enabled": true,
                    "reminders": [
                      {
                        "uid": "beebd363-e47f-4075-8785-c235aaa7df11",
                        "relative_scheduled_days": -1,
                        "message": "Your invoice is due tomorrow",
                        "status": "PENDING"
                      }
                    ],
                    "computed_amount_money": {
                      "amount": 10000,
                      "currency": "USD"
                    },
                    "total_completed_amount_money": {
                      "amount": 0,
                      "currency": "USD"
                    },
                    "automatic_payment_source": "NONE"
                  }
                ],
                "invoice_number": "inv-100",
                "title": "Event Planning Services",
                "description": "We appreciate your business!",
                "scheduled_at": "2030-01-13T10:00:00Z",
                "status": "DRAFT",
                "timezone": "America/Los_Angeles",
                "created_at": "2020-06-18T17:45:13Z",
                "updated_at": "2020-06-18T17:45:13Z",
                "primary_recipient": {
                  "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
                  "given_name": "Amelia",
                  "family_name": "Earhart",
                  "email_address": "Amelia.Earhart@example.com",
                  "phone_number": "1-212-555-4240"
                },
                "custom_fields": [
                  {
                    "label": "Event Reference Number",
                    "value": "Ref. #1234",
                    "placement": "ABOVE_LINE_ITEMS"
                  },
                  {
                    "label": "Terms of Service",
                    "value": "The terms of service are...",
                    "placement": "BELOW_LINE_ITEMS"
                  }
                ],
                "delivery_method": "EMAIL"
              }
            }
          ],
          "cursor": "CURSOR"
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyAccountsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/SearchLoyaltyAccountsRequestLoyaltyAccountQuery"
          },
          "limit": {
            "maximum": 30,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum number of results to include in the response."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to \nthis endpoint. Provide this to retrieve the next set of \nresults for the original query.\n\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
          }
        },
        "description": "A request to search for loyalty accounts.",
        "example": {
          "request_body": {
            "query": {
              "mappings": [
                {
                  "type": "PHONE",
                  "value": "+14155551234"
                }
              ]
            },
            "limit": 10
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyAccountsRequestLoyaltyAccountQuery": {
        "type": "object",
        "properties": {
          "mappings": {
            "type": "array",
            "description": "The set of mappings to use in the loyalty account search.  \n\nThis cannot be combined with `customer_ids`.  \n\nMax: 30 mappings",
            "items": {
              "$ref": "#/components/schemas/LoyaltyAccountMapping"
            }
          },
          "customer_ids": {
            "type": "array",
            "description": "The set of customer IDs to use in the loyalty account search.  \n\nThis cannot be combined with `mappings`.  \n\nMax: 30 customer IDs",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The search criteria for the loyalty accounts.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyAccountsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "loyalty_accounts": {
            "type": "array",
            "description": "The loyalty accounts that met the search criteria,  \nin order of creation date.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyAccount"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to use in a subsequent \nrequest. If empty, this is the final response.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
          }
        },
        "description": "A response that includes loyalty accounts that satisfy the search criteria.",
        "example": {
          "loyalty_accounts": [
            {
              "id": "79b807d2-d786-46a9-933b-918028d7a8c5",
              "mappings": [
                {
                  "id": "66aaab3f-da99-49ed-8b19-b87f851c844f",
                  "type": "PHONE",
                  "value": "+14155551234",
                  "created_at": "2020-05-08T21:44:32Z"
                }
              ],
              "program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
              "balance": 10,
              "lifetime_points": 20,
              "customer_id": "Q8002FAM9V1EZ0ADB2T5609X6NET1H0",
              "created_at": "2020-05-08T21:44:32Z",
              "updated_at": "2020-05-08T21:44:32Z"
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyEventsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/LoyaltyEventQuery"
          },
          "limit": {
            "maximum": 30,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum number of results to include in the response. \nThe last page might contain fewer events. \nThe default is 30 events."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
          }
        },
        "description": "A request to search for loyalty events.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "order_filter": {
                  "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
                }
              }
            },
            "limit": 30
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyEventsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "events": {
            "type": "array",
            "description": "The loyalty events that satisfy the search criteria.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyEvent"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent \nrequest. If empty, this is the final response. \nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
          }
        },
        "description": "A response that contains loyalty events that satisfy the search \ncriteria, in order by the `created_at` date.",
        "example": {
          "events": [
            {
              "id": "c27c8465-806e-36f2-b4b3-71f5887b5ba8",
              "type": "ACCUMULATE_POINTS",
              "created_at": "2020-05-08T22:01:30Z",
              "accumulate_points": {
                "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
                "points": 5,
                "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
              },
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "location_id": "P034NEENMD09F",
              "source": "LOYALTY_API"
            },
            {
              "id": "e4a5cbc3-a4d0-3779-98e9-e578885d9430",
              "type": "REDEEM_REWARD",
              "created_at": "2020-05-08T22:01:15Z",
              "redeem_reward": {
                "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
                "reward_id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
                "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY"
              },
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "location_id": "P034NEENMD09F",
              "source": "LOYALTY_API"
            },
            {
              "id": "5e127479-0b03-3671-ab1e-15faea8b7188",
              "type": "CREATE_REWARD",
              "created_at": "2020-05-08T22:00:44Z",
              "create_reward": {
                "loyalty_program_id": "d619f755-2d17-41f3-990d-c04ecedd64dd",
                "reward_id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
                "points": -10
              },
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "source": "LOYALTY_API"
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyRewardsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/SearchLoyaltyRewardsRequestLoyaltyRewardQuery"
          },
          "limit": {
            "maximum": 30,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum number of results to return in the response."
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to \nthis endpoint. Provide this to retrieve the next set of \nresults for the original query.\nFor more information, \nsee [Pagination](https://developer.squareup.com/docs/docs/basics/api101/pagination)."
          }
        },
        "description": "A request to search for loyalty rewards.",
        "example": {
          "request_body": {
            "query": {
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd"
            },
            "limit": 10
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyRewardsRequestLoyaltyRewardQuery": {
        "required": [
          "loyalty_account_id"
        ],
        "type": "object",
        "properties": {
          "loyalty_account_id": {
            "type": "string",
            "description": "The ID of the `loyalty account` to which the loyalty reward belongs."
          },
          "status": {
            "type": "string",
            "description": "The status of the loyalty reward.\nSee [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible values"
          }
        },
        "description": "The set of search requirements.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchLoyaltyRewardsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "rewards": {
            "type": "array",
            "description": "The loyalty rewards that satisfy the search criteria.\nThese are returned in descending order by `updated_at`.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyReward"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent \nrequest. If empty, this is the final response."
          }
        },
        "description": "A response that includes the loyalty rewards satisfying the search criteria.",
        "example": {
          "rewards": [
            {
              "id": "d03f79f4-815f-3500-b851-cc1e68a457f9",
              "status": "REDEEMED",
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
              "points": 10,
              "order_id": "PyATxhYLfsMqpVkcKJITPydgEYfZY",
              "created_at": "2020-05-08T22:00:44Z",
              "updated_at": "2020-05-08T22:01:17Z",
              "redeemed_at": "2020-05-08T22:01:17Z"
            },
            {
              "id": "9f18ac21-233a-31c3-be77-b45840f5a810",
              "status": "REDEEMED",
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
              "points": 10,
              "created_at": "2020-05-08T21:55:42Z",
              "updated_at": "2020-05-08T21:56:00Z",
              "redeemed_at": "2020-05-08T21:56:00Z"
            },
            {
              "id": "a8f43ebe-2ad6-3001-bdd5-7d7c2da08943",
              "status": "DELETED",
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
              "points": 10,
              "order_id": "5NB69ZNh3FbsOs1ox43bh1xrli6YY",
              "created_at": "2020-05-01T21:49:54Z",
              "updated_at": "2020-05-08T21:55:10Z"
            },
            {
              "id": "a051254c-f840-3b45-8cf1-50bcd38ff92a",
              "status": "ISSUED",
              "loyalty_account_id": "5adcb100-07f1-4ee7-b8c6-6bb9ebc474bd",
              "reward_tier_id": "e1b39225-9da5-43d1-a5db-782cdd8ad94f",
              "points": 10,
              "order_id": "LQQ16znvi2VIUKPVhUfJefzr1eEZY",
              "created_at": "2020-05-01T20:20:37Z",
              "updated_at": "2020-05-01T20:20:40Z"
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchOrdersCustomerFilter": {
        "type": "object",
        "properties": {
          "customer_ids": {
            "type": "array",
            "description": "List of customer IDs to filter by.\n\nMax: 10 customer IDs.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter based on Order `customer_id` and any Tender `customer_id`\nassociated with the Order. Does not filter based on the\n[FulfillmentRecipient](#type-orderfulfillmentrecipient) `customer_id`.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchOrdersDateTimeFilter": {
        "type": "object",
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "updated_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "closed_at": {
            "$ref": "#/components/schemas/TimeRange"
          }
        },
        "description": "Filter for `Order` objects based on whether their `CREATED_AT`,\n`CLOSED_AT` or `UPDATED_AT` timestamps fall within a specified time range.\nYou can specify the time range and which timestamp to filter for. You can filter\nfor only one time range at a time.\n\nFor each time range, the start time and end time are inclusive. If the end time\nis absent, it defaults to the time of the first request for the cursor.\n\n__Important:__ If you use the DateTimeFilter in a SearchOrders query,\nyou must also set the `sort_field` in [OrdersSort](#type-searchorderordersort)\nto the same field you filter for. For example, if you set the `CLOSED_AT` field\nin DateTimeFilter, you must also set the `sort_field` in SearchOrdersSort to\n`CLOSED_AT`. Otherwise, SearchOrders will throw an error.\n[Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range).",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersFilter": {
        "type": "object",
        "properties": {
          "state_filter": {
            "$ref": "#/components/schemas/SearchOrdersStateFilter"
          },
          "date_time_filter": {
            "$ref": "#/components/schemas/SearchOrdersDateTimeFilter"
          },
          "fulfillment_filter": {
            "$ref": "#/components/schemas/SearchOrdersFulfillmentFilter"
          },
          "source_filter": {
            "$ref": "#/components/schemas/SearchOrdersSourceFilter"
          },
          "customer_filter": {
            "$ref": "#/components/schemas/SearchOrdersCustomerFilter"
          }
        },
        "description": "Filtering criteria to use for a SearchOrders request. Multiple filters\nwill be ANDed together.",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersFulfillmentFilter": {
        "type": "object",
        "properties": {
          "fulfillment_types": {
            "type": "array",
            "description": "List of `fulfillment types` to filter\nfor. Will return orders if any of its fulfillments match any of the fulfillment types\nlisted in this field.\nSee [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values",
            "items": {
              "type": "string"
            }
          },
          "fulfillment_states": {
            "type": "array",
            "description": "List of `fulfillment states` to filter\nfor. Will return orders if any of its fulfillments match any of the\nfulfillment states listed in this field.\nSee [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter based on [Order Fulfillment](#type-orderfulfillment) information.",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SearchOrdersFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/SearchOrdersSort"
          }
        },
        "description": "Contains query criteria for the search.",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersRequest": {
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "array",
            "description": "The location IDs for the orders to query. All locations must belong to\nthe same merchant.\n\nMin: 1 location IDs.\n\nMax: 10 location IDs.",
            "items": {
              "type": "string"
            }
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "query": {
            "$ref": "#/components/schemas/SearchOrdersQuery"
          },
          "limit": {
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of results to be returned in a single page. It is\npossible to receive fewer results than the specified limit on a given page.\n\nDefault: `500`"
          },
          "return_entries": {
            "type": "boolean",
            "description": "Boolean that controls the format of the search results. If `true`,\nSearchOrders will return ``OrderEntry`` objects. If `false`, SearchOrders\nwill return complete Order objects.\n\nDefault: `false`."
          }
        },
        "description": "The request does not have any required fields. When given no query criteria,\nSearchOrders will return all results for all of the merchant’s locations. When fetching additional\npages using a `cursor`, the `query` must be equal to the `query` used to fetch the first page of\nresults.",
        "example": {
          "request_body": {
            "return_entries": true,
            "limit": 3,
            "location_ids": [
              "057P5VYJ4A5X1",
              "18YC4JDH91E1H"
            ],
            "query": {
              "filter": {
                "date_time_filter": {
                  "closed_at": {
                    "start_at": "2018-03-03T20:00:00+00:00",
                    "end_at": "2019-03-04T21:54:45+00:00"
                  }
                },
                "state_filter": {
                  "states": [
                    "COMPLETED"
                  ]
                }
              },
              "sort": {
                "sort_field": "CLOSED_AT",
                "sort_order": "DESC"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersResponse": {
        "type": "object",
        "properties": {
          "order_entries": {
            "type": "array",
            "description": "List of `OrderEntries` that fit the query\nconditions. Populated only if `return_entries` was set to `true` in the request.",
            "items": {
              "$ref": "#/components/schemas/OrderEntry"
            }
          },
          "orders": {
            "type": "array",
            "description": "List of\n`Order` objects that match query conditions. Populated only if\n`return_entries` in the request is set to `false`.",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If unset,\nthis is the final response.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "errors": {
            "type": "array",
            "description": "`Errors` encountered during the search.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Only one of `order_entries` or `orders` fields will be set, depending on whether\n`return_entries` was set on the [SearchOrdersRequest](#type-searchorderrequest).",
        "example": {
          "order_entries": [
            {
              "order_id": "CAISEM82RcpmcFBM0TfOyiHV3es",
              "location_id": "057P5VYJ4A5X1",
              "version": 1
            },
            {
              "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
              "location_id": "18YC4JDH91E1H"
            },
            {
              "order_id": "CAISEM52YcpmcWAzERDOyiWS3ty",
              "location_id": "057P5VYJ4A5X1"
            }
          ],
          "cursor": "123"
        },
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersSort": {
        "required": [
          "sort_field"
        ],
        "type": "object",
        "properties": {
          "sort_field": {
            "type": "string",
            "description": "The field to sort by.\n\n__Important:__ When using a `DateTimeFilter`,\n`sort_field` must match the timestamp field that the DateTimeFilter uses to\nfilter. For example, If you set your `sort_field` to `CLOSED_AT` and you use a\nDateTimeFilter, your DateTimeFilter must filter for orders by their `CLOSED_AT` date.\nIf this field does not match the timestamp field in `DateTimeFilter`,\nSearchOrders will return an error.\n\nDefault: `CREATED_AT`.\nSee [SearchOrdersSortField](#type-searchorderssortfield) for possible values"
          },
          "sort_order": {
            "type": "string",
            "description": "The chronological order in which results are returned. Defaults to `DESC`.\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "Sorting criteria for a SearchOrders request. Results can only be sorted\nby a timestamp field.",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersSourceFilter": {
        "type": "object",
        "properties": {
          "source_names": {
            "type": "array",
            "description": "Filters by `Source` `name`. Will return any orders\nwith with a `source.name` that matches any of the listed source names.\n\nMax: 10 source names.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter based on order `source` information.",
        "x-release-status": "PUBLIC"
      },
      "SearchOrdersStateFilter": {
        "required": [
          "states"
        ],
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "description": "States to filter for.\nSee [OrderState](#type-orderstate) for possible values",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Filter by current Order `state`.",
        "x-release-status": "PUBLIC"
      },
      "SearchShiftsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/ShiftQuery"
          },
          "limit": {
            "maximum": 200,
            "minimum": 1,
            "type": "integer",
            "description": "number of resources in a page (200 by default)."
          },
          "cursor": {
            "type": "string",
            "description": "opaque cursor for fetching the next page."
          }
        },
        "description": "A request for a filtered and sorted set of `Shift` objects.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "workday": {
                  "date_range": {
                    "start_date": "2019-01-20",
                    "end_date": "2019-02-03"
                  },
                  "match_shifts_by": "START_AT",
                  "default_timezone": "America/Los_Angeles"
                }
              }
            },
            "limit": 100
          }
        },
        "x-release-status": "PUBLIC"
      },
      "SearchShiftsResponse": {
        "type": "object",
        "properties": {
          "shifts": {
            "type": "array",
            "description": "Shifts",
            "items": {
              "$ref": "#/components/schemas/Shift"
            }
          },
          "cursor": {
            "type": "string",
            "description": "Opaque cursor for fetching the next page."
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request for `Shift` objects. Contains\nthe requested `Shift` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "shifts": [
            {
              "id": "X714F3HA6D1PT",
              "team_member_id": "ormj0jJJZ5OZIzxrZYJI",
              "employee_id": "ormj0jJJZ5OZIzxrZYJI",
              "location_id": "PAA1RJZZKXBFG",
              "timezone": "America/New_York",
              "start_at": "2019-01-21T03:11:00-05:00",
              "end_at": "2019-01-21T13:11:00-05:00",
              "wage": {
                "title": "Barista",
                "hourly_rate": {
                  "amount": 1100,
                  "currency": "USD"
                }
              },
              "breaks": [
                {
                  "id": "SJW7X6AKEJQ65",
                  "start_at": "2019-01-21T06:11:00-05:00",
                  "end_at": "2019-01-21T06:11:00-05:00",
                  "break_type_id": "REGS1EQR1TPZ5",
                  "name": "Tea Break",
                  "expected_duration": "PT10M",
                  "is_paid": true
                }
              ],
              "status": "CLOSED",
              "version": 6,
              "created_at": "2019-01-24T01:12:03Z",
              "updated_at": "2019-02-07T22:21:08Z"
            },
            {
              "id": "GDHYBZYWK0P2V",
              "team_member_id": "33fJchumvVdJwxV0H6L9",
              "employee_id": "33fJchumvVdJwxV0H6L9",
              "location_id": "PAA1RJZZKXBFG",
              "timezone": "America/New_York",
              "start_at": "2019-01-22T12:02:00-05:00",
              "end_at": "2019-01-22T13:02:00-05:00",
              "wage": {
                "title": "Cook",
                "hourly_rate": {
                  "amount": 1600,
                  "currency": "USD"
                }
              },
              "breaks": [
                {
                  "id": "BKS6VR7WR748A",
                  "start_at": "2019-01-23T14:30:00-05:00",
                  "end_at": "2019-01-23T14:40:00-05:00",
                  "break_type_id": "WQX00VR99F53J",
                  "name": "Tea Break",
                  "expected_duration": "PT10M",
                  "is_paid": true
                },
                {
                  "id": "BQFEZSHFZSC51",
                  "start_at": "2019-01-22T12:30:00-05:00",
                  "end_at": "2019-01-22T12:44:00-05:00",
                  "break_type_id": "P6Q468ZFRN1AC",
                  "name": "Coffee Break",
                  "expected_duration": "PT15M",
                  "is_paid": false
                }
              ],
              "status": "CLOSED",
              "version": 16,
              "created_at": "2019-01-23T23:32:45Z",
              "updated_at": "2019-01-24T00:56:25Z"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "SearchSubscriptionsFilter": {
        "type": "object",
        "properties": {
          "customer_ids": {
            "type": "array",
            "description": "A filter to select subscriptions based on the customer.",
            "items": {
              "type": "string"
            }
          },
          "location_ids": {
            "type": "array",
            "description": "A filter to select subscriptions based the location.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Represents a set of SearchSubscriptionsQuery filters used to limit the set of Subscriptions returned by SearchSubscriptions.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchSubscriptionsQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SearchSubscriptionsFilter"
          }
        },
        "description": "Represents a query (including filtering criteria) used to search for subscriptions.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchSubscriptionsRequest": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for the original query.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          },
          "limit": {
            "minimum": 1,
            "type": "integer",
            "description": "The upper limit on the number of subscriptions to return \nin the response. \n\nDefault: `200`"
          },
          "query": {
            "$ref": "#/components/schemas/SearchSubscriptionsQuery"
          }
        },
        "description": "Defines parameters in a\n[SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint \nrequest.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "location_ids": [
                  "S8GWD5R9QB376"
                ],
                "customer_ids": [
                  "CHFGVKYY8RSV93M5KCYTG4PN0G"
                ]
              }
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchSubscriptionsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscriptions": {
            "type": "array",
            "description": "The search result.",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "cursor": {
            "type": "string",
            "description": "When a response is truncated, it includes a cursor that you can \nuse in a subsequent request to fetch the next set of subscriptions. \nIf empty, this is the final response.\n\nFor more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination)."
          }
        },
        "description": "Defines the fields that are included in the response from the\n[SearchSubscriptions](#endpoint-subscriptions-searchsubscriptions) endpoint.",
        "example": {
          "subscriptions": [
            {
              "id": "de86fc96-8664-474b-af1a-abbe59cacf0e",
              "location_id": "S8GWD5R9QB376",
              "plan_id": "L3TJVDHVBEQEGQDEZL2JJM7R",
              "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
              "start_date": "2020-04-14",
              "canceled_date": "2020-04-14",
              "charged_through_date": "2020-05-14",
              "status": "CANCELED",
              "created_at": "2020-08-03T21:53:10Z",
              "card_id": "ccof:mueUsvgajChmjEbp4GB",
              "paid_until_date": "2020-05-14",
              "timezone": "UTC"
            },
            {
              "id": "56214fb2-cc85-47a1-93bc-44f3766bb56f",
              "location_id": "S8GWD5R9QB376",
              "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
              "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
              "start_date": "2020-08-01",
              "status": "PENDING",
              "tax_percentage": "5",
              "price_override_money": {
                "amount": 100,
                "currency": "USD"
              },
              "version": 1594155459464,
              "created_at": "2020-08-03T21:53:10Z",
              "timezone": "America/Los_Angeles"
            },
            {
              "id": "8151fc89-da15-4eb9-a685-1a70883cebfc",
              "location_id": "S8GWD5R9QB376",
              "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
              "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
              "start_date": "2020-05-11",
              "charged_through_date": "2020-06-11",
              "status": "ACTIVE",
              "invoice_ids": [
                "grebK0Q_l8H4fqoMMVvt-Q",
                "rcX_i3sNmHTGKhI4W2mceA"
              ],
              "price_override_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "created_at": "2020-08-03T21:53:10Z",
              "paid_until_date": "2020-06-11",
              "timezone": "America/Los_Angeles"
            }
          ]
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SearchTeamMembersFilter": {
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "array",
            "description": "When present, filter by team members assigned to the specified locations.\nWhen empty, include team members assigned to any location.",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "When present, filter by team members who match the given status.\nWhen empty, include team members of all statuses.\nSee [TeamMemberStatus](#type-teammemberstatus) for possible values"
          }
        },
        "description": "Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied\nbetween the individual fields, and `OR` logic is applied within list-based fields.\nFor example, setting this filter value,\n```\nfilter = (locations_ids = [\"A\", \"B\"], status = ACTIVE)\n```\nreturns only active team members assigned to either location \"A\" or \"B\".",
        "x-release-status": "PUBLIC"
      },
      "SearchTeamMembersQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SearchTeamMembersFilter"
          }
        },
        "description": "Represents the parameters in a search for `TeamMember` objects.",
        "x-release-status": "PUBLIC"
      },
      "SearchTeamMembersRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/SearchTeamMembersQuery"
          },
          "limit": {
            "maximum": 25,
            "minimum": 1,
            "type": "integer",
            "description": "The maximum number of `TeamMember` objects in a page (25 by default)."
          },
          "cursor": {
            "type": "string",
            "description": "The opaque cursor for fetching the next page. Read about\n[pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information."
          }
        },
        "description": "Represents a search request for a filtered list of `TeamMember` objects.",
        "example": {
          "request_body": {
            "query": {
              "filter": {
                "location_ids": [
                  "0G5P3VGACMMQZ"
                ],
                "status": "ACTIVE"
              }
            },
            "limit": 10
          }
        },
        "x-release-status": "PUBLIC"
      },
      "SearchTeamMembersResponse": {
        "type": "object",
        "properties": {
          "team_members": {
            "type": "array",
            "description": "The filtered list of `TeamMember` objects.",
            "items": {
              "$ref": "#/components/schemas/TeamMember"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The opaque cursor for fetching the next page. Read about\n[pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination) with Square APIs for more information."
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from a search request, containing a filtered list of `TeamMember` objects.",
        "example": {
          "team_members": [
            {
              "id": "-3oZQKPKVk6gUXU_V5Qa",
              "reference_id": "12345678",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Johnny",
              "family_name": "Cash",
              "email_address": "johnny_cash@squareup.com",
              "created_at": "2019-07-10T17:26:48Z",
              "updated_at": "2020-04-28T21:49:28.957Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "1AVJj0DjkzbmbJw5r4KK",
              "reference_id": "abcded",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Lombard",
              "family_name": "Smith",
              "phone_number": "+14155552671",
              "created_at": "2020-03-24T18:14:01.127Z",
              "updated_at": "2020-06-09T17:38:05.423Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "2JCmiJol_KKFs9z2Evim",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Monica",
              "family_name": "Sway",
              "created_at": "2020-03-24T01:09:25.010Z",
              "updated_at": "2020-03-24T01:09:25.010Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "4uXcJQSLtbk3F0UQHFNQ",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Elton",
              "family_name": "Ipsum",
              "created_at": "2020-03-24T01:09:23.464Z",
              "updated_at": "2020-03-24T01:09:23.464Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "5CoUpyrw1YwGWcRd-eDL",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Steven",
              "family_name": "Lo",
              "created_at": "2020-03-24T01:09:23.074Z",
              "updated_at": "2020-03-24T01:09:23.074Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "5MRPTTp8MMBLVSmzrGha",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Patrick",
              "family_name": "Steward",
              "email_address": "patrick_steward@gmail.com",
              "phone_number": "+14155552671",
              "created_at": "2020-03-24T18:14:03.865Z",
              "updated_at": "2020-03-24T18:14:03.865Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "7F5ZxsfRnkexhu1PTbfh",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Ivy",
              "family_name": "Manny",
              "created_at": "2020-03-24T01:09:25.180Z",
              "updated_at": "2020-03-24T01:09:25.180Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "808X9HR72yKvVaigQXf4",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "John",
              "family_name": "Smith",
              "email_address": "john_smith@gmail.com",
              "phone_number": "+14155552671",
              "created_at": "2020-03-24T18:14:02.797Z",
              "updated_at": "2020-03-24T18:14:02.797Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "9MVDVoY4hazkWKGo_OuZ",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Robert",
              "family_name": "Wen",
              "email_address": "r_wen@gmail.com",
              "phone_number": "+14155552671",
              "created_at": "2020-03-24T18:14:00.399Z",
              "updated_at": "2020-03-24T18:14:00.399Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            },
            {
              "id": "9UglUjOXQ13-hMFypCft",
              "is_owner": false,
              "status": "ACTIVE",
              "given_name": "Ashley",
              "family_name": "Simpson",
              "email_address": "asimpson@gmail.com",
              "phone_number": "+14155552671",
              "created_at": "2020-03-24T18:14:00.445Z",
              "updated_at": "2020-03-24T18:14:00.445Z",
              "assigned_locations": {
                "assignment_type": "ALL_CURRENT_AND_FUTURE_LOCATIONS"
              }
            }
          ],
          "cursor": "N:9UglUjOXQ13-hMFypCft"
        },
        "x-release-status": "PUBLIC"
      },
      "SearchTerminalCheckoutsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/TerminalCheckoutQuery"
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query.\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Limits the number of results returned for a single request."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "limit": 2,
            "query": {
              "filter": {
                "status": "COMPLETED"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "SearchTerminalCheckoutsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "checkouts": {
            "type": "array",
            "description": "The requested search result of `TerminalCheckout` objects.",
            "items": {
              "$ref": "#/components/schemas/TerminalCheckout"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          }
        },
        "description": "",
        "example": {
          "checkouts": [
            {
              "id": "tsQPvzwBpMqqO",
              "amount_money": {
                "amount": 2610,
                "currency": "USD"
              },
              "reference_id": "id14467",
              "note": "A brief note",
              "device_options": {
                "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
                "tip_settings": {
                  "allow_tipping": false
                },
                "skip_receipt_screen": false
              },
              "status": "COMPLETED",
              "payment_ids": [
                "rXnhZzywrEk4vR6pw76fPZfgvaB"
              ],
              "created_at": "2020-03-31T18:13:15.921Z",
              "updated_at": "2020-03-31T18:13:52.725Z",
              "app_id": "APP_ID",
              "deadline_duration": "PT10M"
            },
            {
              "id": "XlOPTgcEhrbqO",
              "amount_money": {
                "amount": 2610,
                "currency": "USD"
              },
              "reference_id": "id41623",
              "note": "A brief note",
              "device_options": {
                "device_id": "dbb5d83a-7838-11ea-bc55-0242ac130003",
                "tip_settings": {
                  "allow_tipping": false
                },
                "skip_receipt_screen": true
              },
              "status": "COMPLETED",
              "payment_ids": [
                "VYBF861PaoKPP7Pih0TlbZiNvaB"
              ],
              "created_at": "2020-03-31T18:08:31.882Z",
              "updated_at": "2020-03-31T18:08:41.635Z",
              "app_id": "APP_ID",
              "deadline_duration": "PT10M"
            }
          ],
          "cursor": "RiTJqBoTuXlbLmmrPvEkX9iG7XnQ4W4RjGnH"
        },
        "x-release-status": "PUBLIC"
      },
      "SearchTerminalRefundsRequest": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/TerminalRefundQuery"
          },
          "cursor": {
            "type": "string",
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this cursor to retrieve the next set of results for the original query."
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Limits the number of results returned for a single request."
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "limit": 1,
            "query": {
              "filter": {
                "status": "COMPLETED"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "SearchTerminalRefundsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "refunds": {
            "type": "array",
            "description": "The requested search result of `TerminalRefund` objects.",
            "items": {
              "$ref": "#/components/schemas/TerminalRefund"
            }
          },
          "cursor": {
            "type": "string",
            "description": "The pagination cursor to be used in a subsequent request. If empty,\nthis is the final response.\n\nSee [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information."
          }
        },
        "description": "",
        "example": {
          "refunds": [
            {
              "id": "009DP5HD-5O5OvgkcNUhl7JBuINflcjKqUzXZY",
              "refund_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY_43Q4iGp7sNeATiWrUruA1EYeMRUXaddXXlDDJ1EQLvb",
              "payment_id": "5O5OvgkcNUhl7JBuINflcjKqUzXZY",
              "amount_money": {
                "amount": 111,
                "currency": "CAD"
              },
              "reason": "Returning item",
              "device_id": "f72dfb8e-4d65-4e56-aade-ec3fb8d33291",
              "deadline_duration": "PT5M",
              "status": "COMPLETED",
              "created_at": "2020-09-29T15:21:46.771Z",
              "updated_at": "2020-09-29T15:21:48.675Z",
              "app_id": "sandbox-sq0idb-c2OuYt13YaCAeJq_2cd8OQ",
              "card": {
                "card_brand": "INTERAC",
                "last_4": "1111",
                "exp_month": 1,
                "exp_year": 2022,
                "fingerprint": "sq-1-B1fP9MNNmZgVVaPKRND6oDKYbz25S2cTvg9Mzwg3RMTK1zT1PiGRT-AE3nTA8vSmmw",
                "card_type": "CREDIT",
                "bin": "411111"
              },
              "order_id": "kcuKDKreRaI4gF4TjmEgZjHk8Z7YY",
              "location_id": "76C9W6K8CNNQ5"
            }
          ]
        },
        "x-release-status": "PUBLIC"
      },
      "SegmentFilter": {
        "required": [
          "service_variation_id"
        ],
        "type": "object",
        "properties": {
          "service_variation_id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the `CatalogItemVariation` representing the service booked in this segment."
          },
          "team_member_id_filter": {
            "$ref": "#/components/schemas/FilterValue"
          }
        },
        "description": "A query filter to search for appointment segments by.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Shift": {
        "required": [
          "start_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "UUID for this object"
          },
          "employee_id": {
            "type": "string",
            "description": "The ID of the employee this shift belongs to. DEPRECATED at version 2020-08-26. Use `team_member_id` instead",
            "x-is-deprecated": true,
            "x-release-status": "DEPRECATED"
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the location this shift occurred at. Should be based on\nwhere the employee clocked in."
          },
          "timezone": {
            "type": "string",
            "description": "Read-only convenience value that is calculated from the location based\non `location_id`. Format: the IANA Timezone Database identifier for the\nlocation timezone."
          },
          "start_at": {
            "minLength": 1,
            "type": "string",
            "description": "RFC 3339; shifted to location timezone + offset. Precision up to the\nminute is respected; seconds are truncated."
          },
          "end_at": {
            "type": "string",
            "description": "RFC 3339; shifted to timezone + offset. Precision up to the minute is\nrespected; seconds are truncated."
          },
          "wage": {
            "$ref": "#/components/schemas/ShiftWage"
          },
          "breaks": {
            "type": "array",
            "description": "A list of any paid or unpaid breaks that were taken during this shift.",
            "items": {
              "$ref": "#/components/schemas/Break"
            }
          },
          "status": {
            "type": "string",
            "description": "Describes working state of the current `Shift`.\nSee [ShiftStatus](#type-shiftstatus) for possible values"
          },
          "version": {
            "type": "integer",
            "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
          },
          "created_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format; presented in UTC.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format; presented in UTC.",
            "x-read-only": true
          },
          "team_member_id": {
            "type": "string",
            "description": "The ID of the team member this shift belongs to. Replaced `employee_id` at version \"2020-08-26\""
          }
        },
        "description": "A record of the hourly rate, start, and end times for a single work shift\nfor an employee. May include a record of the start and end times for breaks\ntaken during the shift.",
        "x-release-status": "PUBLIC"
      },
      "ShiftFilter": {
        "required": [
          "location_ids",
          "team_member_ids"
        ],
        "type": "object",
        "properties": {
          "location_ids": {
            "type": "array",
            "description": "Fetch shifts for the specified location.",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          },
          "employee_ids": {
            "type": "array",
            "description": "Fetch shifts for the specified employees. DEPRECATED at version 2020-08-26. Use `team_member_ids` instead",
            "items": {
              "type": "string"
            },
            "x-is-deprecated": true,
            "x-release-status": "DEPRECATED"
          },
          "status": {
            "type": "string",
            "description": "Fetch a `Shift` instance by `Shift.status`.\nSee [ShiftFilterStatus](#type-shiftfilterstatus) for possible values"
          },
          "start": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "end": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "workday": {
            "$ref": "#/components/schemas/ShiftWorkday"
          },
          "team_member_ids": {
            "type": "array",
            "description": "Fetch shifts for the specified team members. Replaced `employee_ids` at version \"2020-08-26\"",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        },
        "description": "Defines a filter used in a search for `Shift` records. `AND` logic is\nused by Square's servers to apply each filter property specified.",
        "x-release-status": "PUBLIC"
      },
      "ShiftQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ShiftFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/ShiftSort"
          }
        },
        "description": "The parameters of a `Shift` search query. Includes filter and sort options.",
        "x-release-status": "PUBLIC"
      },
      "ShiftSort": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field to sort on.\nSee [ShiftSortField](#type-shiftsortfield) for possible values"
          },
          "order": {
            "type": "string",
            "description": "The order in which results are returned. Defaults to DESC.\nSee [SortOrder](#type-sortorder) for possible values"
          }
        },
        "description": "Sets the sort order of search results.",
        "x-release-status": "PUBLIC"
      },
      "ShiftWage": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The name of the job performed during this shift. Square\nlabor-reporting UIs may group shifts together by title."
          },
          "hourly_rate": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "The hourly wage rate used to compensate an employee for this shift.",
        "x-release-status": "PUBLIC"
      },
      "ShiftWorkday": {
        "type": "object",
        "properties": {
          "date_range": {
            "$ref": "#/components/schemas/DateRange"
          },
          "match_shifts_by": {
            "type": "string",
            "description": "The strategy on which the dates are applied.\nSee [ShiftWorkdayMatcher](#type-shiftworkdaymatcher) for possible values"
          },
          "default_timezone": {
            "type": "string",
            "description": "Location-specific timezones convert workdays to datetime filters.\nEvery location included in the query must have a timezone, or this field\nmust be provided as a fallback. Format: the IANA timezone database\nidentifier for the relevant timezone."
          }
        },
        "description": "A `Shift` search query filter parameter that sets a range of days that\na `Shift` must start or end in before passing the filter condition.",
        "x-release-status": "PUBLIC"
      },
      "SourceApplication": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "description": "Read-only `Product` type for the application.\nSee [Product](#type-product) for possible values"
          },
          "application_id": {
            "type": "string",
            "description": "Read-only Square ID assigned to the application. Only used for\n`Product` type `EXTERNAL_API`."
          },
          "name": {
            "type": "string",
            "description": "Read-only display name assigned to the application\n(e.g. `\"Custom Application\"`, `\"Square POS 4.74 for Android\"`)."
          }
        },
        "description": "Provides information about the application used to generate a change.",
        "x-release-status": "PUBLIC"
      },
      "StandardUnitDescription": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "name": {
            "type": "string",
            "description": "UI display name of the measurement unit. For example, 'Pound'."
          },
          "abbreviation": {
            "type": "string",
            "description": "UI display abbreviation for the measurement unit. For example, 'lb'."
          }
        },
        "description": "Contains the name and abbreviation for standard measurement unit.",
        "x-release-status": "PUBLIC"
      },
      "StandardUnitDescriptionGroup": {
        "type": "object",
        "properties": {
          "standard_unit_descriptions": {
            "type": "array",
            "description": "List of standard (non-custom) measurement units in this description group.",
            "items": {
              "$ref": "#/components/schemas/StandardUnitDescription"
            }
          },
          "language_code": {
            "type": "string",
            "description": "IETF language tag."
          }
        },
        "description": "Group of standard measurement units.",
        "x-release-status": "PUBLIC"
      },
      "SubmitEvidenceRequest": {
        "type": "object",
        "description": "Defines the parameters for a `SubmitEvidence` request.",
        "example": {
          "request_body": {}
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SubmitEvidenceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "dispute": {
            "$ref": "#/components/schemas/Dispute"
          }
        },
        "description": "Defines the fields in a `SubmitEvidence` response.",
        "example": {
          "dispute": {
            "dispute_id": "EAZoK70gX3fyvibecLwIGB",
            "amount_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "reason": "NO_KNOWLEDGE",
            "state": "PROCESSING",
            "due_at": "2018-11-01T00:00:00.000Z",
            "disputed_payments": [
              {
                "payment_id": "2yeBUWJzllJTpmnSqtMRAL19taB"
              }
            ],
            "evidence_ids": [
              "CKWRhnZN0eMSUbh38BKmD"
            ],
            "card_brand": "VISA",
            "created_at": "2018-10-18T16:02:15.313Z",
            "updated_at": "2018-10-18T16:02:15.313Z",
            "brand_dispute_id": "100000399240"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "type": "string",
            "description": "The Square-assigned ID of the subscription.",
            "x-read-only": true
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the location associated with the subscription.",
            "x-read-only": true
          },
          "plan_id": {
            "type": "string",
            "description": "The ID of the associated `subscription plan`.",
            "x-read-only": true
          },
          "customer_id": {
            "type": "string",
            "description": "The ID of the associated `customer` profile.",
            "x-read-only": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date of the subscription, in YYYY-MM-DD format (for example,\n2013-01-15).",
            "x-read-only": true
          },
          "canceled_date": {
            "type": "string",
            "description": "The subscription cancellation date, in YYYY-MM-DD format (for\nexample, 2013-01-15). On this date, the subscription status changes \nto `CANCELED` and the subscription billing stops. \nIf you don't set this field, the subscription plan dictates if and \nwhen subscription ends. \n\nYou cannot update this field, you can only clear it."
          },
          "status": {
            "type": "string",
            "description": "The current status of the subscription.\nSee [SubscriptionStatus](#type-subscriptionstatus) for possible values",
            "x-read-only": true
          },
          "tax_percentage": {
            "type": "string",
            "description": "The tax amount applied when billing the subscription. The\npercentage is expressed in decimal form, using a `'.'` as the decimal\nseparator and without a `'%'` sign. For example, a value of `7.5`\ncorresponds to 7.5%."
          },
          "invoice_ids": {
            "type": "array",
            "description": "The IDs of the `invoices` created for the \nsubscription, listed in order when the invoices were created \n(oldest invoices appear first).",
            "items": {
              "type": "string"
            },
            "x-read-only": true
          },
          "price_override_money": {
            "$ref": "#/components/schemas/Money"
          },
          "version": {
            "type": "integer",
            "description": "The version of the object. When updating an object, the version\nsupplied must match the version in the database, otherwise the write will\nbe rejected as conflicting.",
            "format": "int64"
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp when the subscription was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "card_id": {
            "type": "string",
            "description": "The ID of the `customer](#type-customer) [card`\nthat is charged for the subscription."
          },
          "paid_until_date": {
            "type": "string",
            "description": "The date up to which the customer is invoiced for the\nsubscription, in YYYY-MM-DD format (for example, 2013-01-15).\n\nAfter the invoice is paid for a given billing period,\nthis date will be the last day of the billing period.\nFor example,\nsuppose for the month of May a customer gets an invoice\n(or charged the card) on May 1. For the monthly billing scenario,\nthis date is then set to May 31.",
            "x-read-only": true
          },
          "timezone": {
            "type": "string",
            "description": "Timezone that will be used in date calculations for the subscription.\nDefaults to the timezone of the location based on `location_id`.\nFormat: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).",
            "x-read-only": true
          }
        },
        "description": "Represents a customer subscription to a subscription plan.\nFor an overview of the `Subscription` type, see \n[Subscription object](/docs/subscriptions-api/overview#subscription-object-overview).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SubscriptionEvent": {
        "required": [
          "effective_date",
          "id",
          "plan_id",
          "subscription_event_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the subscription event."
          },
          "subscription_event_type": {
            "type": "string",
            "description": "Type of the subscription event.\nSee [SubscriptionEventSubscriptionEventType](#type-subscriptioneventsubscriptioneventtype) for possible values"
          },
          "effective_date": {
            "type": "string",
            "description": "The date, in YYYY-MM-DD format (for\nexample, 2013-01-15), when the subscription event went into effect."
          },
          "plan_id": {
            "type": "string",
            "description": "The ID of the subscription plan associated with the subscription."
          }
        },
        "description": "Describes changes to subscription and billing states.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "SubscriptionPhase": {
        "required": [
          "cadence",
          "recurring_price_money"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The Square-assigned ID of the subscription phase. This field cannot be changed after a `SubscriptionPhase` is created."
          },
          "cadence": {
            "type": "string",
            "description": "The billing cadence of the phase. For example, weekly or monthly. This field cannot be changed after a `SubscriptionPhase` is created.\nSee [SubscriptionCadence](#type-subscriptioncadence) for possible values"
          },
          "periods": {
            "type": "integer",
            "description": "The number of `cadence`s the phase lasts. If not set, the phase never ends. Only the last phase can be indefinite. This field cannot be changed after a `SubscriptionPhase` is created."
          },
          "recurring_price_money": {
            "$ref": "#/components/schemas/Money"
          },
          "ordinal": {
            "type": "integer",
            "description": "The position this phase appears in the sequence of phases defined for the plan, indexed from 0. This field cannot be changed after a `SubscriptionPhase` is created.",
            "format": "int64"
          }
        },
        "description": "Describes a phase in a subscription plan. For more information, see\n[Set Up and Manage a Subscription Plan](/docs/subscriptions-api/setup-plan).",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "TeamMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID for the team member.",
            "x-read-only": true
          },
          "reference_id": {
            "type": "string",
            "description": "A second ID used to associate the team member with an entity in another system."
          },
          "is_owner": {
            "type": "boolean",
            "description": "Whether the team member is the owner of the Square account.",
            "x-read-only": true
          },
          "status": {
            "type": "string",
            "description": "Describes the status of the team member.\nSee [TeamMemberStatus](#type-teammemberstatus) for possible values"
          },
          "given_name": {
            "type": "string",
            "description": "The given (i.e., first) name associated with the team member."
          },
          "family_name": {
            "type": "string",
            "description": "The family (i.e., last) name associated with the team member."
          },
          "email_address": {
            "type": "string",
            "description": "The email address associated with the team member."
          },
          "phone_number": {
            "type": "string",
            "description": "The team member's phone number in E.164 format. Examples:\n+14155552671 - the country code is 1 for US\n+551155256325 - the country code is 55 for BR"
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp in RFC 3339 format describing when the team member was created.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp in RFC 3339 format describing when the team member was last updated.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
            "x-read-only": true
          },
          "assigned_locations": {
            "$ref": "#/components/schemas/TeamMemberAssignedLocations"
          }
        },
        "description": "A record representing an individual team member for a business.",
        "x-release-status": "PUBLIC"
      },
      "TeamMemberAssignedLocations": {
        "type": "object",
        "properties": {
          "assignment_type": {
            "type": "string",
            "description": "The current assignment type of the team member.\nSee [TeamMemberAssignedLocationsAssignmentType](#type-teammemberassignedlocationsassignmenttype) for possible values"
          },
          "location_ids": {
            "type": "array",
            "description": "The locations that the team member is assigned to.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "An object that represents a team member's assignment to locations.",
        "x-release-status": "PUBLIC"
      },
      "TeamMemberBookingProfile": {
        "type": "object",
        "properties": {
          "team_member_id": {
            "type": "string",
            "description": "The ID of the `TeamMember` object for the team member associated with the booking profile."
          },
          "description": {
            "type": "string",
            "description": "The description of the team member."
          },
          "display_name": {
            "type": "string",
            "description": "The display name of the team member."
          },
          "is_bookable": {
            "type": "boolean",
            "description": "Indicates whether the team member can be booked through the Bookings API or the seller's online booking channel or site (`true) or not (`false`)."
          },
          "profile_image_url": {
            "type": "string",
            "description": "The URL of the team member's image for the bookings profile."
          }
        },
        "description": "The booking profile of a seller's team member, including the team member's ID, display name, description and whether the team member can be booked as a service provider.",
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "TeamMemberWage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID for this object."
          },
          "team_member_id": {
            "type": "string",
            "description": "The `Team Member` that this wage is assigned to."
          },
          "title": {
            "type": "string",
            "description": "The job title that this wage relates to."
          },
          "hourly_rate": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "The hourly wage rate that a team member will earn on a `Shift` for doing the job\nspecified by the `title` property of this object.",
        "x-release-status": "PUBLIC"
      },
      "Tender": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 192,
            "type": "string",
            "description": "The tender's unique ID."
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The ID of the transaction's associated location."
          },
          "transaction_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the tender's associated transaction."
          },
          "created_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp for when the tender was created, in RFC 3339 format.",
            "x-read-only": true
          },
          "note": {
            "maxLength": 500,
            "type": "string",
            "description": "An optional note associated with the tender at the time of payment."
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "tip_money": {
            "$ref": "#/components/schemas/Money"
          },
          "processing_fee_money": {
            "$ref": "#/components/schemas/Money"
          },
          "customer_id": {
            "maxLength": 191,
            "type": "string",
            "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer."
          },
          "type": {
            "type": "string",
            "description": "The type of tender, such as `CARD` or `CASH`.\nSee [TenderType](#type-tendertype) for possible values"
          },
          "card_details": {
            "$ref": "#/components/schemas/TenderCardDetails"
          },
          "cash_details": {
            "$ref": "#/components/schemas/TenderCashDetails"
          },
          "additional_recipients": {
            "type": "array",
            "description": "Additional recipients (other than the merchant) receiving a portion of this tender.\nFor example, fees assessed on the purchase by a third party integration.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRecipient"
            }
          },
          "payment_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The ID of the `Payment` that corresponds to this tender.\nThis value is only present for payments created with the v2 Payments API."
          }
        },
        "description": "Represents a tender (i.e., a method of payment) used in a Square transaction.",
        "x-release-status": "PUBLIC"
      },
      "TenderCardDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The credit card payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See `TenderCardDetailsStatus`\nfor possible values.\nSee [TenderCardDetailsStatus](#type-tendercarddetailsstatus) for possible values"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "entry_method": {
            "type": "string",
            "description": "The method used to enter the card's details for the transaction.\nSee [TenderCardDetailsEntryMethod](#type-tendercarddetailsentrymethod) for possible values"
          }
        },
        "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`",
        "x-release-status": "PUBLIC"
      },
      "TenderCashDetails": {
        "type": "object",
        "properties": {
          "buyer_tendered_money": {
            "$ref": "#/components/schemas/Money"
          },
          "change_back_money": {
            "$ref": "#/components/schemas/Money"
          }
        },
        "description": "Represents the details of a tender with `type` `CASH`.",
        "x-release-status": "PUBLIC"
      },
      "TerminalCheckout": {
        "required": [
          "amount_money",
          "device_options"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "minLength": 10,
            "type": "string",
            "description": "A unique ID for this `TerminalCheckout`.",
            "x-read-only": true
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "An optional user-defined reference ID that can be used to associate\nthis `TerminalCheckout` to another entity in an external system. For example, an order\nID generated by a third-party shopping cart. The ID is also associated with any payments\nused to complete the checkout."
          },
          "note": {
            "maxLength": 250,
            "type": "string",
            "description": "An optional note to associate with the checkout, as well as with any payments used to complete the checkout."
          },
          "device_options": {
            "$ref": "#/components/schemas/DeviceCheckoutOptions"
          },
          "deadline_duration": {
            "type": "string",
            "description": "An RFC 3339 duration, after which the checkout is automatically canceled.\nA `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and has a cancellation reason\nof `TIMED_OUT`.\n\nDefault: 5 minutes from creation\n\nMaximum: 5 minutes"
          },
          "status": {
            "type": "string",
            "description": "The status of the `TerminalCheckout`.\nOptions: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, `COMPLETED`",
            "x-read-only": true
          },
          "cancel_reason": {
            "type": "string",
            "description": "Present if the status is `CANCELED`.\nSee [ActionCancelReason](#type-actioncancelreason) for possible values",
            "x-read-only": true
          },
          "payment_ids": {
            "type": "array",
            "description": "A list of IDs for payments created by this `TerminalCheckout`.",
            "items": {
              "type": "string"
            },
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The time when the `TerminalCheckout` was created, as an RFC 3339 timestamp.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The time when the `TerminalCheckout` was last updated, as an RFC 3339 timestamp.",
            "x-read-only": true
          },
          "app_id": {
            "type": "string",
            "description": "The ID of the application that created the checkout.",
            "x-read-only": true
          },
          "location_id": {
            "type": "string",
            "description": "The location of the device where the `TerminalCheckout` was directed.",
            "x-read-only": true
          },
          "payment_type": {
            "type": "string",
            "description": "The type of payment the terminal should attempt to capture from. Defaults to `CARD_PRESENT`.\nSee [TerminalCheckoutPaymentType](#type-terminalcheckoutpaymenttype) for possible values"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalCheckoutQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TerminalCheckoutQueryFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/TerminalCheckoutQuerySort"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalCheckoutQueryFilter": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The `TerminalCheckout` objects associated with a specific device. If no device is specified, then all\n`TerminalCheckout` objects for the merchant are displayed."
          },
          "created_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "status": {
            "type": "string",
            "description": "Filtered results with the desired status of the `TerminalCheckout`.\nOptions: PENDING, IN_PROGRESS, CANCELED, COMPLETED"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalCheckoutQuerySort": {
        "type": "object",
        "properties": {
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed.\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalRefund": {
        "required": [
          "amount_money",
          "payment_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 255,
            "minLength": 10,
            "type": "string",
            "description": "A unique ID for this `TerminalRefund`.",
            "x-read-only": true
          },
          "refund_id": {
            "type": "string",
            "description": "The reference to the payment refund created by completing this `TerminalRefund`.",
            "x-read-only": true
          },
          "payment_id": {
            "minLength": 1,
            "type": "string",
            "description": "The unique ID of the payment being refunded."
          },
          "order_id": {
            "type": "string",
            "description": "The reference to the Square order ID for the payment identified by the `payment_id`.",
            "x-read-only": true
          },
          "amount_money": {
            "$ref": "#/components/schemas/Money"
          },
          "reason": {
            "maxLength": 192,
            "type": "string",
            "description": "A description of the reason for the refund.\nNote: maximum 192 characters"
          },
          "device_id": {
            "type": "string",
            "description": "The unique ID of the device intended for this `TerminalRefund`.\nThe Id can be retrieved from /v2/devices api."
          },
          "deadline_duration": {
            "type": "string",
            "description": "The RFC 3339 duration, after which the refund is automatically canceled.\nA `TerminalRefund` that is `PENDING` is automatically `CANCELED` and has a cancellation reason\nof `TIMED_OUT`.\n\nDefault: 5 minutes from creation.\n\nMaximum: 5 minutes"
          },
          "status": {
            "type": "string",
            "description": "The status of the `TerminalRefund`.\nOptions: `PENDING`, `IN_PROGRESS`, `CANCELED`, or `COMPLETED`.",
            "x-read-only": true
          },
          "cancel_reason": {
            "type": "string",
            "description": "Present if the status is `CANCELED`.\nSee [ActionCancelReason](#type-actioncancelreason) for possible values",
            "x-read-only": true
          },
          "created_at": {
            "type": "string",
            "description": "The time when the `TerminalRefund` was created, as an RFC 3339 timestamp.",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The time when the `TerminalRefund` was last updated, as an RFC 3339 timestamp.",
            "x-read-only": true
          },
          "app_id": {
            "type": "string",
            "description": "The ID of the application that created the refund.",
            "x-read-only": true
          },
          "location_id": {
            "type": "string",
            "description": "The location of the device where the `TerminalRefund` was directed.",
            "x-read-only": true
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalRefundQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TerminalRefundQueryFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/TerminalRefundQuerySort"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalRefundQueryFilter": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "`TerminalRefund` objects associated with a specific device. If no device is specified, then all\n`TerminalRefund` objects for the signed-in account are displayed."
          },
          "created_at": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "status": {
            "type": "string",
            "description": "Filtered results with the desired status of the `TerminalRefund`.\nOptions: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, or `COMPLETED`."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TerminalRefundQuerySort": {
        "type": "object",
        "properties": {
          "sort_order": {
            "type": "string",
            "description": "The order in which results are listed.\n- `ASC` - Oldest to newest.\n- `DESC` - Newest to oldest (default)."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "TimeRange": {
        "type": "object",
        "properties": {
          "start_at": {
            "type": "string",
            "description": "A datetime value in RFC 3339 format indicating when the time range\nstarts."
          },
          "end_at": {
            "type": "string",
            "description": "A datetime value in RFC 3339 format indicating when the time range\nends."
          }
        },
        "description": "Represents a generic time range. The start and end values are\nrepresented in RFC 3339 format. Time ranges are customized to be\ninclusive or exclusive based on the needs of a particular endpoint.\nRefer to the relevant endpoint-specific documentation to determine\nhow time ranges are handled.",
        "x-release-status": "PUBLIC"
      },
      "TipSettings": {
        "type": "object",
        "properties": {
          "allow_tipping": {
            "type": "boolean",
            "description": "Indicates whether tipping is enabled for this checkout. Defaults to false."
          },
          "separate_tip_screen": {
            "type": "boolean",
            "description": "Indicates whether tip options should be presented on the screen before presenting\nthe signature screen during card payment. Defaults to false."
          },
          "custom_tip_field": {
            "type": "boolean",
            "description": "Indicates whether custom tip amounts are allowed during the checkout flow. Defaults to false."
          },
          "tip_percentages": {
            "type": "array",
            "description": "A list of tip percentages that should be presented during the checkout flow, specified as\nup to 3 non-negative integers from 0 to 100 (inclusive). Defaults to 15, 20, and 25.",
            "items": {
              "type": "integer"
            }
          },
          "smart_tipping": {
            "type": "boolean",
            "description": "Enables the \"Smart Tip Amounts\" behavior.\nExact tipping options depend on the region in which the Square seller is active.\n\nIn the United States and Canada, tipping options are presented in whole dollar amounts for\npayments under $10 USD/CAD respectively.\n\nIf set to true, the `tip_percentages` settings is ignored.\nDefaults to false.\n\nTo learn more about smart tipping, see [Accept Tips with the Square App](https://squareup.com/help/us/en/article/5069-accept-tips-with-the-square-app)."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 192,
            "type": "string",
            "description": "The transaction's unique ID, issued by Square payments servers."
          },
          "location_id": {
            "maxLength": 50,
            "type": "string",
            "description": "The ID of the transaction's associated location."
          },
          "created_at": {
            "maxLength": 32,
            "type": "string",
            "description": "The timestamp for when the transaction was created, in RFC 3339 format."
          },
          "tenders": {
            "type": "array",
            "description": "The tenders used to pay in the transaction.",
            "items": {
              "$ref": "#/components/schemas/Tender"
            }
          },
          "refunds": {
            "type": "array",
            "description": "Refunds that have been applied to any tender in the transaction.",
            "items": {
              "$ref": "#/components/schemas/Refund"
            }
          },
          "reference_id": {
            "maxLength": 40,
            "type": "string",
            "description": "If the transaction was created with the `Charge`\nendpoint, this value is the same as the value provided for the `reference_id`\nparameter in the request to that endpoint. Otherwise, it is not set."
          },
          "product": {
            "type": "string",
            "description": "The Square product that processed the transaction.\nSee [TransactionProduct](#type-transactionproduct) for possible values"
          },
          "client_id": {
            "maxLength": 192,
            "type": "string",
            "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction's canonical `id`, which is\ngenerated by Square's backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "order_id": {
            "maxLength": 192,
            "type": "string",
            "description": "The order_id is an identifier for the order associated with this transaction, if any."
          }
        },
        "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Point of Sale.\n\nThe `tenders` field of this object lists all methods of payment used to pay in\nthe transaction.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "UpdateBookingRequest": {
        "required": [
          "booking"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "maxLength": 255,
            "type": "string",
            "description": "A unique key to make this request an idempotent operation."
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        },
        "description": "",
        "example": {
          "booking": {
            "version": 1,
            "customer_note": "I would like to sit near the window please"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "",
        "example": {
          "booking": {
            "id": "zkras0xv0xwswx",
            "version": 2,
            "status": "ACCEPTED",
            "created_at": "2020-10-28T15:47:41Z",
            "updated_at": "2020-10-28T15:49:25Z",
            "location_id": "LEQHH0YY8B42M",
            "customer_id": "EX2QSVGTZN4K1E5QE1CBFNVQ8M",
            "customer_note": "I would like to sit near the window please",
            "seller_note": "",
            "start_at": "2020-11-26T13:00:00Z",
            "appointment_segments": [
              {
                "duration_minutes": 60,
                "service_variation_id": "RU3PBTZTK7DXZDQFCJHOK2MC",
                "team_member_id": "TMXUrsBWWcHTt79t",
                "service_variation_version": 1599775456731
              }
            ]
          },
          "errors": []
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateBreakTypeRequest": {
        "required": [
          "break_type"
        ],
        "type": "object",
        "properties": {
          "break_type": {
            "$ref": "#/components/schemas/BreakType"
          }
        },
        "description": "A request to update a `BreakType`",
        "example": {
          "request_body": {
            "break_type": {
              "location_id": "26M7H24AZ9N6R",
              "break_name": "Lunch",
              "expected_duration": "PT50M",
              "is_paid": true,
              "version": 1
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateBreakTypeResponse": {
        "type": "object",
        "properties": {
          "break_type": {
            "$ref": "#/components/schemas/BreakType"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "A response to a request to update a `BreakType`. Contains\nthe requested `BreakType` objects. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "break_type": {
            "id": "Q6JSJS6D4DBCH",
            "location_id": "26M7H24AZ9N6R",
            "break_name": "Lunch",
            "expected_duration": "PT50M",
            "is_paid": true,
            "version": 2,
            "created_at": "2018-06-12T20:19:12Z",
            "updated_at": "2019-02-26T23:12:59Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateCustomerGroupRequest": {
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          }
        },
        "description": "Defines the body parameters that can be provided in a request to the\n[UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.",
        "example": {
          "request_body": {
            "group": {
              "name": "Loyal Customers"
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateCustomerGroupResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomerGroup](#endpoint-updatecustomergroup) endpoint.\n\nOne of `errors` or `group` is present in a given response (never both).",
        "example": {
          "group": {
            "id": "2TAT3CMH4Q0A9M87XJZED0WMR3",
            "name": "Loyal Customers",
            "created_at": "2020-04-13T21:54:57.863Z",
            "updated_at": "2020-04-13T21:54:58Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateCustomerRequest": {
        "type": "object",
        "properties": {
          "given_name": {
            "type": "string",
            "description": "The given (i.e., first) name associated with the customer profile."
          },
          "family_name": {
            "type": "string",
            "description": "The family (i.e., last) name associated with the customer profile."
          },
          "company_name": {
            "type": "string",
            "description": "A business name associated with the customer profile."
          },
          "nickname": {
            "type": "string",
            "description": "A nickname for the customer profile."
          },
          "email_address": {
            "type": "string",
            "description": "The email address associated with the customer profile."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "type": "string",
            "description": "The 11-digit phone number associated with the customer profile."
          },
          "reference_id": {
            "type": "string",
            "description": "An optional, second ID used to associate the customer profile with an\nentity in another system."
          },
          "note": {
            "type": "string",
            "description": "A custom note associated with the customer profile."
          },
          "birthday": {
            "type": "string",
            "description": "The birthday associated with the customer profile, in RFC 3339 format.\nYear is optional, timezone and times are not allowed.\nFor example: `0000-09-01T00:00:00-00:00` indicates a birthday on September 1st.\n`1998-09-01T00:00:00-00:00` indications a birthday on September 1st __1998__."
          }
        },
        "description": "Defines the body parameters that can be provided in a request to the\nUpdateCustomer endpoint.",
        "example": {
          "request_body": {
            "phone_number": "",
            "email_address": "New.Amelia.Earhart@example.com",
            "note": "updated customer note"
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.python",
          "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp",
          "java": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.java",
          "php": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.php",
          "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.javascript",
          "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby"
        }
      },
      "UpdateCustomerResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the UpdateCustomer endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
        "example": {
          "customer": {
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "created_at": "2016-03-23T20:21:54.859Z",
            "updated_at": "2016-03-25T20:21:55Z",
            "given_name": "Amelia",
            "family_name": "Earhart",
            "email_address": "New.Amelia.Earhart@example.com",
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "locality": "New York",
              "administrative_district_level_1": "NY",
              "postal_code": "10003",
              "country": "US"
            },
            "reference_id": "YOUR_REFERENCE_ID",
            "note": "updated customer note",
            "groups": [
              {
                "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
                "name": "Aviation Enthusiasts"
              }
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.python",
          "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp",
          "java": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.java",
          "php": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.php",
          "javascript": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.javascript",
          "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby"
        }
      },
      "UpdateInvoiceRequest": {
        "required": [
          "invoice"
        ],
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "idempotency_key": {
            "maxLength": 128,
            "type": "string",
            "description": "A unique string that identifies the `UpdateInvoice` request. If you do not\nprovide `idempotency_key` (or provide an empty string as the value), the endpoint\ntreats each request as independent.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/docs/working-with-apis/idempotency)."
          },
          "fields_to_clear": {
            "type": "array",
            "description": "The list of fields to clear.\nFor examples, see [Update an invoice](https://developer.squareup.com/docs/docs/invoices-api/overview#update-an-invoice).",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Describes a `UpdateInvoice` request.",
        "example": {
          "request_body": {
            "idempotency_key": "4ee82288-0910-499e-ab4c-5d0071dad1be",
            "invoice": {
              "payment_requests": [
                {
                  "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                  "tipping_enabled": false
                }
              ]
            },
            "fields_to_clear": [
              "payments_requests[2da7964f-f3d2-4f43-81e8-5aa220bf3355].reminders"
            ]
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateInvoiceResponse": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Describes a `UpdateInvoice` response.",
        "example": {
          "invoice": {
            "id": "gt2zv1z6mnUm1V7KMxxf3w",
            "version": 2,
            "location_id": "ES0RJRZYEC39A",
            "order_id": "CAISENgvlJ6jLWAzERDzjyHVybY",
            "payment_requests": [
              {
                "uid": "2da7964f-f3d2-4f43-81e8-5aa220bf3355",
                "request_type": "BALANCE",
                "due_date": "2030-01-24",
                "tipping_enabled": false,
                "computed_amount_money": {
                  "amount": 10000,
                  "currency": "USD"
                },
                "total_completed_amount_money": {
                  "amount": 0,
                  "currency": "USD"
                },
                "automatic_payment_source": "NONE"
              }
            ],
            "invoice_number": "inv-100",
            "title": "Event Planning Services",
            "description": "We appreciate your business!",
            "scheduled_at": "2030-01-13T10:00:00Z",
            "status": "UNPAID",
            "timezone": "America/Los_Angeles",
            "created_at": "2020-06-18T17:45:13Z",
            "updated_at": "2020-06-18T18:23:11Z",
            "primary_recipient": {
              "customer_id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
              "given_name": "Amelia",
              "family_name": "Earhart",
              "email_address": "Amelia.Earhart@example.com",
              "phone_number": "1-212-555-4240"
            },
            "next_payment_amount_money": {
              "amount": 10000,
              "currency": "USD"
            },
            "custom_fields": [
              {
                "label": "Event Reference Number",
                "value": "Ref. #1234",
                "placement": "ABOVE_LINE_ITEMS"
              },
              {
                "label": "Terms of Service",
                "value": "The terms of service are...",
                "placement": "BELOW_LINE_ITEMS"
              }
            ],
            "delivery_method": "EMAIL"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateItemModifierListsRequest": {
        "required": [
          "item_ids"
        ],
        "type": "object",
        "properties": {
          "item_ids": {
            "type": "array",
            "description": "The IDs of the catalog items associated with the CatalogModifierList objects being updated.",
            "items": {
              "type": "string"
            }
          },
          "modifier_lists_to_enable": {
            "type": "array",
            "description": "The IDs of the CatalogModifierList objects to enable for the CatalogItem.",
            "items": {
              "type": "string"
            }
          },
          "modifier_lists_to_disable": {
            "type": "array",
            "description": "The IDs of the CatalogModifierList objects to disable for the CatalogItem.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "item_ids": [
              "H42BRLUJ5KTZTTMPVSLFAACQ",
              "2JXOBJIHCWBQ4NZ3RIXQGJA6"
            ],
            "modifier_lists_to_enable": [
              "H42BRLUJ5KTZTTMPVSLFAACQ",
              "2JXOBJIHCWBQ4NZ3RIXQGJA6"
            ],
            "modifier_lists_to_disable": [
              "7WRC16CJZDVLSNDQ35PP6YAD"
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python",
          "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp",
          "java": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.java",
          "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php",
          "javascript": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.javascript",
          "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby"
        }
      },
      "UpdateItemModifierListsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-date) of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`."
          }
        },
        "description": "",
        "example": {
          "updated_at": "2016-11-16T22:25:24.878Z"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python",
          "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp",
          "java": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.java",
          "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php",
          "javascript": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.javascript",
          "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby"
        }
      },
      "UpdateItemTaxesRequest": {
        "required": [
          "item_ids"
        ],
        "type": "object",
        "properties": {
          "item_ids": {
            "type": "array",
            "description": "IDs for the CatalogItems associated with the CatalogTax objects being updated.",
            "items": {
              "type": "string"
            }
          },
          "taxes_to_enable": {
            "type": "array",
            "description": "IDs of the CatalogTax objects to enable.",
            "items": {
              "type": "string"
            }
          },
          "taxes_to_disable": {
            "type": "array",
            "description": "IDs of the CatalogTax objects to disable.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "item_ids": [
              "H42BRLUJ5KTZTTMPVSLFAACQ",
              "2JXOBJIHCWBQ4NZ3RIXQGJA6"
            ],
            "taxes_to_enable": [
              "4WRCNHCJZDVLSNDQ35PP6YAD"
            ],
            "taxes_to_disable": [
              "AQCEGCEBBQONINDOHRGZISEX"
            ]
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python",
          "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp",
          "java": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.java",
          "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php",
          "javascript": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.javascript",
          "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby"
        }
      },
      "UpdateItemTaxesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`."
          }
        },
        "description": "",
        "example": {
          "updated_at": "2016-11-16T22:25:24.878Z"
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python",
          "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp",
          "java": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.java",
          "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php",
          "javascript": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.javascript",
          "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby"
        }
      },
      "UpdateLocationRequest": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Request object for the [UpdateLocation](#endpoint-updatelocation) endpoint.",
        "example": {
          "request_body": {
            "location": {
              "name": "Updated nickname",
              "description": "Updated description",
              "twitter_username": "twitter",
              "instagram_username": "instagram",
              "address": {
                "address_line_1": "1234 Peachtree St. NE",
                "administrative_district_level_1": "GA",
                "locality": "Atlanta",
                "postal_code": "30309"
              },
              "business_hours": {
                "periods": [
                  {
                    "day_of_week": "MON",
                    "start_local_time": "09:00",
                    "end_local_time": "17:00"
                  }
                ]
              }
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateLocationResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information on errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "Response object returned by the [UpdateLocation](#endpoint-updatelocation) endpoint.",
        "example": {
          "location": {
            "id": "LOCATION_ID",
            "name": "Updated nickname",
            "address": {
              "address_line_1": "1234 Peachtree St. NE",
              "locality": "Atlanta",
              "administrative_district_level_1": "GA",
              "postal_code": "30309"
            },
            "timezone": "America/New_York",
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "status": "ACTIVE",
            "created_at": "2019-07-19T17:58:25Z",
            "merchant_id": "MERCHANT_ID",
            "country": "US",
            "language_code": "en-US",
            "currency": "USD",
            "phone_number": "5559211234",
            "business_name": "Business Name",
            "type": "MOBILE",
            "website_url": "examplewebsite.com",
            "business_hours": {
              "periods": [
                {
                  "day_of_week": "MON",
                  "start_local_time": "09:00",
                  "end_local_time": "17:00"
                }
              ]
            },
            "business_email": "example@squareup.com",
            "description": "Updated description",
            "twitter_username": "twitter",
            "instagram_username": "instagram",
            "coordinates": {
              "latitude": 33.788567,
              "longitude": -84.466947
            },
            "mcc": "1234"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateOrderRequest": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "fields_to_clear": {
            "type": "array",
            "description": "The [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)\nfields to clear. For example, `line_items[uid].note`\n[Read more about Deleting fields](https://developer.squareup.com/docs/orders-api/manage-orders#delete-fields).",
            "items": {
              "type": "string"
            }
          },
          "idempotency_key": {
            "maxLength": 192,
            "type": "string",
            "description": "A value you specify that uniquely identifies this update request\n\nIf you're unsure whether a particular update was applied to an order successfully,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate updates to the order.\nThe latest order version will be returned.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          }
        },
        "description": "Defines the fields that are included in requests to the\n[UpdateOrder](#endpoint-orders-updateorder) endpoint.",
        "example": {
          "request_body": {
            "idempotency_key": "UNIQUE_STRING",
            "order": {
              "version": 1,
              "line_items": [
                {
                  "uid": "cookie_uid",
                  "quantity": "2",
                  "name": "COOKIE",
                  "base_price_money": {
                    "amount": 200,
                    "currency": "USD"
                  }
                }
              ]
            },
            "fields_to_clear": [
              "discounts"
            ]
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateOrderResponse": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [UpdateOrder](#endpoint-orders-updateorder) endpoint.",
        "example": {
          "order": {
            "version": 2,
            "total_money": {
              "currency": "USD",
              "amount": 900
            },
            "source": {
              "name": "Cookies"
            },
            "line_items": [
              {
                "total_tax_money": {
                  "currency": "USD",
                  "amount": 0
                },
                "total_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "base_price_money": {
                  "amount": 500,
                  "currency": "USD"
                },
                "quantity": "1",
                "total_discount_money": {
                  "currency": "USD",
                  "amount": 0
                },
                "name": "Small Coffee",
                "uid": "EuYkakhmu3ksHIds5Hiot",
                "variation_total_price_money": {
                  "amount": 500,
                  "currency": "USD"
                }
              },
              {
                "total_money": {
                  "amount": 400,
                  "currency": "USD"
                },
                "gross_sales_money": {
                  "currency": "USD",
                  "amount": 400
                },
                "total_tax_money": {
                  "currency": "USD",
                  "amount": 0
                },
                "variation_total_price_money": {
                  "currency": "USD",
                  "amount": 400
                },
                "name": "COOKIE",
                "uid": "cookie_uid",
                "base_price_money": {
                  "amount": 200,
                  "currency": "USD"
                },
                "quantity": "2",
                "total_discount_money": {
                  "amount": 0,
                  "currency": "USD"
                }
              }
            ],
            "state": "OPEN",
            "total_service_charge_money": {
              "amount": 0,
              "currency": "USD"
            },
            "id": "DREk7wJcyXNHqULq8JJ2iPAsluJZY",
            "location_id": "MXVQSVNDGN3C8",
            "total_tax_money": {
              "amount": 0,
              "currency": "USD"
            },
            "created_at": "2019-08-23T18:26:18.243Z",
            "total_discount_money": {
              "amount": 0,
              "currency": "USD"
            },
            "net_amounts": {
              "service_charge_money": {
                "currency": "USD",
                "amount": 0
              },
              "total_money": {
                "amount": 900,
                "currency": "USD"
              },
              "discount_money": {
                "currency": "USD",
                "amount": 0
              },
              "tax_money": {
                "currency": "USD",
                "amount": 0
              }
            },
            "updated_at": "2019-08-23T18:33:47.523Z"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdatePaymentRequest": {
        "required": [
          "idempotency_key"
        ],
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "idempotency_key": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string",
            "description": "A unique string that identifies this `UpdatePayment` request. Keys can be any valid string\nbut must be unique for every `UpdatePayment` request.\n\nThe maximum is 45 characters.\n\nFor more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency)."
          }
        },
        "description": "Describes a request to update a payment using \n[UpdatePayment](#endpoint-payments-updatepayment).",
        "example": {
          "request_body": {
            "idempotency_key": "3d3c3b22-9572-4fc6-1111-e4d2f41b4122",
            "payment": {
              "amount_money": {
                "amount": 1000,
                "currency": "USD"
              },
              "tip_money": {
                "amount": 300,
                "currency": "USD"
              },
              "version_token": "Z3okDzm2VRv5m5nE3WGx381ItTNhvjkB4VapByyz54h6o"
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdatePaymentResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "description": "Defines the response returned by \n[UpdatePayment](#endpoint-payments-update).",
        "example": {
          "payment": {
            "id": "XllelosAAfmkf9mOa0YB4PqSZACZY",
            "created_at": "2021-03-02T19:53:31.055Z",
            "updated_at": "2021-03-02T19:53:31.164Z",
            "amount_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "tip_money": {
              "amount": 300,
              "currency": "USD"
            },
            "status": "APPROVED",
            "delay_duration": "PT168H",
            "source_type": "CARD",
            "card_details": {
              "status": "AUTHORIZED",
              "card": {
                "card_brand": "VISA",
                "last_4": "1111",
                "exp_month": 2,
                "exp_year": 2022,
                "fingerprint": "sq-1-n_BL15KP87ClDa4-h2nXOI0fp5VnxNH6hfhzqhptTfAgxgLuGFcg6jIPngDz4IkkTQ",
                "card_type": "CREDIT",
                "bin": "411111"
              },
              "entry_method": "KEYED",
              "cvv_status": "CVV_ACCEPTED",
              "avs_status": "AVS_ACCEPTED",
              "auth_result_code": "ajM2ZF",
              "statement_description": "SQ *MY BUSINESS GOSQ.COM",
              "card_payment_timeline": {
                "authorized_at": "2021-02-24T03:33:43.681Z"
              }
            },
            "location_id": "XTI0H92143A39",
            "order_id": "B6qiKWus1d3TBoN2Qn5kfDiWZlfZY",
            "total_money": {
              "amount": 1300,
              "currency": "USD"
            },
            "approved_money": {
              "amount": 1000,
              "currency": "USD"
            },
            "capabilities": [
              "EDIT_AMOUNT_UP",
              "EDIT_AMOUNT_DOWN",
              "EDIT_TIP_AMOUNT_UP",
              "EDIT_TIP_AMOUNT_DOWN"
            ],
            "receipt_number": "Xlle",
            "delay_action": "CANCEL",
            "delayed_until": "2021-03-09T19:53:31.055Z",
            "version_token": "9TKsTawsWZvdZZD5uhAZFWfd3chxFXB49cgFpD2Kujf6o"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateShiftRequest": {
        "required": [
          "shift"
        ],
        "type": "object",
        "properties": {
          "shift": {
            "$ref": "#/components/schemas/Shift"
          }
        },
        "description": "A request to update a `Shift` object.",
        "example": {
          "request_body": {
            "shift": {
              "team_member_id": "ormj0jJJZ5OZIzxrZYJI",
              "location_id": "PAA1RJZZKXBFG",
              "start_at": "2019-01-25T03:11:00-05:00",
              "end_at": "2019-01-25T13:11:00-05:00",
              "wage": {
                "title": "Bartender",
                "hourly_rate": {
                  "amount": 1500,
                  "currency": "USD"
                }
              },
              "breaks": [
                {
                  "id": "X7GAQYVVRRG6P",
                  "start_at": "2019-01-25T06:11:00-05:00",
                  "end_at": "2019-01-25T06:16:00-05:00",
                  "break_type_id": "REGS1EQR1TPZ5",
                  "name": "Tea Break",
                  "expected_duration": "PT5M",
                  "is_paid": true
                }
              ],
              "version": 1
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateShiftResponse": {
        "type": "object",
        "properties": {
          "shift": {
            "$ref": "#/components/schemas/Shift"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request to update a `Shift`. Contains\nthe updated `Shift` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "shift": {
            "id": "K0YH4CV5462JB",
            "team_member_id": "ormj0jJJZ5OZIzxrZYJI",
            "employee_id": "ormj0jJJZ5OZIzxrZYJI",
            "location_id": "PAA1RJZZKXBFG",
            "timezone": "America/New_York",
            "start_at": "2019-01-25T03:11:00-05:00",
            "end_at": "2019-01-25T13:11:00-05:00",
            "wage": {
              "title": "Bartender",
              "hourly_rate": {
                "amount": 1500,
                "currency": "USD"
              }
            },
            "breaks": [
              {
                "id": "X7GAQYVVRRG6P",
                "start_at": "2019-01-25T06:11:00-05:00",
                "end_at": "2019-01-25T06:16:00-05:00",
                "break_type_id": "REGS1EQR1TPZ5",
                "name": "Tea Break",
                "expected_duration": "PT5M",
                "is_paid": true
              }
            ],
            "status": "CLOSED",
            "version": 2,
            "created_at": "2019-02-28T00:39:02Z",
            "updated_at": "2019-02-28T00:42:41Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateSubscriptionRequest": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "description": "Defines parameters in a\n[UpdateSubscription](#endpoint-subscriptions-updatesubscription) endpoint \nrequest.",
        "example": {
          "request_body": {
            "subscription": {
              "version": 1594155459464,
              "price_override_money": {
                "amount": 2000,
                "currency": "USD"
              }
            }
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateSubscriptionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Information about errors encountered during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "description": "Defines the fields that are included in the response from the\n[UpdateSubscription](#endpoint-subscriptions-updatesubscription) endpoint.",
        "example": {
          "subscription": {
            "id": "9ba40961-995a-4a3d-8c53-048c40cafc13",
            "location_id": "S8GWD5R9QB376",
            "plan_id": "6JHXF3B2CW3YKHDV4XEM674H",
            "customer_id": "CHFGVKYY8RSV93M5KCYTG4PN0G",
            "status": "ACTIVE",
            "price_override_money": {
              "amount": 2000,
              "currency": "USD"
            },
            "version": 1594311617331,
            "created_at": "2020-08-03T21:53:10Z",
            "timezone": "America/Los_Angeles"
          }
        },
        "x-release-status": "BETA",
        "x-is-beta": true
      },
      "UpdateTeamMemberRequest": {
        "type": "object",
        "properties": {
          "team_member": {
            "$ref": "#/components/schemas/TeamMember"
          }
        },
        "description": "Represents an update request for a `TeamMember` object.",
        "example": {
          "request_body": {
            "team_member": {
              "reference_id": "reference_id_1",
              "status": "ACTIVE",
              "given_name": "Joe",
              "family_name": "Doe",
              "email_address": "joe_doe@gmail.com",
              "phone_number": "+14159283333",
              "assigned_locations": {
                "location_ids": [
                  "YSGH2WBKG94QZ",
                  "GA2Y9HSJ8KRYT"
                ],
                "assignment_type": "EXPLICIT_LOCATIONS"
              }
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateTeamMemberResponse": {
        "type": "object",
        "properties": {
          "team_member": {
            "$ref": "#/components/schemas/TeamMember"
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from an update request, containing the updated `TeamMember` object or error messages.",
        "example": {
          "team_member": {
            "id": "1yJlHapkseYnNPETIU1B",
            "reference_id": "reference_id_1",
            "is_owner": false,
            "status": "ACTIVE",
            "given_name": "Joe",
            "family_name": "Doe",
            "email_address": "joe_doe@gmail.com",
            "phone_number": "+14159283333",
            "created_at": "2020-06-11T22:55:45.867Z",
            "assigned_locations": {
              "assignment_type": "EXPLICIT_LOCATIONS",
              "location_ids": [
                "GA2Y9HSJ8KRYT",
                "YSGH2WBKG94QZ"
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateWageSettingRequest": {
        "required": [
          "wage_setting"
        ],
        "type": "object",
        "properties": {
          "wage_setting": {
            "$ref": "#/components/schemas/WageSetting"
          }
        },
        "description": "Represents an update request for the `WageSetting` object describing a `TeamMember`.",
        "example": {
          "request_body": {
            "wage_setting": {
              "is_overtime_exempt": true,
              "job_assignments": [
                {
                  "job_title": "Manager",
                  "pay_type": "SALARY",
                  "annual_rate": {
                    "amount": 3000000,
                    "currency": "USD"
                  },
                  "weekly_hours": 40
                },
                {
                  "job_title": "Cashier",
                  "pay_type": "HOURLY",
                  "hourly_rate": {
                    "amount": 1200,
                    "currency": "USD"
                  }
                }
              ]
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateWageSettingResponse": {
        "type": "object",
        "properties": {
          "wage_setting": {
            "$ref": "#/components/schemas/WageSetting"
          },
          "errors": {
            "type": "array",
            "description": "The errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Represents a response from an update request, containing the updated `WageSetting` object\nor error messages.",
        "example": {
          "wage_setting": {
            "team_member_id": "-3oZQKPKVk6gUXU_V5Qa",
            "job_assignments": [
              {
                "job_title": "Manager",
                "pay_type": "SALARY",
                "hourly_rate": {
                  "amount": 1443,
                  "currency": "USD"
                },
                "annual_rate": {
                  "amount": 3000000,
                  "currency": "USD"
                },
                "weekly_hours": 40
              },
              {
                "job_title": "Cashier",
                "pay_type": "HOURLY",
                "hourly_rate": {
                  "amount": 1200,
                  "currency": "USD"
                }
              }
            ],
            "is_overtime_exempt": true,
            "version": 1,
            "created_at": "2019-07-10T17:26:48+00:00",
            "updated_at": "2020-06-11T23:12:04+00:00"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateWorkweekConfigRequest": {
        "required": [
          "workweek_config"
        ],
        "type": "object",
        "properties": {
          "workweek_config": {
            "$ref": "#/components/schemas/WorkweekConfig"
          }
        },
        "description": "A request to update a `WorkweekConfig` object",
        "example": {
          "request_body": {
            "workweek_config": {
              "start_of_week": "MON",
              "start_of_day_local_time": "10:00",
              "version": 10
            }
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpdateWorkweekConfigResponse": {
        "type": "object",
        "properties": {
          "workweek_config": {
            "$ref": "#/components/schemas/WorkweekConfig"
          },
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The response to a request to update a `WorkweekConfig` object. Contains\nthe updated `WorkweekConfig` object. May contain a set of `Error` objects if\nthe request resulted in errors.",
        "example": {
          "workweek_config": {
            "id": "FY4VCAQN700GM",
            "start_of_week": "MON",
            "start_of_day_local_time": "10:00",
            "version": 11,
            "created_at": "2016-02-04T00:58:24Z",
            "updated_at": "2019-02-28T01:04:35Z"
          }
        },
        "x-release-status": "PUBLIC"
      },
      "UpsertCatalogObjectRequest": {
        "required": [
          "idempotency_key",
          "object"
        ],
        "type": "object",
        "properties": {
          "idempotency_key": {
            "minLength": 1,
            "type": "string",
            "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you're unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information."
          },
          "object": {
            "$ref": "#/components/schemas/CatalogObject"
          }
        },
        "description": "",
        "example": {
          "request_body": {
            "idempotency_key": "af3d1afc-7212-4300-b463-0bfc5314a5ae",
            "object": {
              "type": "ITEM",
              "id": "#Cocoa",
              "item_data": {
                "name": "Cocoa",
                "description": "Hot chocolate",
                "abbreviation": "Ch"
              }
            }
          }
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python",
          "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp",
          "java": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.java",
          "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php",
          "javascript": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.javascript",
          "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby"
        }
      },
      "UpsertCatalogObjectResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "catalog_object": {
            "$ref": "#/components/schemas/CatalogObject"
          },
          "id_mappings": {
            "type": "array",
            "description": "The mapping between client and server IDs for this upsert.",
            "items": {
              "$ref": "#/components/schemas/CatalogIdMapping"
            }
          }
        },
        "description": "",
        "example": {
          "catalog_object": {
            "type": "ITEM",
            "id": "7SB3ZQYJ5GDMVFL7JK46JCHT",
            "updated_at": "2016-11-16T22:32:42.996Z",
            "version": 1479335562996,
            "is_deleted": false,
            "item_data": {
              "name": "Cocoa",
              "description": "Hot chocolate",
              "abbreviation": "Ch"
            }
          },
          "id_mappings": [
            {
              "client_object_id": "#Cocoa",
              "object_id": "7SB3ZQYJ5GDMVFL7JK46JCHT"
            }
          ]
        },
        "x-release-status": "PUBLIC",
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python",
          "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp",
          "java": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.java",
          "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php",
          "javascript": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.javascript",
          "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby"
        }
      },
      "V1CreateEmployeeRoleRequest": {
        "type": "object",
        "properties": {
          "employee_role": {
            "$ref": "#/components/schemas/V1EmployeeRole"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1CreateRefundRequest": {
        "required": [
          "payment_id",
          "reason",
          "type"
        ],
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string",
            "description": "The ID of the payment to refund. If you are creating a `PARTIAL`\nrefund for a split tender payment, instead provide the id of the\nparticular tender you want to refund."
          },
          "type": {
            "type": "string",
            "description": "The type of refund (FULL or PARTIAL).\nSee [V1CreateRefundRequestType](#type-v1createrefundrequesttype) for possible values"
          },
          "reason": {
            "type": "string",
            "description": "The reason for the refund."
          },
          "refunded_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "request_idempotence_key": {
            "type": "string",
            "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once."
          }
        },
        "description": "V1CreateRefundRequest",
        "x-release-status": "PUBLIC"
      },
      "V1Employee": {
        "required": [
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The employee's unique ID."
          },
          "first_name": {
            "type": "string",
            "description": "The employee's first name."
          },
          "last_name": {
            "type": "string",
            "description": "The employee's last name."
          },
          "role_ids": {
            "type": "array",
            "description": "The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee.",
            "items": {
              "type": "string"
            }
          },
          "authorized_location_ids": {
            "type": "array",
            "description": "The IDs of the locations the employee is allowed to clock in at.",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string",
            "description": "The employee's email address."
          },
          "status": {
            "type": "string",
            "description": "Whether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard.\nSee [V1EmployeeStatus](#type-v1employeestatus) for possible values"
          },
          "external_id": {
            "type": "string",
            "description": "An ID the merchant can set to associate the employee with an entity in another system."
          },
          "created_at": {
            "type": "string",
            "description": "The time when the employee entity was created, in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "description": "The time when the employee entity was most recently updated, in ISO 8601 format."
          }
        },
        "description": "Represents one of a business's employees.",
        "x-release-status": "PUBLIC"
      },
      "V1EmployeeRole": {
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The role's unique ID, Can only be set by Square."
          },
          "name": {
            "type": "string",
            "description": "The role's merchant-defined name."
          },
          "permissions": {
            "type": "array",
            "description": "The role's permissions.\nSee [V1EmployeeRolePermissions](#type-v1employeerolepermissions) for possible values",
            "items": {
              "type": "string"
            }
          },
          "is_owner": {
            "type": "boolean",
            "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions."
          },
          "created_at": {
            "type": "string",
            "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created."
          },
          "updated_at": {
            "type": "string",
            "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated."
          }
        },
        "description": "V1EmployeeRole",
        "x-release-status": "PUBLIC"
      },
      "V1ListEmployeeRolesRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "limit": {
            "type": "integer",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListEmployeeRolesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1EmployeeRole"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListEmployeesRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "begin_updated_at": {
            "type": "string",
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
          },
          "end_updated_at": {
            "type": "string",
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
          },
          "begin_created_at": {
            "type": "string",
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."
          },
          "end_created_at": {
            "type": "string",
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."
          },
          "status": {
            "type": "string",
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).\nSee [V1ListEmployeesRequestStatus](#type-v1listemployeesrequeststatus) for possible values"
          },
          "external_id": {
            "type": "string",
            "description": "If provided, the endpoint returns only employee entities with the specified external_id."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListEmployeesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1Employee"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListOrdersRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1ListOrdersResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1Order"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1ListPaymentsRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "begin_time": {
            "type": "string",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200."
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          },
          "include_partial": {
            "type": "boolean",
            "description": "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListPaymentsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1Payment"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListRefundsRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which payments are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "begin_time": {
            "type": "string",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
          },
          "limit": {
            "type": "integer",
            "description": "The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods."
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListRefundsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1Refund"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListSettlementsRequest": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The order in which settlements are listed in the response.\nSee [SortOrder](#type-sortorder) for possible values"
          },
          "begin_time": {
            "type": "string",
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."
          },
          "end_time": {
            "type": "string",
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of settlements to return in a single response. This value cannot exceed 200."
          },
          "status": {
            "type": "string",
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).\nSee [V1ListSettlementsRequestStatus](#type-v1listsettlementsrequeststatus) for possible values"
          },
          "batch_token": {
            "type": "string",
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1ListSettlementsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "",
            "items": {
              "$ref": "#/components/schemas/V1Settlement"
            }
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1Money": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a 'cent' concept)."
          },
          "currency_code": {
            "type": "string",
            "description": "\nSee [Currency](#type-currency) for possible values"
          }
        },
        "description": "",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1Order": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "id": {
            "type": "string",
            "description": "The order's unique identifier."
          },
          "buyer_email": {
            "type": "string",
            "description": "The email address of the order's buyer."
          },
          "recipient_name": {
            "type": "string",
            "description": "The name of the order's buyer."
          },
          "recipient_phone_number": {
            "type": "string",
            "description": "The phone number to use for the order's delivery."
          },
          "state": {
            "type": "string",
            "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1OrderState](#type-v1orderstate) for possible values"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/Address"
          },
          "subtotal_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "total_shipping_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "total_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "total_price_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "total_discount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "created_at": {
            "type": "string",
            "description": "The time when the order was created, in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "description": "The time when the order was last modified, in ISO 8601 format."
          },
          "expires_at": {
            "type": "string",
            "description": "The time when the order expires if no action is taken, in ISO 8601 format."
          },
          "payment_id": {
            "type": "string",
            "description": "The unique identifier of the payment associated with the order."
          },
          "buyer_note": {
            "type": "string",
            "description": "A note provided by the buyer when the order was created, if any."
          },
          "completed_note": {
            "type": "string",
            "description": "A note provided by the merchant when the order's state was set to COMPLETED, if any"
          },
          "refunded_note": {
            "type": "string",
            "description": "A note provided by the merchant when the order's state was set to REFUNDED, if any."
          },
          "canceled_note": {
            "type": "string",
            "description": "A note provided by the merchant when the order's state was set to CANCELED, if any."
          },
          "tender": {
            "$ref": "#/components/schemas/V1Tender"
          },
          "order_history": {
            "type": "array",
            "description": "The history of actions associated with the order.",
            "items": {
              "$ref": "#/components/schemas/V1OrderHistoryEntry"
            }
          },
          "promo_code": {
            "type": "string",
            "description": "The promo code provided by the buyer, if any."
          },
          "btc_receive_address": {
            "type": "string",
            "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to."
          },
          "btc_price_satoshi": {
            "type": "number",
            "description": "For Bitcoin transactions, the price of the buyer's order in satoshi (100 million satoshi equals 1 BTC)."
          }
        },
        "description": "V1Order",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1OrderHistoryEntry": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The type of action performed on the order.\nSee [V1OrderHistoryEntryAction](#type-v1orderhistoryentryaction) for possible values"
          },
          "created_at": {
            "type": "string",
            "description": "The time when the action was performed, in ISO 8601 format."
          }
        },
        "description": "V1OrderHistoryEntry",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The payment's unique identifier."
          },
          "merchant_id": {
            "type": "string",
            "description": "The unique identifier of the merchant that took the payment."
          },
          "created_at": {
            "type": "string",
            "description": "The time when the payment was created, in ISO 8601 format. Reflects the time of the first payment if the object represents an incomplete partial payment, and the time of the last or complete payment otherwise."
          },
          "creator_id": {
            "type": "string",
            "description": "The unique identifier of the Square account that took the payment."
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "payment_url": {
            "type": "string",
            "description": "The URL of the payment's detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page."
          },
          "receipt_url": {
            "type": "string",
            "description": "The URL of the receipt for the payment. Note that for split tender\npayments, this URL corresponds to the receipt for the first tender\nlisted in the payment's tender field. Each Tender object has its own\nreceipt_url field you can use to get the other receipts associated with\na split tender payment."
          },
          "inclusive_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "additive_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "tip_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "discount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "total_collected_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "processing_fee_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "net_total_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "swedish_rounding_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "gross_sales_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "net_sales_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "inclusive_tax": {
            "type": "array",
            "description": "All of the inclusive taxes associated with the payment.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "additive_tax": {
            "type": "array",
            "description": "All of the additive taxes associated with the payment.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "tender": {
            "type": "array",
            "description": "All of the tenders associated with the payment.",
            "items": {
              "$ref": "#/components/schemas/V1Tender"
            }
          },
          "refunds": {
            "type": "array",
            "description": "All of the refunds applied to the payment. Note that the value of all refunds on a payment can exceed the value of all tenders if a merchant chooses to refund money to a tender after previously accepting returned goods as part of an exchange.",
            "items": {
              "$ref": "#/components/schemas/V1Refund"
            }
          },
          "itemizations": {
            "type": "array",
            "description": "The items purchased in the payment.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentItemization"
            }
          },
          "surcharge_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "surcharges": {
            "type": "array",
            "description": "A list of all surcharges associated with the payment.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentSurcharge"
            }
          },
          "is_partial": {
            "type": "boolean",
            "description": "Indicates whether or not the payment is only partially paid for.\nIf true, this payment will have the tenders collected so far, but the\nitemizations will be empty until the payment is completed."
          }
        },
        "description": "A payment represents a paid transaction between a Square merchant and a\ncustomer. Payment details are usually available from Connect API endpoints\nwithin a few minutes after the transaction completes.\n\nEach Payment object includes several fields that end in `_money`. These fields\ndescribe the various amounts of money that contribute to the payment total:\n\n<ul>\n<li>\nMonetary values are <b>positive</b> if they represent an\n<em>increase</em> in the amount of money the merchant receives (e.g.,\n<code>tax_money</code>, <code>tip_money</code>).\n</li>\n<li>\nMonetary values are <b>negative</b> if they represent an\n<em>decrease</em> in the amount of money the merchant receives (e.g.,\n<code>discount_money</code>, <code>refunded_money</code>).\n</li>\n</ul>",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentDiscount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The discount's name."
          },
          "applied_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "discount_id": {
            "type": "string",
            "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID."
          }
        },
        "description": "V1PaymentDiscount",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentItemDetail": {
        "type": "object",
        "properties": {
          "category_name": {
            "type": "string",
            "description": "The name of the item's merchant-defined category, if any."
          },
          "sku": {
            "type": "string",
            "description": " The item's merchant-defined SKU, if any."
          },
          "item_id": {
            "type": "string",
            "description": "The unique ID of the item purchased, if any."
          },
          "item_variation_id": {
            "type": "string",
            "description": "The unique ID of the item variation purchased, if any."
          }
        },
        "description": "V1PaymentItemDetail",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentItemization": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The item's name."
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the item purchased. This can be a decimal value."
          },
          "itemization_type": {
            "type": "string",
            "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT\nSee [V1PaymentItemizationItemizationType](#type-v1paymentitemizationitemizationtype) for possible values"
          },
          "item_detail": {
            "$ref": "#/components/schemas/V1PaymentItemDetail"
          },
          "notes": {
            "type": "string",
            "description": "Notes entered by the merchant about the item at the time of payment, if any."
          },
          "item_variation_name": {
            "type": "string",
            "description": "The name of the item variation purchased, if any."
          },
          "total_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "single_quantity_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "gross_sales_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "discount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "net_sales_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "taxes": {
            "type": "array",
            "description": "All taxes applied to this itemization.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "discounts": {
            "type": "array",
            "description": "All discounts applied to this itemization.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentDiscount"
            }
          },
          "modifiers": {
            "type": "array",
            "description": "All modifier options applied to this itemization.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentModifier"
            }
          }
        },
        "description": "Payment include an` itemizations` field that lists the items purchased,\nalong with associated fees, modifiers, and discounts. Each itemization has an\n`itemization_type` field that indicates which of the following the itemization\nrepresents:\n\n<ul>\n<li>An item variation from the merchant's item library</li>\n<li>A custom monetary amount</li>\n<li>\nAn action performed on a Square gift card, such as activating or\nreloading it.\n</li>\n</ul>\n\n*Note**: itemization information included in a `Payment` object reflects\ndetails collected **at the time of the payment**. Details such as the name or\nprice of items might have changed since the payment was processed.",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentModifier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The modifier option's name."
          },
          "applied_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "modifier_option_id": {
            "type": "string",
            "description": "The ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID."
          }
        },
        "description": "V1PaymentModifier",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentSurcharge": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the surcharge."
          },
          "applied_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "rate": {
            "type": "string",
            "description": "The amount of the surcharge as a percentage. The percentage is provided as a string representing the decimal equivalent of the percentage. For example, \"0.7\" corresponds to a 7% surcharge. Exactly one of rate or amount_money should be set."
          },
          "amount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "type": {
            "type": "string",
            "description": "Indicates the source of the surcharge. For example, if it was applied as an automatic gratuity for a large group.\nSee [V1PaymentSurchargeType](#type-v1paymentsurchargetype) for possible values"
          },
          "taxable": {
            "type": "boolean",
            "description": "Indicates whether the surcharge is taxable."
          },
          "taxes": {
            "type": "array",
            "description": "The list of taxes that should be applied to the surcharge.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "surcharge_id": {
            "type": "string",
            "description": "A Square-issued unique identifier associated with the surcharge."
          }
        },
        "description": "V1PaymentSurcharge",
        "x-release-status": "PUBLIC"
      },
      "V1PaymentTax": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "name": {
            "type": "string",
            "description": "The merchant-defined name of the tax."
          },
          "applied_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "rate": {
            "type": "string",
            "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%."
          },
          "inclusion_type": {
            "type": "string",
            "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.\nSee [V1PaymentTaxInclusionType](#type-v1paymenttaxinclusiontype) for possible values"
          },
          "fee_id": {
            "type": "string",
            "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID."
          }
        },
        "description": "V1PaymentTax",
        "x-release-status": "PUBLIC"
      },
      "V1PhoneNumber": {
        "required": [
          "calling_code",
          "number"
        ],
        "type": "object",
        "properties": {
          "calling_code": {
            "type": "string",
            "description": "The phone number's international calling code. For US phone numbers, this value is +1."
          },
          "number": {
            "type": "string",
            "description": "The phone number."
          }
        },
        "description": "Represents a phone number.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1Refund": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of refund\nSee [V1RefundType](#type-v1refundtype) for possible values"
          },
          "reason": {
            "type": "string",
            "description": "The merchant-specified reason for the refund."
          },
          "refunded_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_processing_fee_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_additive_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_additive_tax": {
            "type": "array",
            "description": "All of the additive taxes associated with the refund.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "refunded_inclusive_tax_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_inclusive_tax": {
            "type": "array",
            "description": "All of the inclusive taxes associated with the refund.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentTax"
            }
          },
          "refunded_tip_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_discount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_surcharge_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_surcharges": {
            "type": "array",
            "description": "A list of all surcharges associated with the refund.",
            "items": {
              "$ref": "#/components/schemas/V1PaymentSurcharge"
            }
          },
          "created_at": {
            "type": "string",
            "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format."
          },
          "processed_at": {
            "type": "string",
            "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format."
          },
          "payment_id": {
            "type": "string",
            "description": "A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders."
          },
          "merchant_id": {
            "type": "string",
            "description": ""
          },
          "is_exchange": {
            "type": "boolean",
            "description": "Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded."
          }
        },
        "description": "V1Refund",
        "x-release-status": "PUBLIC"
      },
      "V1RetrieveEmployeeRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1RetrieveEmployeeRoleRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1RetrieveOrderRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "V1RetrievePaymentRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1RetrieveSettlementRequest": {
        "type": "object",
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1Settlement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The settlement's unique identifier."
          },
          "status": {
            "type": "string",
            "description": "The settlement's current status.\nSee [V1SettlementStatus](#type-v1settlementstatus) for possible values"
          },
          "total_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "initiated_at": {
            "type": "string",
            "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format."
          },
          "bank_account_id": {
            "type": "string",
            "description": "The Square-issued unique identifier for the bank account associated with the settlement."
          },
          "entries": {
            "type": "array",
            "description": "The entries included in this settlement.",
            "items": {
              "$ref": "#/components/schemas/V1SettlementEntry"
            }
          }
        },
        "description": "V1Settlement",
        "x-release-status": "PUBLIC"
      },
      "V1SettlementEntry": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string",
            "description": "The settlement's unique identifier."
          },
          "type": {
            "type": "string",
            "description": "The settlement's current status.\nSee [V1SettlementEntryType](#type-v1settlemententrytype) for possible values"
          },
          "amount_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "fee_money": {
            "$ref": "#/components/schemas/V1Money"
          }
        },
        "description": "V1SettlementEntry",
        "x-release-status": "PUBLIC"
      },
      "V1Tender": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The tender's unique ID."
          },
          "type": {
            "type": "string",
            "description": "The type of tender.\nSee [V1TenderType](#type-v1tendertype) for possible values"
          },
          "name": {
            "type": "string",
            "description": "A human-readable description of the tender."
          },
          "employee_id": {
            "type": "string",
            "description": "The ID of the employee that processed the tender."
          },
          "receipt_url": {
            "type": "string",
            "description": "The URL of the receipt for the tender."
          },
          "card_brand": {
            "type": "string",
            "description": "The brand of credit card provided.\nSee [V1TenderCardBrand](#type-v1tendercardbrand) for possible values"
          },
          "pan_suffix": {
            "type": "string",
            "description": "The last four digits of the provided credit card's account number."
          },
          "entry_method": {
            "type": "string",
            "description": "The tender's unique ID.\nSee [V1TenderEntryMethod](#type-v1tenderentrymethod) for possible values"
          },
          "payment_note": {
            "type": "string",
            "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER."
          },
          "total_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "tendered_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "tendered_at": {
            "type": "string",
            "description": "The time when the tender was created, in ISO 8601 format."
          },
          "settled_at": {
            "type": "string",
            "description": "The time when the tender was settled, in ISO 8601 format."
          },
          "change_back_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "refunded_money": {
            "$ref": "#/components/schemas/V1Money"
          },
          "is_exchange": {
            "type": "boolean",
            "description": "Indicates whether or not the tender is associated with an exchange. If is_exchange is true, the tender represents the value of goods returned in an exchange not the actual money paid. The exchange value reduces the tender amounts needed to pay for items purchased in the exchange."
          }
        },
        "description": "A tender represents a discrete monetary exchange. Square represents this\nexchange as a money object with a specific currency and amount, where the\namount is given in the smallest denomination of the given currency.\n\nSquare POS can accept more than one form of tender for a single payment (such\nas by splitting a bill between a credit card and a gift card). The `tender`\nfield of the Payment object lists all forms of tender used for the payment.\n\nSplit tender payments behave slightly differently from single tender payments:\n\nThe receipt_url for a split tender corresponds only to the first tender listed\nin the tender field. To get the receipt URLs for the remaining tenders, use\nthe receipt_url fields of the corresponding Tender objects.\n\n*A note on gift cards**: when a customer purchases a Square gift card from a\nmerchant, the merchant receives the full amount of the gift card in the\nassociated payment.\n\nWhen that gift card is used as a tender, the balance of the gift card is\nreduced and the merchant receives no funds. A `Tender` object with a type of\n`SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the\nassociated payment.",
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true
      },
      "V1UpdateEmployeeRequest": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/V1Employee"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1UpdateEmployeeRoleRequest": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/V1EmployeeRole"
          }
        },
        "description": "",
        "x-release-status": "PUBLIC"
      },
      "V1UpdateOrderRequest": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND).\nSee [V1UpdateOrderRequestAction](#type-v1updateorderrequestaction) for possible values"
          },
          "shipped_tracking_number": {
            "type": "string",
            "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE."
          },
          "completed_note": {
            "type": "string",
            "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE."
          },
          "refunded_note": {
            "type": "string",
            "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND."
          },
          "canceled_note": {
            "type": "string",
            "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL."
          }
        },
        "description": "V1UpdateOrderRequest",
        "x-release-status": "PUBLIC",
        "x-visibility": "SDK_ONLY"
      },
      "VoidTransactionRequest": {
        "type": "object",
        "description": "",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/VoidTransaction/VoidTransactionRequest.python",
          "csharp": "/sdk_samples/VoidTransaction/VoidTransactionRequest.csharp",
          "java": "/sdk_samples/VoidTransaction/VoidTransactionRequest.java",
          "php": "/sdk_samples/VoidTransaction/VoidTransactionRequest.php",
          "javascript": "/sdk_samples/VoidTransaction/VoidTransactionRequest.javascript",
          "ruby": "/sdk_samples/VoidTransaction/VoidTransactionRequest.ruby"
        }
      },
      "VoidTransactionResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Any errors that occurred during the request.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Defines the fields that are included in the response body of\na request to the [VoidTransaction](#endpoint-voidtransaction) endpoint.",
        "example": {},
        "x-release-status": "DEPRECATED",
        "x-is-deprecated": true,
        "x-sq-sdk-sample-code": {
          "python": "/sdk_samples/VoidTransaction/VoidTransactionResponse.python",
          "csharp": "/sdk_samples/VoidTransaction/VoidTransactionResponse.csharp",
          "java": "/sdk_samples/VoidTransaction/VoidTransactionResponse.java",
          "php": "/sdk_samples/VoidTransaction/VoidTransactionResponse.php",
          "javascript": "/sdk_samples/VoidTransaction/VoidTransactionResponse.javascript",
          "ruby": "/sdk_samples/VoidTransaction/VoidTransactionResponse.ruby"
        }
      },
      "WageSetting": {
        "type": "object",
        "properties": {
          "team_member_id": {
            "type": "string",
            "description": "The unique ID of the `TeamMember` whom this wage setting describes."
          },
          "job_assignments": {
            "type": "array",
            "description": "<b>Required</b> The ordered list of jobs that the team member is assigned to.\nThe first job assignment is considered the team member's \"Primary Job\".\n<br>\n<b>Min Length 1    Max Length 12</b>",
            "items": {
              "$ref": "#/components/schemas/JobAssignment"
            }
          },
          "is_overtime_exempt": {
            "type": "boolean",
            "description": "Whether the team member is exempt from the overtime rules of the seller country."
          },
          "version": {
            "type": "integer",
            "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write, potentially overwriting data from another write. Read\nabout [optimistic concurrency](https://developer.squareup.com/docs/docs/working-with-apis/optimistic-concurrency)\nin Square APIs for more information."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp in RFC 3339 format describing when the wage setting object was created.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp in RFC 3339 format describing when the wage setting object was last updated.\nEx: \"2018-10-04T04:00:00-07:00\" or \"2019-02-05T12:00:00Z\"",
            "x-read-only": true
          }
        },
        "description": "An object representing a team member's wage information.",
        "x-release-status": "PUBLIC"
      },
      "WorkweekConfig": {
        "required": [
          "start_of_day_local_time",
          "start_of_week"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID for this object"
          },
          "start_of_week": {
            "type": "string",
            "description": "The day of the week on which a business week cuts over for\ncompensation purposes.\nSee [Weekday](#type-weekday) for possible values"
          },
          "start_of_day_local_time": {
            "minLength": 1,
            "type": "string",
            "description": "The local time at which a business week cuts over. Represented as a\nstring in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are\ntruncated)."
          },
          "version": {
            "type": "integer",
            "description": "Used for resolving concurrency issues; request will fail if version\nprovided does not match server version at time of request. If not provided,\nSquare executes a blind write; potentially overwriting data from another\nwrite."
          },
          "created_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format; presented in UTC",
            "x-read-only": true
          },
          "updated_at": {
            "type": "string",
            "description": "A read-only timestamp in RFC 3339 format; presented in UTC",
            "x-read-only": true
          }
        },
        "description": "Sets the Day of the week and hour of the day that a business starts a\nwork week. Used for the calculation of overtime pay.",
        "x-release-status": "PUBLIC"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://connect.squareup.com/oauth2/authorize",
            "tokenUrl": "https://connect.squareup.com/oauth2/token",
            "scopes": {
              "BANK_ACCOUNTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to bank account information associated with the targeted\nSquare account. For example, to call the Connect v1 ListBankAccounts endpoint.",
              "CASH_DRAWER_READ": "__HTTP Method__: `GET`\n\nGrants read access to cash drawer shift information. For example, to call the\nListCashDrawerShifts endpoint.",
              "CUSTOMERS_READ": "__HTTP Method__: `GET`\n\nGrants read access to customer information. For example, to call the\nListCustomers endpoint.",
              "CUSTOMERS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to customer information. For example, to create and update\ncustomer profiles.",
              "DEVICE_CREDENTIAL_MANAGEMENT": "__HTTP Method__: `POST`, `GET`\n\nGrants read/write access to device credentials information. For example, to\ncall the CreateDeviceCode endpoint.",
              "EMPLOYEES_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee profile information. For example, to call the\nConnect v1 Employees API.",
              "EMPLOYEES_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee profile information. For example, to create\nand modify employee profiles.",
              "INVENTORY_READ": "__HTTP Method__: `GET`\n\nGrants read access to inventory information. For example, to call the\nRetrieveInventoryCount endpoint.",
              "INVENTORY_WRITE": "__HTTP Method__:  `POST`, `PUT`, `DELETE`\n\nGrants write access to inventory information. For example, to call the\nBatchChangeInventory endpoint.",
              "ITEMS_READ": "__HTTP Method__: `GET`\n\nGrants read access to business and location information. For example, to\nobtain a location ID for subsequent activity.",
              "ITEMS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to product catalog information. For example, to modify or\nadd to a product catalog.",
              "LOYALTY_READ": "__HTTP Method__: `GET`\n\nGrants read access to loyalty information. For example, to call the\nListLoyaltyPrograms endpoint.",
              "LOYALTY_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to loyalty information. For example, to call the\nCreateLoyaltyAccount endpoint.",
              "MERCHANT_PROFILE_READ": "__HTTP Method__: `GET`\n\nGrants read access to business and location information. For example, to\nobtain a location ID for subsequent activity.",
              "ORDERS_READ": "__HTTP Method__: `GET`\n\nGrants read access to order information. For example, to call the\nBatchRetrieveOrders endpoint.",
              "ORDERS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to order information. For example, to call the\nCreateCheckout endpoint.",
              "PAYMENTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to transaction and refund information. For example, to call\nthe RetrieveTransaction endpoint.",
              "PAYMENTS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to transaction and refunds information. For example, to\nprocess payments with the Payments or Checkout API.",
              "PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nAllow third party applications to deduct a portion of each transaction amount.\n__Required__ to use multiparty transaction functionality with the Payments\nAPI.",
              "PAYMENTS_WRITE_IN_PERSON": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to payments and refunds information. For example, to\nprocess in-person payments.",
              "SETTLEMENTS_READ": "__HTTP Method__: `GET`\n\nGrants read access to settlement (deposit) information. For example, to call\nthe Connect v1 ListSettlements endpoint.",
              "TIMECARDS_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee timecard information. For example, to call the\nConnect v2 SearchShifts endpoint.",
              "TIMECARDS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee shift information. For example, to create\nand modify employee shifts.",
              "TIMECARDS_SETTINGS_READ": "__HTTP Method__: `GET`\n\nGrants read access to employee timecard settings information. For example, to\ncall the GetBreakType endpoint.",
              "TIMECARDS_SETTINGS_WRITE": "__HTTP Method__: `POST`, `PUT`, `DELETE`\n\nGrants write access to employee timecard settings information. For example, to\ncall the UpdateBreakType endpoint."
            }
          }
        }
      },
      "oauth2ClientSecret": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
