{
    "benchmarks": [
        {
            "name": "3.1",
            "desc": "List invoices that match location id",
            "landmarks": [],
            "input_args": {
                "customer_id": "Customer.id",
                "location_id": "Location.id"
            },
            "output": [
                "Invoice"
            ],
            "solution": [
                "\\location_id -> {",
                    "let x0 = /v2/invoices_GET(location_id=location_id) in",
                    "return x0.invoice",
                    "}"
            ],
            "max_length": 10
        },
        {
            "name": "3.2",
            "desc": "Find subscription from location, customer, and plan id",
            "landmarks": [],
            "input_args": {
                "customer_id": "Customer.id",
                "location_id": "Location.id",
                "subscription_plan_id": "CatalogObject.id"
            },
            "output": [
                "Subscription"
            ],
            "solution": [
                "\\subscription_plan_id, location_id, customer_id -> {",
                    "let x7 = /v2/subscriptions/search_POST() in",
                    "let x8 = x7.subscriptions.filter(x => x.customer_id == customer_id) in",
                    "let x9 = x8.filter(x => x.location_id == location_id) in",
                    "let x10 = x9.filter(x => x.plan_id == subscription_plan_id) in",
                    "return x10",
                    "}"
            ],
            "max_length": 10
        },
        {
            "name": "3.9",
            "desc": "Get payment notes",
            "landmarks": [],
            "input_args": {
            },
            "output": [
                "Tender.note"
            ],
            "solution": [
                "\\ -> {",
                    "let x1 = /v2/payments_GET() in",
                    "let x2 = x1.payments.map(\\x0 -> {",
                        "return x0.note",
                        "}) in",
                        "return x2",
                        "}"
            ],
            "max_length": 10
        },
        {
            "name": "3.10",
            "desc": "Get payment notes",
            "landmarks": [],
            "input_args": {
                "location_id": "Location.id"
            },
            "output": [
                "Transaction.order_id"
            ],
            "solution": [
                "\\location_id -> {",
                    "let x1 = /v2/locations/{location_id}/transactions_GET(location_id=location_id) in",
                    "let x2 = x1.transactions.map(\\x0 -> {",
                        "return x0.order_id",
                        "}) in",
                        "return x2",
                        "}"
            ],
            "max_length": 10
        },
        {
            "name": "3.12",
            "desc": "Get payment notes",
            "landmarks": [],
            "input_args": {
                "location_id": "Location.id"
            },
            "output": [
                "Transaction.order_id"
            ],
            "solution": [
                "\\customer_name -> {",
                    "let x1 = /v2/customers_GET() in",
                    "let x2 = x1.customers.filter(x => x.given_name == customer_name) in",
                    "return x2",
                    "}"
            ],
            "max_length": 10
        }

    ]
}
