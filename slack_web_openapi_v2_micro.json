{
    "openapi": "3.0.1",
    "info": {
        "title": "Slack Web API",
        "description": "One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.",
        "contact": {
            "name": "Slack developer relations",
            "url": "https://api.slack.com/support"
        },
        "version": "1.7.0"
    },
    "externalDocs": {
        "description": "Learn more about the Slack Web API",
        "url": "https://api.slack.com/web"
    },
    "servers": [
        {
            "url": "https://slack.com/api"
        }
    ],
    "tags": [],
    "paths": {
        "/chat.postMessage": {
            "post": {
                "tags": [
                    "chat"
                ],
                "description": "Sends a message to a channel.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/chat.postMessage"
                },
                "operationId": "chat_postMessage",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Authentication token. Requires scope: `chat:write`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "channel",
                                    "text"
                                ],
                                "properties": {
                                    "as_user": {
                                        "type": "string",
                                        "description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below."
                                    },
                                    "attachments": {
                                        "type": "string",
                                        "description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
                                    },
                                    "blocks": {
                                        "type": "string",
                                        "description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
                                    },
                                    "channel": {
                                        "type": "string",
                                        "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
                                    },
                                    "icon_emoji": {
                                        "type": "string",
                                        "description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
                                    },
                                    "icon_url": {
                                        "type": "string",
                                        "description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
                                    },
                                    "link_names": {
                                        "type": "boolean",
                                        "description": "Find and link channel names and usernames."
                                    },
                                    "mrkdwn": {
                                        "type": "boolean",
                                        "description": "Disable Slack markup parsing by setting to `false`. Enabled by default."
                                    },
                                    "parse": {
                                        "type": "string",
                                        "description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
                                    },
                                    "reply_broadcast": {
                                        "type": "boolean",
                                        "description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
                                    },
                                    "thread_ts": {
                                        "type": "string",
                                        "description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
                                    },
                                    "unfurl_links": {
                                        "type": "boolean",
                                        "description": "Pass true to enable unfurling of primarily text-based content."
                                    },
                                    "unfurl_media": {
                                        "type": "boolean",
                                        "description": "Pass false to disable unfurling of media content."
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "channel",
                                    "text"
                                ],
                                "properties": {
                                    "as_user": {
                                        "type": "string",
                                        "description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below."
                                    },
                                    "attachments": {
                                        "type": "string",
                                        "description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
                                    },
                                    "blocks": {
                                        "type": "string",
                                        "description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
                                    },
                                    "channel": {
                                        "type": "string",
                                        "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
                                    },
                                    "icon_emoji": {
                                        "type": "string",
                                        "description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
                                    },
                                    "icon_url": {
                                        "type": "string",
                                        "description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
                                    },
                                    "link_names": {
                                        "type": "boolean",
                                        "description": "Find and link channel names and usernames."
                                    },
                                    "mrkdwn": {
                                        "type": "boolean",
                                        "description": "Disable Slack markup parsing by setting to `false`. Enabled by default."
                                    },
                                    "parse": {
                                        "type": "string",
                                        "description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
                                    },
                                    "reply_broadcast": {
                                        "type": "boolean",
                                        "description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
                                    },
                                    "thread_ts": {
                                        "type": "string",
                                        "description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
                                    },
                                    "unfurl_links": {
                                        "type": "boolean",
                                        "description": "Pass true to enable unfurling of primarily text-based content."
                                    },
                                    "unfurl_media": {
                                        "type": "boolean",
                                        "description": "Pass false to disable unfurling of media content."
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "chat.postMessage success schema",
                                    "required": [
                                        "channel",
                                        "message",
                                        "ok",
                                        "ts"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "$ref": "#/components/schemas/defs_channel"
                                        },
                                        "message": {
                                            "$ref": "#/components/schemas/objs_message"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "ts": {
                                            "$ref": "#/components/schemas/defs_ts"
                                        }
                                    },
                                    "description": "Schema for successful response of chat.postMessage method"
                                },
                                "example": {
                                    "channel": "C1H9RESGL",
                                    "message": {
                                        "attachments": [
                                            {
                                                "fallback": "This is an attachment's fallback",
                                                "id": 1,
                                                "text": "This is an attachment"
                                            }
                                        ],
                                        "bot_id": "B19LU7CSY",
                                        "subtype": "bot_message",
                                        "text": "Here's a message for you",
                                        "ts": "1503435956.000247",
                                        "type": "message",
                                        "username": "ecto1"
                                    },
                                    "ok": true,
                                    "ts": "1503435956.000247"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response if too many attachments are included",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "chat.postMessage error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "channel_not_found",
                                                "not_in_channel",
                                                "is_archived",
                                                "msg_too_long",
                                                "no_text",
                                                "too_many_attachments",
                                                "rate_limited",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response chat.postMessage method"
                                },
                                "example": {
                                    "error": "too_many_attachments",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "chat:write:user",
                            "chat:write:bot"
                        ]
                    }
                ]
            }
        },
        "/conversations.history": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "description": "Fetches a conversation's history of messages and events.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.history"
                },
                "operationId": "conversations_history",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `conversations:history`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Conversation ID to fetch history for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latest",
                        "in": "query",
                        "description": "End of time range of messages to include in results.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "oldest",
                        "in": "query",
                        "description": "Start of time range of messages to include in results.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "inclusive",
                        "in": "query",
                        "description": "Include messages with latest or oldest timestamp in results only when either timestamp is specified.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response containing a channel's messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.history success schema",
                                    "required": [
                                        "channel_actions_count",
                                        "channel_actions_ts",
                                        "has_more",
                                        "messages",
                                        "ok",
                                        "pin_count"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channel_actions_count": {
                                            "type": "integer"
                                        },
                                        "channel_actions_ts": {
                                            "$ref": "#/components/schemas/obj_ref_12"
                                        },
                                        "has_more": {
                                            "type": "boolean"
                                        },
                                        "messages": {
                                            "minItems": 1,
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/objs_message"
                                            }
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "pin_count": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": "Schema for successful response from conversations.history method"
                                },
                                "example": {
                                    "has_more": true,
                                    "messages": [
                                        {
                                            "text": "I find you punny and would like to smell your nose letter",
                                            "ts": "1512085950.000216",
                                            "type": "message",
                                            "user": "U012AB3CDE"
                                        },
                                        {
                                            "text": "What, you want to smell my shoes better?",
                                            "ts": "1512104434.000490",
                                            "type": "message",
                                            "user": "U061F7AUR"
                                        }
                                    ],
                                    "ok": true,
                                    "pin_count": 0,
                                    "response_metadata": {
                                        "next_cursor": "bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.history error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "missing_scope",
                                                "channel_not_found",
                                                "invalid_ts_latest",
                                                "invalid_ts_oldest",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required"
                                            ]
                                        },
                                        "needed": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        },
                                        "provided": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "Schema for error response from conversations.history method"
                                },
                                "example": {
                                    "error": "channel_not_found",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:history",
                            "groups:history",
                            "im:history",
                            "mpim:history"
                        ]
                    }
                ]
            }
        },
        "/conversations.info": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "description": "Retrieve information about a conversation.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.info"
                },
                "operationId": "conversations_info",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Conversation ID to learn more about",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_locale",
                        "in": "query",
                        "description": "Set this to `true` to receive the locale for this conversation. Defaults to `false`",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_num_members",
                        "in": "query",
                        "description": "Set to `true` to include the member count for the specified conversation. Defaults to `false`",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.info success schema",
                                    "required": [
                                        "channel",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "$ref": "#/components/schemas/objs_conversation"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        }
                                    },
                                    "description": "Schema for successful response conversations.info"
                                },
                                "example": {
                                    "channel": {
                                        "created": 1449252889,
                                        "creator": "W012A3BCD",
                                        "id": "C012AB3CD",
                                        "is_archived": false,
                                        "is_channel": true,
                                        "is_ext_shared": false,
                                        "is_general": true,
                                        "is_group": false,
                                        "is_im": false,
                                        "is_member": true,
                                        "is_mpim": false,
                                        "is_org_shared": false,
                                        "is_pending_ext_shared": false,
                                        "is_private": false,
                                        "is_read_only": false,
                                        "is_shared": false,
                                        "last_read": "1502126650.228446",
                                        "locale": "en-US",
                                        "name": "general",
                                        "name_normalized": "general",
                                        "pending_shared": [],
                                        "previous_names": [
                                            "specifics",
                                            "abstractions",
                                            "etc"
                                        ],
                                        "purpose": {
                                            "creator": "W012A3BCD",
                                            "last_set": 1449709364,
                                            "value": "This part of the workspace is for fun. Make fun here."
                                        },
                                        "topic": {
                                            "creator": "W012A3BCD",
                                            "last_set": 1449709364,
                                            "value": "For public discussion of generalities"
                                        },
                                        "unlinked": 0
                                    },
                                    "ok": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response when a channel cannot be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.info error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "missing_scope",
                                                "channel_not_found",
                                                "team_added_to_org",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required"
                                            ]
                                        },
                                        "needed": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        },
                                        "provided": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "Schema for error response from conversations.info method"
                                },
                                "example": {
                                    "error": "channel_not_found",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ]
            }
        },
        "/conversations.join": {
            "post": {
                "tags": [
                    "conversations"
                ],
                "description": "Joins an existing conversation.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.join"
                },
                "operationId": "conversations_join",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "channel"
                                ],
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "description": "ID of conversation to join"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "required": [
                                    "channel"
                                ],
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "description": "ID of conversation to join"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.join success schema",
                                    "required": [
                                        "channel",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "$ref": "#/components/schemas/objs_conversation"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "response_metadata": {
                                            "title": "Response metadata",
                                            "type": "object",
                                            "properties": {
                                                "warnings": {
                                                    "minItems": 1,
                                                    "uniqueItems": true,
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "warning": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "Schema for successful response from conversations.join method"
                                },
                                "example": {
                                    "channel": {
                                        "created": 1449252889,
                                        "creator": "U061F7AUR",
                                        "id": "C061EG9SL",
                                        "is_archived": false,
                                        "is_channel": true,
                                        "is_ext_shared": false,
                                        "is_general": true,
                                        "is_group": false,
                                        "is_im": false,
                                        "is_member": true,
                                        "is_mpim": false,
                                        "is_org_shared": false,
                                        "is_pending_ext_shared": false,
                                        "is_private": false,
                                        "is_shared": false,
                                        "name": "general",
                                        "name_normalized": "general",
                                        "pending_shared": [],
                                        "previous_names": [],
                                        "purpose": {
                                            "creator": "",
                                            "last_set": 0,
                                            "value": "For widget discussion"
                                        },
                                        "topic": {
                                            "creator": "",
                                            "last_set": 0,
                                            "value": "Which widget do you worry about?"
                                        },
                                        "unlinked": 0
                                    },
                                    "ok": true,
                                    "response_metadata": {
                                        "warnings": [
                                            "already_in_channel"
                                        ]
                                    },
                                    "warning": "already_in_channel"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response if the conversation is archived and cannot be joined",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.join error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "method_not_supported_for_channel_type",
                                                "missing_scope",
                                                "channel_not_found",
                                                "is_archived",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "user_is_bot",
                                                "user_is_restricted",
                                                "user_is_ultra_restricted",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required",
                                                "team_added_to_org",
                                                "missing_charset",
                                                "superfluous_charset"
                                            ]
                                        },
                                        "needed": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        },
                                        "provided": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "Schema for error response from conversations.join method"
                                },
                                "example": {
                                    "error": "is_archived",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ]
            }
        },
        "/conversations.list": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "description": "Lists all channels in a Slack team.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.list"
                },
                "operationId": "conversations_list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_archived",
                        "in": "query",
                        "description": "Set to `true` to exclude archived channels from the list",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response with only public channels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.list success schema",
                                    "required": [
                                        "channels",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channels": {
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/objs_conversation"
                                            }
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "response_metadata": {
                                            "required": [
                                                "next_cursor"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "description": "Schema for successful response from conversations.list method"
                                },
                                "example": {
                                    "channels": [
                                        {
                                            "created": 1449252889,
                                            "creator": "U012A3CDE",
                                            "id": "C012AB3CD",
                                            "is_archived": false,
                                            "is_channel": true,
                                            "is_ext_shared": false,
                                            "is_general": true,
                                            "is_group": false,
                                            "is_im": false,
                                            "is_member": true,
                                            "is_mpim": false,
                                            "is_org_shared": false,
                                            "is_pending_ext_shared": false,
                                            "is_private": false,
                                            "is_shared": false,
                                            "name": "general",
                                            "name_normalized": "general",
                                            "num_members": 4,
                                            "pending_shared": [],
                                            "previous_names": [],
                                            "purpose": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "This channel is for team-wide communication and announcements. All team members are in this channel."
                                            },
                                            "topic": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "Company-wide announcements and work-based matters"
                                            },
                                            "unlinked": 0
                                        },
                                        {
                                            "created": 1449252889,
                                            "creator": "U061F7AUR",
                                            "id": "C061EG9T2",
                                            "is_archived": false,
                                            "is_channel": true,
                                            "is_ext_shared": false,
                                            "is_general": false,
                                            "is_group": false,
                                            "is_im": false,
                                            "is_member": true,
                                            "is_mpim": false,
                                            "is_org_shared": false,
                                            "is_pending_ext_shared": false,
                                            "is_private": false,
                                            "is_shared": false,
                                            "name": "random",
                                            "name_normalized": "random",
                                            "num_members": 4,
                                            "pending_shared": [],
                                            "previous_names": [],
                                            "purpose": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels."
                                            },
                                            "topic": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "Non-work banter and water cooler conversation"
                                            },
                                            "unlinked": 0
                                        }
                                    ],
                                    "ok": true,
                                    "response_metadata": {
                                        "next_cursor": "dGVhbTpDMDYxRkE1UEI="
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.list error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "missing_scope",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required"
                                            ]
                                        },
                                        "needed": {
                                            "type": "string"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        },
                                        "provided": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "Schema for error response from conversations.list method"
                                },
                                "example": {
                                    "error": "invalid_auth",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ]
            }
        },
        "/conversations.members": {
            "get": {
                "tags": [
                    "conversations"
                ],
                "description": "Retrieve members of a conversation.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.members"
                },
                "operationId": "conversations_members",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "ID of the conversation to retrieve members for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical paginated success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.members success schema",
                                    "required": [
                                        "members",
                                        "ok",
                                        "response_metadata"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "members": {
                                            "minItems": 1,
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defs_user_id"
                                            }
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "response_metadata": {
                                            "required": [
                                                "next_cursor"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "description": "Schema for successful response conversations.members method"
                                },
                                "example": {
                                    "members": [
                                        "U023BECGF",
                                        "U061F7AUR",
                                        "W012A3CDE"
                                    ],
                                    "ok": true,
                                    "response_metadata": {
                                        "next_cursor": "e3VzZXJfaWQ6IFcxMjM0NTY3fQ=="
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response when an invalid cursor is provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.members error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "channel_not_found",
                                                "invalid_limit",
                                                "invalid_cursor",
                                                "fetch_members_failed",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response conversations.members method"
                                },
                                "example": {
                                    "error": "invalid_cursor",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ]
            }
        },
        "/conversations.open": {
            "post": {
                "tags": [
                    "conversations"
                ],
                "description": "Opens or resumes a direct message or multi-person direct message.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/conversations.open"
                },
                "operationId": "conversations_open",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead."
                                    },
                                    "users": {
                                        "type": "string",
                                        "description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`."
                                    },
                                    "return_im": {
                                        "type": "boolean",
                                        "description": "Boolean, indicates you want the full IM channel definition in the response."
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead."
                                    },
                                    "users": {
                                        "type": "string",
                                        "description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`."
                                    },
                                    "return_im": {
                                        "type": "boolean",
                                        "description": "Boolean, indicates you want the full IM channel definition in the response."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.open success schema",
                                    "required": [
                                        "channel",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "already_open": {
                                            "type": "boolean"
                                        },
                                        "channel": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/components/schemas/objs_conversation"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/obj_ref_13"
                                                }
                                            ]
                                        },
                                        "no_op": {
                                            "type": "boolean"
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        }
                                    },
                                    "description": "Schema for successful response from conversations.open method when opening channels, ims, mpims"
                                },
                                "example": {
                                    "channel": {
                                        "id": "D069C7QFK"
                                    },
                                    "ok": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "conversations.open error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "method_not_supported_for_channel_type",
                                                "user_not_found",
                                                "user_not_visible",
                                                "user_disabled",
                                                "users_list_not_supplied",
                                                "not_enough_users",
                                                "too_many_users",
                                                "invalid_user_combination",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required",
                                                "channel_not_found"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response from conversations.open method"
                                },
                                "example": {
                                    "error": "channel_not_found",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ]
            }
        },
        "/users.conversations": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "List conversations the calling user may access.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/users.conversations"
                },
                "operationId": "users_conversations",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_archived",
                        "in": "query",
                        "description": "Set to `true` to exclude archived channels from the list",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.conversations success schema",
                                    "required": [
                                        "channels",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "channels": {
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/objs_conversation"
                                            }
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "response_metadata": {
                                            "required": [
                                                "next_cursor"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "description": "Schema for successful response from users.conversations method. Returned conversation objects do not include `num_members` or `is_member`"
                                },
                                "example": {
                                    "channels": [
                                        {
                                            "created": 1449252889,
                                            "creator": "U012A3CDE",
                                            "id": "C012AB3CD",
                                            "is_archived": false,
                                            "is_channel": true,
                                            "is_ext_shared": false,
                                            "is_general": true,
                                            "is_group": false,
                                            "is_im": false,
                                            "is_mpim": false,
                                            "is_org_shared": false,
                                            "is_pending_ext_shared": false,
                                            "is_private": false,
                                            "is_shared": false,
                                            "name": "general",
                                            "name_normalized": "general",
                                            "pending_shared": [],
                                            "previous_names": [],
                                            "purpose": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "This channel is for team-wide communication and announcements. All team members are in this channel."
                                            },
                                            "topic": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "Company-wide announcements and work-based matters"
                                            },
                                            "unlinked": 0
                                        },
                                        {
                                            "created": 1449252889,
                                            "creator": "U061F7AUR",
                                            "id": "C061EG9T2",
                                            "is_archived": false,
                                            "is_channel": true,
                                            "is_ext_shared": false,
                                            "is_general": false,
                                            "is_group": false,
                                            "is_im": false,
                                            "is_mpim": false,
                                            "is_org_shared": false,
                                            "is_pending_ext_shared": false,
                                            "is_private": false,
                                            "is_shared": false,
                                            "name": "random",
                                            "name_normalized": "random",
                                            "pending_shared": [],
                                            "previous_names": [],
                                            "purpose": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels."
                                            },
                                            "topic": {
                                                "creator": "",
                                                "last_set": 0,
                                                "value": "Non-work banter and water cooler conversation"
                                            },
                                            "unlinked": 0
                                        }
                                    ],
                                    "ok": true,
                                    "response_metadata": {
                                        "next_cursor": "dGVhbTpDMDYxRkE1UEI="
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.conversations error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "method_not_supported_for_channel_type",
                                                "missing_scope",
                                                "invalid_types",
                                                "invalid_cursor",
                                                "invalid_limit",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "token_revoked",
                                                "no_permission",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required",
                                                "fatal_error"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response from users.conversations method"
                                },
                                "example": {
                                    "error": "invalid_auth",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ]
            }
        },
        "/users.info": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Gets information about a user.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/users.info"
                },
                "operationId": "users_info",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `users:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_locale",
                        "in": "query",
                        "description": "Set this to `true` to receive the locale for this user. Defaults to `false`",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User to get info on",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.info success schema",
                                    "required": [
                                        "ok",
                                        "user"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/objs_user"
                                        }
                                    },
                                    "description": "Schema for successful response from users.info method"
                                },
                                "example": {
                                    "ok": true,
                                    "user": {
                                        "color": "9f69e7",
                                        "deleted": false,
                                        "has_2fa": false,
                                        "id": "W012A3CDE",
                                        "is_admin": true,
                                        "is_app_user": false,
                                        "is_bot": false,
                                        "is_owner": false,
                                        "is_primary_owner": false,
                                        "is_restricted": false,
                                        "is_ultra_restricted": false,
                                        "name": "spengler",
                                        "profile": {
                                            "avatar_hash": "ge3b51ca72de",
                                            "display_name": "spengler",
                                            "display_name_normalized": "spengler",
                                            "email": "spengler@ghostbusters.example.com",
                                            "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_original": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "real_name": "Egon Spengler",
                                            "real_name_normalized": "Egon Spengler",
                                            "status_emoji": ":books:",
                                            "status_text": "Print is dead",
                                            "team": "T012AB3C4"
                                        },
                                        "real_name": "Egon Spengler",
                                        "team_id": "T012AB3C4",
                                        "tz": "America/Los_Angeles",
                                        "tz_label": "Pacific Daylight Time",
                                        "tz_offset": -25200,
                                        "updated": 1502138686
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.info error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "user_not_found",
                                                "user_not_visible",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response from users.info method"
                                },
                                "example": {
                                    "error": "user_not_found",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ]
            }
        },
        "/users.list": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Lists all users in a Slack team.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/users.list"
                },
                "operationId": "users_list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `users:read`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_locale",
                        "in": "query",
                        "description": "Set this to `true` to receive the locale for users. Defaults to `false`",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.list schema",
                                    "required": [
                                        "cache_ts",
                                        "members",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "cache_ts": {
                                            "type": "integer"
                                        },
                                        "members": {
                                            "minItems": 1,
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/objs_user"
                                            }
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "response_metadata": {
                                            "$ref": "#/components/schemas/objs_response_metadata"
                                        }
                                    },
                                    "description": "Schema for successful response from users.list method"
                                },
                                "example": {
                                    "cache_ts": 1498777272,
                                    "members": [
                                        {
                                            "color": "9f69e7",
                                            "deleted": false,
                                            "has_2fa": false,
                                            "id": "W012A3CDE",
                                            "is_admin": true,
                                            "is_app_user": false,
                                            "is_bot": false,
                                            "is_owner": false,
                                            "is_primary_owner": false,
                                            "is_restricted": false,
                                            "is_ultra_restricted": false,
                                            "name": "spengler",
                                            "profile": {
                                                "avatar_hash": "ge3b51ca72de",
                                                "display_name": "spengler",
                                                "display_name_normalized": "spengler",
                                                "email": "spengler@ghostbusters.example.com",
                                                "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                                "real_name": "Egon Spengler",
                                                "real_name_normalized": "Egon Spengler",
                                                "status_emoji": ":books:",
                                                "status_text": "Print is dead",
                                                "team": "T012AB3C4"
                                            },
                                            "real_name": "spengler",
                                            "team_id": "T012AB3C4",
                                            "tz": "America/Los_Angeles",
                                            "tz_label": "Pacific Daylight Time",
                                            "tz_offset": -25200,
                                            "updated": 1502138686
                                        },
                                        {
                                            "color": "9f69e7",
                                            "deleted": false,
                                            "has_2fa": false,
                                            "id": "W07QCRPA4",
                                            "is_admin": true,
                                            "is_bot": false,
                                            "is_owner": false,
                                            "is_primary_owner": false,
                                            "is_restricted": false,
                                            "is_ultra_restricted": false,
                                            "name": "glinda",
                                            "profile": {
                                                "avatar_hash": "8fbdd10b41c6",
                                                "display_name": "Glinda the Fairly Good",
                                                "display_name_normalized": "Glinda the Fairly Good",
                                                "email": "glenda@south.oz.coven",
                                                "first_name": "Glinda",
                                                "image_1024": "https://a.slack-edge.com...png",
                                                "image_192": "https://a.slack-edge.com...png",
                                                "image_24": "https://a.slack-edge.com...png",
                                                "image_32": "https://a.slack-edge.com...png",
                                                "image_48": "https://a.slack-edge.com...png",
                                                "image_512": "https://a.slack-edge.com...png",
                                                "image_72": "https://a.slack-edge.com...png",
                                                "image_original": "https://a.slack-edge.com...png",
                                                "last_name": "Southgood",
                                                "phone": "",
                                                "real_name": "Glinda Southgood",
                                                "real_name_normalized": "Glinda Southgood",
                                                "skype": "",
                                                "title": "Glinda the Good"
                                            },
                                            "real_name": "Glinda Southgood",
                                            "team_id": "T0G9PQBBK",
                                            "tz": "America/Los_Angeles",
                                            "tz_label": "Pacific Daylight Time",
                                            "tz_offset": -25200,
                                            "updated": 1480527098
                                        }
                                    ],
                                    "ok": true,
                                    "response_metadata": {
                                        "next_cursor": "dXNlcjpVMEc5V0ZYTlo="
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.list error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "limit_required",
                                                "invalid_cursor",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "no_permission",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required",
                                                "fatal_error"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response from users.list method"
                                },
                                "example": {
                                    "error": "invalid_cursor",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ]
            }
        },
        "/users.lookupByEmail": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Find a user with an email address.",
                "externalDocs": {
                    "description": "API method documentation",
                    "url": "https://api.slack.com/methods/users.lookupByEmail"
                },
                "operationId": "users_lookupByEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Authentication token. Requires scope: `users:read.email`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "An email address belonging to a user in the workspace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Typical success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.lookupByEmail success schema",
                                    "required": [
                                        "ok",
                                        "user"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_true"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/objs_user"
                                        }
                                    },
                                    "description": "Schema for successful response from users.lookupByEmail method"
                                },
                                "example": {
                                    "ok": true,
                                    "user": {
                                        "color": "9f69e7",
                                        "deleted": false,
                                        "has_2fa": false,
                                        "id": "W012A3CDE",
                                        "is_admin": true,
                                        "is_app_user": false,
                                        "is_bot": false,
                                        "is_owner": false,
                                        "is_primary_owner": false,
                                        "is_restricted": false,
                                        "is_ultra_restricted": false,
                                        "name": "spengler",
                                        "profile": {
                                            "avatar_hash": "ge3b51ca72de",
                                            "display_name": "spengler",
                                            "display_name_normalized": "spengler",
                                            "email": "spengler@ghostbusters.example.com",
                                            "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "real_name": "Egon Spengler",
                                            "real_name_normalized": "Egon Spengler",
                                            "status_emoji": ":books:",
                                            "status_text": "Print is dead",
                                            "team": "T012AB3C4"
                                        },
                                        "real_name": "Egon Spengler",
                                        "team_id": "T012AB3C4",
                                        "tz": "America/Los_Angeles",
                                        "tz_label": "Pacific Daylight Time",
                                        "tz_offset": -25200,
                                        "updated": 1502138686
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Typical error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users.lookupByEmail error schema",
                                    "required": [
                                        "error",
                                        "ok"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "callstack": {
                                            "type": "string",
                                            "description": "Note: PHP callstack is only visible in dev/qa"
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "users_not_found",
                                                "enterprise_is_restricted",
                                                "not_authed",
                                                "invalid_auth",
                                                "account_inactive",
                                                "no_permission",
                                                "invalid_arg_name",
                                                "invalid_array_arg",
                                                "invalid_charset",
                                                "invalid_form_data",
                                                "invalid_post_type",
                                                "missing_post_type",
                                                "team_added_to_org",
                                                "invalid_json",
                                                "json_not_object",
                                                "request_timeout",
                                                "upgrade_required",
                                                "fatal_error"
                                            ]
                                        },
                                        "ok": {
                                            "$ref": "#/components/schemas/defs_ok_false"
                                        }
                                    },
                                    "description": "Schema for error response from users.lookupByEmail method"
                                },
                                "example": {
                                    "error": "users_not_found",
                                    "ok": false
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "slackAuth": [
                            "users:read.email"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "blocks": {
                "title": "Block Kit blocks",
                "type": "array",
                "description": "This is a very loose definition, in the future, we'll populate this with deeper schema in this definition namespace.",
                "items": {
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                }
            },
            "defs_app_id": {
                "title": "App ID",
                "pattern": "^A[A-Z0-9]{1,}$",
                "type": "string"
            },
            "defs_bot_id": {
                "title": "Bot User ID",
                "pattern": "^B[A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_channel": {
                "title": "Channel-like conversation ID",
                "pattern": "^[CGD][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_channel_id": {
                "title": "Channel ID",
                "pattern": "^[C][A-Z0-9]{2,}$",
                "type": "string"
            },
            "defs_channel_name": {
                "title": "Name of a channel",
                "type": "string"
            },
            "defs_comment_id": {
                "title": "File Comment ID",
                "pattern": "^Fc[A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_dm_id": {
                "title": "Direct Message Channel ID",
                "pattern": "^[D][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_enterprise_id": {
                "title": "Enterprise ID",
                "pattern": "^[E][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_enterprise_name": {
                "title": "Name of the enterprise org",
                "type": "string"
            },
            "defs_enterprise_user_id": {
                "title": "Enterprise User ID",
                "pattern": "^[WU][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_file_id": {
                "title": "File ID",
                "pattern": "^[F][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_group_id": {
                "title": "Private Channel ID",
                "pattern": "^[G][A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_ok_false": {
                "title": "default failure response",
                "type": "boolean",
                "enum": [
                    false
                ]
            },
            "defs_ok_true": {
                "title": "default success response",
                "type": "boolean",
                "enum": [
                    true
                ]
            },
            "defs_optional_app_id": {
                "title": "App ID or empty string",
                "pattern": "^(A[A-Z0-9]{1,})?$",
                "type": "string"
            },
            "defs_pinned_info": {
                "title": "Info for a pinned item",
                "type": "object"
            },
            "defs_reminder_id": {
                "title": "Reminder ID",
                "pattern": "^Rm[A-Z0-9]{8,}$",
                "type": "string"
            },
            "defs_subteam_id": {
                "title": "Subteam ID",
                "pattern": "^S[A-Z0-9]{2,}$",
                "type": "string"
            },
            "defs_team": {
                "title": "Team ID",
                "pattern": "^[T][A-Z0-9]{2,}$",
                "type": "string"
            },
            "defs_topic_purpose_creator": {
                "title": "User ID or empty string, used for topic and purpose creation",
                "pattern": "^[UW][A-Z0-9]{8,}$|^$",
                "type": "string"
            },
            "defs_ts": {
                "title": "Timestamp in format 0123456789.012345",
                "pattern": "^\\d{10}\\.\\d{6}$",
                "type": "string"
            },
            "defs_user_id": {
                "title": "User ID",
                "pattern": "^[UW][A-Z0-9]{2,}$",
                "type": "string"
            },
            "defs_workspace_id": {
                "title": "Team or Enterprise ID",
                "pattern": "^[TE][A-Z0-9]{8,}$",
                "type": "string"
            },
            "objs_bot_profile": {
                "title": "Bot Profile Object",
                "required": [
                    "app_id",
                    "deleted",
                    "icons",
                    "id",
                    "name",
                    "team_id",
                    "updated"
                ],
                "type": "object",
                "properties": {
                    "app_id": {
                        "$ref": "#/components/schemas/defs_app_id"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "icons": {
                        "required": [
                            "image_36",
                            "image_48",
                            "image_72"
                        ],
                        "type": "object",
                        "properties": {
                            "image_36": {
                                "type": "string"
                            },
                            "image_48": {
                                "type": "string"
                            },
                            "image_72": {
                                "type": "string"
                            }
                        }
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_bot_id"
                    },
                    "name": {
                        "type": "string"
                    },
                    "team_id": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "updated": {
                        "type": "integer"
                    }
                }
            },
            "objs_channel": {
                "title": "Channel Object",
                "required": [
                    "created",
                    "creator",
                    "id",
                    "is_channel",
                    "is_mpim",
                    "is_org_shared",
                    "is_private",
                    "is_shared",
                    "members",
                    "name",
                    "name_normalized",
                    "purpose",
                    "topic"
                ],
                "type": "object",
                "properties": {
                    "accepted_user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_channel_id"
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "is_channel": {
                        "type": "boolean"
                    },
                    "is_frozen": {
                        "type": "boolean"
                    },
                    "is_general": {
                        "type": "boolean"
                    },
                    "is_member": {
                        "type": "boolean"
                    },
                    "is_moved": {
                        "type": "integer"
                    },
                    "is_mpim": {
                        "type": "boolean"
                    },
                    "is_non_threadable": {
                        "type": "boolean"
                    },
                    "is_org_shared": {
                        "type": "boolean"
                    },
                    "is_pending_ext_shared": {
                        "type": "boolean"
                    },
                    "is_private": {
                        "type": "boolean"
                    },
                    "is_read_only": {
                        "type": "boolean"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "is_thread_only": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "members": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_normalized": {
                        "type": "string"
                    },
                    "num_members": {
                        "type": "integer"
                    },
                    "pending_shared": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "previous_names": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel_name"
                        }
                    },
                    "priority": {
                        "type": "number"
                    },
                    "purpose": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "topic": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "unlinked": {
                        "title": "Field to determine whether a channel has ever been shared/disconnected in the past",
                        "type": "integer"
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "unread_count_display": {
                        "type": "integer"
                    }
                }
            },
            "objs_comment": {
                "title": "File Comment Object",
                "required": [
                    "comment",
                    "created",
                    "id",
                    "is_intro",
                    "timestamp",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_comment_id"
                    },
                    "is_intro": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "num_stars": {
                        "type": "integer"
                    },
                    "pinned_info": {
                        "$ref": "#/components/schemas/defs_pinned_info"
                    },
                    "pinned_to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel"
                        }
                    },
                    "reactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/objs_reaction"
                        }
                    },
                    "timestamp": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    }
                }
            },
            "objs_comments": {
                "title": "file comments object",
                "type": "array",
                "items": {
                    "type": "object"
                }
            },
            "objs_conversation": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/obj_ref_0"
                    },
                    {
                        "$ref": "#/components/schemas/obj_ref_1"
                    },
                    {
                        "$ref": "#/components/schemas/obj_ref_2"
                    }
                ]
            },
            "objs_enterprise_user": {
                "required": [
                    "enterprise_id",
                    "enterprise_name",
                    "id",
                    "is_admin",
                    "is_owner",
                    "teams"
                ],
                "type": "object",
                "properties": {
                    "enterprise_id": {
                        "$ref": "#/components/schemas/defs_enterprise_id"
                    },
                    "enterprise_name": {
                        "$ref": "#/components/schemas/defs_enterprise_name"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_enterprise_user_id"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "is_owner": {
                        "type": "boolean"
                    },
                    "teams": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    }
                }
            },
            "objs_external_org_migrations": {
                "title": "External Org Migrations",
                "required": [
                    "current",
                    "date_updated"
                ],
                "type": "object",
                "properties": {
                    "current": {
                        "type": "array",
                        "items": {
                            "required": [
                                "date_started",
                                "team_id"
                            ],
                            "type": "object",
                            "properties": {
                                "date_started": {
                                    "type": "integer"
                                },
                                "team_id": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "date_updated": {
                        "type": "integer"
                    }
                }
            },
            "objs_file": {
                "title": "file object",
                "type": "object",
                "properties": {
                    "channels": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel_id"
                        }
                    },
                    "comments_count": {
                        "type": "integer"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "date_delete": {
                        "type": "integer"
                    },
                    "display_as_bot": {
                        "type": "boolean"
                    },
                    "editable": {
                        "type": "boolean"
                    },
                    "editor": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "external_type": {
                        "type": "string"
                    },
                    "external_url": {
                        "type": "string"
                    },
                    "filetype": {
                        "type": "string"
                    },
                    "groups": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_group_id"
                        }
                    },
                    "has_rich_preview": {
                        "type": "boolean"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_file_id"
                    },
                    "image_exif_rotation": {
                        "type": "integer"
                    },
                    "ims": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_dm_id"
                        }
                    },
                    "is_external": {
                        "type": "boolean"
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "is_tombstoned": {
                        "type": "boolean"
                    },
                    "last_editor": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "mimetype": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "non_owner_editable": {
                        "type": "boolean"
                    },
                    "num_stars": {
                        "type": "integer"
                    },
                    "original_h": {
                        "type": "integer"
                    },
                    "original_w": {
                        "type": "integer"
                    },
                    "permalink": {
                        "type": "string"
                    },
                    "permalink_public": {
                        "type": "string"
                    },
                    "pinned_info": {
                        "$ref": "#/components/schemas/defs_pinned_info"
                    },
                    "pinned_to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel"
                        }
                    },
                    "pretty_type": {
                        "type": "string"
                    },
                    "preview": {
                        "type": "string"
                    },
                    "public_url_shared": {
                        "type": "boolean"
                    },
                    "reactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/objs_reaction"
                        }
                    },
                    "shares": {
                        "type": "object",
                        "properties": {
                            "private": {
                                "type": "object"
                            },
                            "public": {
                                "type": "object"
                            }
                        }
                    },
                    "size": {
                        "type": "integer"
                    },
                    "source_team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "state": {
                        "type": "string"
                    },
                    "thumb_1024": {
                        "type": "string"
                    },
                    "thumb_1024_h": {
                        "type": "integer"
                    },
                    "thumb_1024_w": {
                        "type": "integer"
                    },
                    "thumb_160": {
                        "type": "string"
                    },
                    "thumb_360": {
                        "type": "string"
                    },
                    "thumb_360_h": {
                        "type": "integer"
                    },
                    "thumb_360_w": {
                        "type": "integer"
                    },
                    "thumb_480": {
                        "type": "string"
                    },
                    "thumb_480_h": {
                        "type": "integer"
                    },
                    "thumb_480_w": {
                        "type": "integer"
                    },
                    "thumb_64": {
                        "type": "string"
                    },
                    "thumb_720": {
                        "type": "string"
                    },
                    "thumb_720_h": {
                        "type": "integer"
                    },
                    "thumb_720_w": {
                        "type": "integer"
                    },
                    "thumb_80": {
                        "type": "string"
                    },
                    "thumb_800": {
                        "type": "string"
                    },
                    "thumb_800_h": {
                        "type": "integer"
                    },
                    "thumb_800_w": {
                        "type": "integer"
                    },
                    "thumb_960": {
                        "type": "string"
                    },
                    "thumb_960_h": {
                        "type": "integer"
                    },
                    "thumb_960_w": {
                        "type": "integer"
                    },
                    "thumb_tiny": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updated": {
                        "type": "integer"
                    },
                    "url_private": {
                        "type": "string"
                    },
                    "url_private_download": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "user_team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "objs_icon": {
                "type": "object",
                "properties": {
                    "image_102": {
                        "type": "string"
                    },
                    "image_132": {
                        "type": "string"
                    },
                    "image_230": {
                        "type": "string"
                    },
                    "image_34": {
                        "type": "string"
                    },
                    "image_44": {
                        "type": "string"
                    },
                    "image_68": {
                        "type": "string"
                    },
                    "image_88": {
                        "type": "string"
                    },
                    "image_default": {
                        "type": "boolean"
                    }
                }
            },
            "objs_message": {
                "title": "Message object",
                "required": [
                    "text",
                    "ts",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "attachments": {
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "required": [
                                "id"
                            ],
                            "type": "object",
                            "properties": {
                                "fallback": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "image_bytes": {
                                    "type": "integer"
                                },
                                "image_height": {
                                    "type": "integer"
                                },
                                "image_url": {
                                    "type": "string"
                                },
                                "image_width": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "blocks": {
                        "$ref": "#/components/schemas/blocks"
                    },
                    "bot_id": {
                        "$ref": "#/components/schemas/defs_bot_id"
                    },
                    "bot_profile": {
                        "$ref": "#/components/schemas/objs_bot_profile"
                    },
                    "client_msg_id": {
                        "type": "string"
                    },
                    "comment": {
                        "$ref": "#/components/schemas/objs_comment"
                    },
                    "display_as_bot": {
                        "type": "boolean"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "files": {
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/objs_file"
                        }
                    },
                    "icons": {
                        "type": "object",
                        "properties": {
                            "emoji": {
                                "type": "string"
                            },
                            "image_64": {
                                "type": "string"
                            }
                        }
                    },
                    "inviter": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "is_delayed_message": {
                        "type": "boolean"
                    },
                    "is_intro": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest_reply": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "parent_user_id": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "permalink": {
                        "type": "string"
                    },
                    "pinned_to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel"
                        }
                    },
                    "purpose": {
                        "type": "string"
                    },
                    "reactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/objs_reaction"
                        }
                    },
                    "reply_count": {
                        "type": "integer"
                    },
                    "reply_users": {
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    },
                    "reply_users_count": {
                        "type": "integer"
                    },
                    "source_team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "subscribed": {
                        "type": "boolean"
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "text": {
                        "type": "string"
                    },
                    "thread_ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "type": {
                        "type": "string"
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "upload": {
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "user_profile": {
                        "$ref": "#/components/schemas/objs_user_profile_short"
                    },
                    "user_team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "objs_paging": {
                "title": "paging object",
                "required": [
                    "page",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "pages": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "spill": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "objs_primary_owner": {
                "required": [
                    "email",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "objs_reaction": {
                "title": "Reaction object",
                "required": [
                    "count",
                    "name",
                    "users"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    }
                }
            },
            "objs_reminder": {
                "required": [
                    "creator",
                    "id",
                    "recurring",
                    "text",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "complete_ts": {
                        "type": "integer"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_reminder_id"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "text": {
                        "type": "string"
                    },
                    "time": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    }
                }
            },
            "objs_resources": {
                "title": "resources in info from apps.permissions.info",
                "required": [
                    "ids"
                ],
                "type": "object",
                "properties": {
                    "excluded_ids": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/defs_channel"
                                },
                                {
                                    "$ref": "#/components/schemas/defs_team"
                                }
                            ]
                        }
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/defs_channel"
                                },
                                {
                                    "$ref": "#/components/schemas/defs_team"
                                }
                            ]
                        }
                    },
                    "wildcard": {
                        "type": "boolean"
                    }
                }
            },
            "objs_response_metadata": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/obj_ref_3"
                    },
                    {
                        "$ref": "#/components/schemas/obj_ref_4"
                    },
                    {
                        "$ref": "#/components/schemas/obj_ref_5"
                    }
                ]
            },
            "objs_scopes": {
                "type": "array",
                "items": {
                    "title": "Named OAuth scopes",
                    "type": "string"
                }
            },
            "objs_subteam": {
                "title": "Subteam/Usergroup Object",
                "required": [
                    "auto_provision",
                    "auto_type",
                    "created_by",
                    "date_create",
                    "date_delete",
                    "date_update",
                    "deleted_by",
                    "description",
                    "enterprise_subteam_id",
                    "handle",
                    "id",
                    "is_external",
                    "is_subteam",
                    "is_usergroup",
                    "name",
                    "prefs",
                    "team_id",
                    "updated_by"
                ],
                "type": "object",
                "properties": {
                    "auto_provision": {
                        "type": "boolean"
                    },
                    "auto_type": {
                        "$ref": "#/components/schemas/obj_ref_6"
                    },
                    "channel_count": {
                        "type": "integer"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "date_delete": {
                        "type": "integer"
                    },
                    "date_update": {
                        "type": "integer"
                    },
                    "deleted_by": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterprise_subteam_id": {
                        "type": "string"
                    },
                    "handle": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_subteam_id"
                    },
                    "is_external": {
                        "type": "boolean"
                    },
                    "is_subteam": {
                        "type": "boolean"
                    },
                    "is_usergroup": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prefs": {
                        "required": [
                            "channels",
                            "groups"
                        ],
                        "type": "object",
                        "properties": {
                            "channels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/defs_channel_id"
                                }
                            },
                            "groups": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/defs_group_id"
                                }
                            }
                        }
                    },
                    "team_id": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "updated_by": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "user_count": {
                        "type": "integer"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    }
                }
            },
            "objs_team": {
                "title": "Team Object",
                "required": [
                    "domain",
                    "email_domain",
                    "icon",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "archived": {
                        "type": "boolean"
                    },
                    "avatar_base_url": {
                        "type": "string"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "discoverable": {
                        "$ref": "#/components/schemas/obj_ref_7"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "email_domain": {
                        "type": "string"
                    },
                    "enterprise_id": {
                        "$ref": "#/components/schemas/defs_enterprise_id"
                    },
                    "enterprise_name": {
                        "$ref": "#/components/schemas/defs_enterprise_name"
                    },
                    "external_org_migrations": {
                        "$ref": "#/components/schemas/objs_external_org_migrations"
                    },
                    "has_compliance_export": {
                        "type": "boolean"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/objs_icon"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "is_assigned": {
                        "type": "boolean"
                    },
                    "is_enterprise": {
                        "type": "integer"
                    },
                    "is_over_storage_limit": {
                        "type": "boolean"
                    },
                    "limit_ts": {
                        "type": "integer"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "messages_count": {
                        "type": "integer"
                    },
                    "msg_edit_window_mins": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "over_integrations_limit": {
                        "type": "boolean"
                    },
                    "over_storage_limit": {
                        "type": "boolean"
                    },
                    "pay_prod_cur": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string",
                        "enum": [
                            "",
                            "std",
                            "plus",
                            "compliance",
                            "enterprise"
                        ]
                    },
                    "primary_owner": {
                        "$ref": "#/components/schemas/objs_primary_owner"
                    },
                    "sso_provider": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "objs_team_profile_field": {
                "required": [
                    "hint",
                    "id",
                    "label",
                    "ordering",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "field_name": {
                        "type": "string"
                    },
                    "hint": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "^X[a-zA-Z0-9]{9,}$",
                        "type": "string"
                    },
                    "is_hidden": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/components/schemas/objs_team_profile_field_option"
                    },
                    "ordering": {
                        "type": "number"
                    },
                    "possible_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "text",
                            "date",
                            "link",
                            "mailto",
                            "options_list",
                            "user"
                        ]
                    }
                }
            },
            "objs_team_profile_field_option": {
                "type": "object",
                "properties": {
                    "is_custom": {
                        "type": "boolean"
                    },
                    "is_multiple_entry": {
                        "type": "boolean"
                    },
                    "is_protected": {
                        "type": "boolean"
                    },
                    "is_scim": {
                        "type": "boolean"
                    }
                }
            },
            "objs_user": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/obj_ref_8"
                    },
                    {
                        "$ref": "#/components/schemas/obj_ref_10"
                    }
                ]
            },
            "objs_user_profile": {
                "title": "User profile object",
                "required": [
                    "avatar_hash",
                    "display_name",
                    "display_name_normalized",
                    "fields",
                    "phone",
                    "real_name",
                    "real_name_normalized",
                    "skype",
                    "status_emoji",
                    "status_text",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "always_active": {
                        "type": "boolean"
                    },
                    "api_app_id": {
                        "$ref": "#/components/schemas/defs_optional_app_id"
                    },
                    "avatar_hash": {
                        "type": "string"
                    },
                    "bot_id": {
                        "$ref": "#/components/schemas/defs_bot_id"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "display_name_normalized": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "guest_expiration_ts": {
                        "type": "integer"
                    },
                    "guest_invited_by": {
                        "type": "string"
                    },
                    "image_1024": {
                        "type": "string"
                    },
                    "image_192": {
                        "type": "string"
                    },
                    "image_24": {
                        "type": "string"
                    },
                    "image_32": {
                        "type": "string"
                    },
                    "image_48": {
                        "type": "string"
                    },
                    "image_512": {
                        "type": "string"
                    },
                    "image_72": {
                        "type": "string"
                    },
                    "image_original": {
                        "type": "string"
                    },
                    "is_app_user": {
                        "type": "boolean"
                    },
                    "is_custom_image": {
                        "type": "boolean"
                    },
                    "is_restricted": {
                        "type": "boolean"
                    },
                    "is_ultra_restricted": {
                        "type": "boolean"
                    },
                    "last_avatar_image_hash": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "memberships_count": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "real_name": {
                        "type": "string"
                    },
                    "real_name_normalized": {
                        "type": "string"
                    },
                    "skype": {
                        "type": "string"
                    },
                    "status_default_emoji": {
                        "type": "string"
                    },
                    "status_default_text": {
                        "type": "string"
                    },
                    "status_default_text_canonical": {
                        "type": "string"
                    },
                    "status_emoji": {
                        "type": "string"
                    },
                    "status_expiration": {
                        "type": "integer"
                    },
                    "status_text": {
                        "type": "string"
                    },
                    "status_text_canonical": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updated": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "objs_user_profile_short": {
                "required": [
                    "avatar_hash",
                    "display_name",
                    "first_name",
                    "image_72",
                    "is_restricted",
                    "is_ultra_restricted",
                    "name",
                    "real_name",
                    "team"
                ],
                "type": "object",
                "properties": {
                    "avatar_hash": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "display_name_normalized": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "image_72": {
                        "type": "string"
                    },
                    "is_restricted": {
                        "type": "boolean"
                    },
                    "is_ultra_restricted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "real_name": {
                        "type": "string"
                    },
                    "real_name_normalized": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    }
                }
            },
            "obj_ref_0": {
                "title": "Conversation object",
                "required": [
                    "created",
                    "creator",
                    "id",
                    "is_archived",
                    "is_channel",
                    "is_general",
                    "is_group",
                    "is_im",
                    "is_mpim",
                    "is_org_shared",
                    "is_private",
                    "is_shared",
                    "name",
                    "name_normalized",
                    "purpose",
                    "topic"
                ],
                "type": "object",
                "properties": {
                    "accepted_user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "connected_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_workspace_id"
                        }
                    },
                    "conversation_host_id": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "display_counts": {
                        "required": [
                            "display_counts",
                            "guest_counts"
                        ],
                        "type": "object",
                        "properties": {
                            "display_counts": {
                                "type": "integer"
                            },
                            "guest_counts": {
                                "type": "integer"
                            }
                        }
                    },
                    "enterprise_id": {
                        "$ref": "#/components/schemas/defs_enterprise_id"
                    },
                    "has_pins": {
                        "type": "boolean"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "internal_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "is_channel": {
                        "type": "boolean"
                    },
                    "is_ext_shared": {
                        "type": "boolean"
                    },
                    "is_frozen": {
                        "type": "boolean"
                    },
                    "is_general": {
                        "type": "boolean"
                    },
                    "is_global_shared": {
                        "type": "boolean"
                    },
                    "is_group": {
                        "type": "boolean"
                    },
                    "is_im": {
                        "type": "boolean"
                    },
                    "is_member": {
                        "type": "boolean"
                    },
                    "is_moved": {
                        "type": "integer"
                    },
                    "is_mpim": {
                        "type": "boolean"
                    },
                    "is_non_threadable": {
                        "type": "boolean"
                    },
                    "is_open": {
                        "type": "boolean"
                    },
                    "is_org_default": {
                        "type": "boolean"
                    },
                    "is_org_mandatory": {
                        "type": "boolean"
                    },
                    "is_org_shared": {
                        "type": "boolean"
                    },
                    "is_pending_ext_shared": {
                        "type": "boolean"
                    },
                    "is_private": {
                        "type": "boolean"
                    },
                    "is_read_only": {
                        "type": "boolean"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "is_thread_only": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "members": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_normalized": {
                        "type": "string"
                    },
                    "num_members": {
                        "type": "integer"
                    },
                    "parent_conversation": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "pending_connected_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "pending_shared": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "pin_count": {
                        "type": "integer"
                    },
                    "previous_names": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel_name"
                        }
                    },
                    "priority": {
                        "type": "number"
                    },
                    "purpose": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "shared_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "shares": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "required": [
                                "is_active",
                                "team",
                                "user"
                            ],
                            "type": "object",
                            "properties": {
                                "accepted_user": {
                                    "$ref": "#/components/schemas/defs_user_id"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "team": {
                                    "$ref": "#/components/schemas/objs_team"
                                },
                                "user": {
                                    "$ref": "#/components/schemas/defs_user_id"
                                }
                            }
                        }
                    },
                    "timezone_count": {
                        "type": "integer"
                    },
                    "topic": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "unlinked": {
                        "title": "Field to determine whether a channel has ever been shared/disconnected in the past",
                        "type": "integer"
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "unread_count_display": {
                        "type": "integer"
                    },
                    "use_case": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "version": {
                        "type": "integer"
                    }
                }
            },
            "obj_ref_1": {
                "title": "Conversation MPIM Object",
                "required": [
                    "created",
                    "creator",
                    "id",
                    "is_archived",
                    "is_channel",
                    "is_general",
                    "is_group",
                    "is_im",
                    "is_mpim",
                    "is_org_shared",
                    "is_private",
                    "is_shared",
                    "name",
                    "name_normalized",
                    "purpose",
                    "topic"
                ],
                "type": "object",
                "properties": {
                    "accepted_user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "connected_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "conversation_host_id": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "display_counts": {
                        "required": [
                            "display_counts",
                            "guest_counts"
                        ],
                        "type": "object",
                        "properties": {
                            "display_counts": {
                                "type": "integer"
                            },
                            "guest_counts": {
                                "type": "integer"
                            }
                        }
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "internal_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "is_channel": {
                        "type": "boolean"
                    },
                    "is_ext_shared": {
                        "type": "boolean"
                    },
                    "is_frozen": {
                        "type": "boolean"
                    },
                    "is_general": {
                        "type": "boolean"
                    },
                    "is_group": {
                        "type": "boolean"
                    },
                    "is_im": {
                        "type": "boolean"
                    },
                    "is_member": {
                        "type": "boolean"
                    },
                    "is_moved": {
                        "type": "integer"
                    },
                    "is_mpim": {
                        "type": "boolean"
                    },
                    "is_non_threadable": {
                        "type": "boolean"
                    },
                    "is_open": {
                        "type": "boolean"
                    },
                    "is_org_shared": {
                        "type": "boolean"
                    },
                    "is_pending_ext_shared": {
                        "type": "boolean"
                    },
                    "is_private": {
                        "type": "boolean"
                    },
                    "is_read_only": {
                        "type": "boolean"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "is_thread_only": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "members": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_normalized": {
                        "type": "string"
                    },
                    "num_members": {
                        "type": "integer"
                    },
                    "parent_conversation": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "pending_connected_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "pending_shared": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "pin_count": {
                        "type": "integer"
                    },
                    "previous_names": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_channel_name"
                        }
                    },
                    "priority": {
                        "type": "number"
                    },
                    "purpose": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "shared_team_ids": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_team"
                        }
                    },
                    "shares": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "required": [
                                "is_active",
                                "team",
                                "user"
                            ],
                            "type": "object",
                            "properties": {
                                "accepted_user": {
                                    "$ref": "#/components/schemas/defs_user_id"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "team": {
                                    "$ref": "#/components/schemas/objs_team"
                                },
                                "user": {
                                    "$ref": "#/components/schemas/defs_user_id"
                                }
                            }
                        }
                    },
                    "timezone_count": {
                        "type": "integer"
                    },
                    "topic": {
                        "required": [
                            "creator",
                            "last_set",
                            "value"
                        ],
                        "type": "object",
                        "properties": {
                            "creator": {
                                "$ref": "#/components/schemas/defs_topic_purpose_creator"
                            },
                            "last_set": {
                                "type": "integer"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    "unlinked": {
                        "title": "Field to determine whether a channel has ever been shared/disconnected in the past",
                        "type": "integer"
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "unread_count_display": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "version": {
                        "type": "integer"
                    }
                }
            },
            "obj_ref_2": {
                "title": "Conversation IM Channel Object from conversations.* methods",
                "required": [
                    "created",
                    "id",
                    "is_im",
                    "is_org_shared",
                    "priority",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "created": {
                        "type": "integer"
                    },
                    "has_pins": {
                        "type": "boolean"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_dm_id"
                    },
                    "is_archived": {
                        "type": "boolean"
                    },
                    "is_ext_shared": {
                        "type": "boolean"
                    },
                    "is_frozen": {
                        "type": "boolean"
                    },
                    "is_im": {
                        "type": "boolean"
                    },
                    "is_open": {
                        "type": "boolean"
                    },
                    "is_org_shared": {
                        "type": "boolean"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "is_starred": {
                        "type": "boolean"
                    },
                    "is_user_deleted": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "parent_conversation": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "pin_count": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "number"
                    },
                    "shares": {
                        "minItems": 0,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "required": [
                                "date_create",
                                "id",
                                "is_active",
                                "name",
                                "team"
                            ],
                            "type": "object",
                            "properties": {
                                "date_create": {
                                    "type": "integer"
                                },
                                "id": {
                                    "$ref": "#/components/schemas/defs_team"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "team": {
                                    "$ref": "#/components/schemas/objs_team"
                                }
                            }
                        }
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "unread_count_display": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "version": {
                        "type": "integer"
                    }
                }
            },
            "obj_ref_3": {
                "title": "new paging style",
                "required": [
                    "next_cursor"
                ],
                "type": "object",
                "properties": {
                    "next_cursor": {
                        "type": "string"
                    }
                }
            },
            "obj_ref_4": {
                "title": "deprecation_warning",
                "required": [
                    "messages",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "method_deprecated"
                            ]
                        }
                    }
                }
            },
            "obj_ref_5": {
                "title": "deprecation_warning and paging style together",
                "required": [
                    "messages",
                    "next_cursor",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "next_cursor": {
                        "type": "string"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "method_deprecated"
                            ]
                        }
                    }
                }
            },
            "obj_ref_6": {
                "type": "string",
                "enum": [
                    "owner",
                    "admin"
                ]
            },
            "obj_ref_7": {
                "type": "string"
            },
            "obj_ref_9": {
                "type": "string"
            },
            "obj_ref_8": {
                "required": [
                    "id",
                    "is_app_user",
                    "is_bot",
                    "name",
                    "profile",
                    "updated"
                ],
                "type": "object",
                "properties": {
                    "color": {
                        "pattern": "^[a-fA-F0-9]{6}$",
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "enterprise_user": {
                        "$ref": "#/components/schemas/objs_enterprise_user"
                    },
                    "has_2fa": {
                        "type": "boolean"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "is_app_user": {
                        "type": "boolean"
                    },
                    "is_bot": {
                        "type": "boolean"
                    },
                    "is_external": {
                        "type": "boolean"
                    },
                    "is_forgotten": {
                        "type": "boolean"
                    },
                    "is_invited_user": {
                        "type": "boolean"
                    },
                    "is_owner": {
                        "type": "boolean"
                    },
                    "is_primary_owner": {
                        "type": "boolean"
                    },
                    "is_restricted": {
                        "type": "boolean"
                    },
                    "is_stranger": {
                        "type": "boolean"
                    },
                    "is_ultra_restricted": {
                        "type": "boolean"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "presence": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/objs_user_profile"
                    },
                    "real_name": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "team_id": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "team_profile": {
                        "required": [
                            "fields"
                        ],
                        "type": "object",
                        "properties": {
                            "fields": {
                                "minItems": 1,
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/objs_team_profile_field"
                                }
                            }
                        }
                    },
                    "two_factor_type": {
                        "type": "string"
                    },
                    "tz": {
                        "$ref": "#/components/schemas/obj_ref_9"
                    },
                    "tz_label": {
                        "type": "string"
                    },
                    "tz_offset": {
                        "type": "number"
                    },
                    "updated": {
                        "type": "number"
                    }
                },
                "description": "user object for non enterprise type"
            },
            "obj_ref_11": {
                "type": "string"
            },
            "obj_ref_10": {
                "required": [
                    "id",
                    "is_app_user",
                    "is_bot",
                    "name",
                    "profile",
                    "updated"
                ],
                "type": "object",
                "properties": {
                    "color": {
                        "pattern": "^([a-fA-F0-9]{6})?$",
                        "type": "string",
                        "description": "refercing to bug: https://jira.tinyspeck.com/browse/EVALUE-1559"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "enterprise_user": {
                        "$ref": "#/components/schemas/objs_enterprise_user"
                    },
                    "has_2fa": {
                        "type": "boolean"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "is_app_user": {
                        "type": "boolean"
                    },
                    "is_bot": {
                        "type": "boolean"
                    },
                    "is_external": {
                        "type": "boolean"
                    },
                    "is_forgotten": {
                        "type": "boolean"
                    },
                    "is_owner": {
                        "type": "boolean"
                    },
                    "is_primary_owner": {
                        "type": "boolean"
                    },
                    "is_restricted": {
                        "type": "boolean"
                    },
                    "is_stranger": {
                        "type": "boolean"
                    },
                    "is_ultra_restricted": {
                        "type": "boolean"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "presence": {
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/objs_user_profile"
                    },
                    "real_name": {
                        "type": "string"
                    },
                    "team_id": {
                        "$ref": "#/components/schemas/defs_workspace_id"
                    },
                    "team_profile": {
                        "required": [
                            "fields"
                        ],
                        "type": "object",
                        "properties": {
                            "fields": {
                                "minItems": 1,
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/objs_team_profile_field"
                                }
                            }
                        }
                    },
                    "teams": {
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_workspace_id"
                        }
                    },
                    "two_factor_type": {
                        "type": "string"
                    },
                    "tz": {
                        "$ref": "#/components/schemas/obj_ref_11"
                    },
                    "tz_label": {
                        "type": "string"
                    },
                    "tz_offset": {
                        "type": "number"
                    },
                    "updated": {
                        "type": "number"
                    }
                },
                "description": "enterprise user"
            },
            "obj_ref_12": {
                "type": "integer"
            },
            "obj_ref_13": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#/components/schemas/defs_dm_id"
                    },
                    "is_im": {
                        "type": "boolean"
                    },
                    "is_open": {
                        "type": "boolean"
                    },
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "unread_count": {
                        "type": "number"
                    },
                    "unread_count_display": {
                        "type": "number"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    }
                }
            },
            "obj_ref_14": {
                "required": [
                    "reply_count",
                    "subscribed",
                    "text",
                    "thread_ts",
                    "ts",
                    "type",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "last_read": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "latest_reply": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "reply_count": {
                        "type": "integer"
                    },
                    "reply_users": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/defs_user_id"
                        }
                    },
                    "reply_users_count": {
                        "type": "integer"
                    },
                    "source_team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "subscribed": {
                        "type": "boolean"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "text": {
                        "type": "string"
                    },
                    "thread_ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "type": {
                        "type": "string"
                    },
                    "unread_count": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "user_profile": {
                        "$ref": "#/components/schemas/objs_user_profile_short"
                    },
                    "user_team": {
                        "$ref": "#/components/schemas/defs_team"
                    }
                }
            },
            "obj_ref_15": {
                "required": [
                    "parent_user_id",
                    "text",
                    "thread_ts",
                    "ts",
                    "type",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "is_starred": {
                        "type": "boolean"
                    },
                    "parent_user_id": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "source_team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "team": {
                        "$ref": "#/components/schemas/defs_team"
                    },
                    "text": {
                        "type": "string"
                    },
                    "thread_ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "ts": {
                        "$ref": "#/components/schemas/defs_ts"
                    },
                    "type": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "user_profile": {
                        "$ref": "#/components/schemas/objs_user_profile_short"
                    },
                    "user_team": {
                        "$ref": "#/components/schemas/defs_team"
                    }
                }
            },
            "obj_ref_17": {
                "title": "File Pin",
                "type": "object",
                "properties": {
                    "created": {
                        "type": "integer"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file"
                        ]
                    }
                }
            },
            "obj_ref_18": {
                "title": "Message Pin",
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "created": {
                        "type": "integer"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/defs_user_id"
                    },
                    "message": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    }
                }
            },
            "obj_ref_16": {
                "required": [
                    "items",
                    "ok"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/obj_ref_17"
                                },
                                {
                                    "$ref": "#/components/schemas/obj_ref_18"
                                }
                            ]
                        }
                    },
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    }
                }
            },
            "obj_ref_19": {
                "required": [
                    "count",
                    "ok"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    }
                }
            },
            "obj_ref_20": {
                "required": [
                    "channel",
                    "message",
                    "ok",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "message": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    }
                }
            },
            "obj_ref_21": {
                "required": [
                    "file",
                    "ok",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file"
                        ]
                    }
                }
            },
            "obj_ref_22": {
                "required": [
                    "comment",
                    "file",
                    "ok",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "$ref": "#/components/schemas/objs_comment"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file_comment"
                        ]
                    }
                }
            },
            "obj_ref_23": {
                "required": [
                    "channel",
                    "message",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "message": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    }
                }
            },
            "obj_ref_24": {
                "required": [
                    "file",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file"
                        ]
                    }
                }
            },
            "obj_ref_25": {
                "required": [
                    "comment",
                    "file",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "$ref": "#/components/schemas/objs_comment"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file_comment"
                        ]
                    }
                }
            },
            "obj_ref_26": {
                "required": [
                    "channel",
                    "date_create",
                    "message",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "message": {
                        "$ref": "#/components/schemas/objs_message"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    }
                }
            },
            "obj_ref_27": {
                "required": [
                    "date_create",
                    "file",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "date_create": {
                        "type": "integer"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file"
                        ]
                    }
                }
            },
            "obj_ref_28": {
                "required": [
                    "comment",
                    "date_create",
                    "file",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "$ref": "#/components/schemas/objs_comment"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "file": {
                        "$ref": "#/components/schemas/objs_file"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file_comment"
                        ]
                    }
                }
            },
            "obj_ref_29": {
                "required": [
                    "channel",
                    "date_create",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_channel"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "channel"
                        ]
                    }
                }
            },
            "obj_ref_30": {
                "required": [
                    "channel",
                    "date_create",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_dm_id"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "im"
                        ]
                    }
                }
            },
            "obj_ref_31": {
                "required": [
                    "channel",
                    "date_create",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/defs_group_id"
                    },
                    "date_create": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "group"
                        ]
                    }
                }
            },
            "obj_ref_32": {
                "required": [
                    "ok",
                    "team",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "team": {
                        "required": [
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_team"
                            }
                        }
                    },
                    "user": {
                        "required": [
                            "id",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_user_id"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "Schema for 'identity.basic' scope"
            },
            "obj_ref_33": {
                "required": [
                    "ok",
                    "team",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "team": {
                        "required": [
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_team"
                            }
                        }
                    },
                    "user": {
                        "required": [
                            "email",
                            "id",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "id": {
                                "$ref": "#/components/schemas/defs_user_id"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "Schema for 'identity.basic,identity.email' scopes"
            },
            "obj_ref_34": {
                "required": [
                    "ok",
                    "team",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "team": {
                        "required": [
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_team"
                            }
                        }
                    },
                    "user": {
                        "required": [
                            "id",
                            "image_192",
                            "image_24",
                            "image_32",
                            "image_48",
                            "image_512",
                            "image_72",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_user_id"
                            },
                            "image_192": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_24": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_32": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_48": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_512": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_72": {
                                "type": "string",
                                "format": "url"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "Schema for 'identity.basic,identity.avatar' scopes"
            },
            "obj_ref_35": {
                "required": [
                    "ok",
                    "team",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "ok": {
                        "$ref": "#/components/schemas/defs_ok_true"
                    },
                    "team": {
                        "required": [
                            "domain",
                            "id",
                            "image_102",
                            "image_132",
                            "image_230",
                            "image_34",
                            "image_44",
                            "image_68",
                            "image_88",
                            "image_default",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "domain": {
                                "type": "string"
                            },
                            "id": {
                                "$ref": "#/components/schemas/defs_team"
                            },
                            "image_102": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_132": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_230": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_34": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_44": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_68": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_88": {
                                "type": "string",
                                "format": "url"
                            },
                            "image_default": {
                                "type": "boolean"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "user": {
                        "required": [
                            "id",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/defs_user_id"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "Schema for 'identity.basic,identity.team' scopes"
            }
        },
        "securitySchemes": {
            "slackAuth": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://slack.com/oauth/authorize",
                        "tokenUrl": "https://slack.com/api/oauth.access",
                        "scopes": {
                            "admin": "admin",
                            "admin.apps:read": "admin.apps:read",
                            "admin.apps:write": "admin.apps:write",
                            "admin.conversations:read": "admin.conversations:read",
                            "admin.conversations:write": "admin.conversations:write",
                            "admin.invites:read": "admin.invites:read",
                            "admin.invites:write": "admin.invites:write",
                            "admin.teams:read": "admin.teams:read",
                            "admin.teams:write": "admin.teams:write",
                            "admin.usergroups:read": "admin.usergroups:read",
                            "admin.usergroups:write": "admin.usergroups:write",
                            "admin.users:read": "admin.users:read",
                            "admin.users:write": "admin.users:write",
                            "authorizations:read": "authorizations:read",
                            "bot": "Bot user scope",
                            "calls:read": "calls:read",
                            "calls:write": "calls:write",
                            "channels:history": "channels:history",
                            "channels:manage": "channels:manage",
                            "channels:read": "channels:read",
                            "channels:write": "channels:write",
                            "chat:write": "chat:write",
                            "chat:write:bot": "Author messages as a bot",
                            "chat:write:user": "Author messages as a user",
                            "conversations:history": "conversations:history",
                            "conversations:read": "conversations:read",
                            "conversations:write": "conversations:write",
                            "dnd:read": "dnd:read",
                            "dnd:write": "dnd:write",
                            "emoji:read": "emoji:read",
                            "files:read": "files:read",
                            "files:write:user": "files:write:user",
                            "groups:history": "groups:history",
                            "groups:read": "groups:read",
                            "groups:write": "groups:write",
                            "identity.basic": "identity.basic",
                            "im:history": "im:history",
                            "im:read": "im:read",
                            "im:write": "im:write",
                            "links:write": "links:write",
                            "mpim:history": "mpim:history",
                            "mpim:read": "mpim:read",
                            "mpim:write": "mpim:write",
                            "none": "No scope required",
                            "pins:read": "pins:read",
                            "pins:write": "pins:write",
                            "reactions:read": "reactions:read",
                            "reactions:write": "reactions:write",
                            "reminders:read": "reminders:read",
                            "reminders:write": "reminders:write",
                            "remote_files:read": "remote_files:read",
                            "remote_files:share": "remote_files:share",
                            "remote_files:write": "remote_files:write",
                            "rtm:stream": "rtm:stream",
                            "search:read": "search:read",
                            "stars:read": "stars:read",
                            "stars:write": "stars:write",
                            "team:read": "team:read",
                            "tokens.basic": "tokens.basic",
                            "usergroups:read": "usergroups:read",
                            "usergroups:write": "usergroups:write",
                            "users.profile:read": "users.profile:read",
                            "users.profile:write": "users.profile:write",
                            "users:read": "users:read",
                            "users:read.email": "users:read.email",
                            "users:write": "users:write",
                            "workflow.steps:execute": "workflow.steps:execute"
                        }
                    }
                }
            }
        }
    }
}