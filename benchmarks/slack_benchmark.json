{
  "config": "configs/slack_config.json",
  "benchmarks": [
    {
      "name": "1.1",
      "desc": "Retrieve all member emails from channel name",
      "landmarks": [],
      "input_args": {
        "channel_name": "objs_conversation.name"
      },
      "output": "[objs_user_profile.email]",
      "solution": [
        "\\channel_name => {",
          "let x0 = /conversations.list_GET()",
          "let x1 <- x0.channels",
          "if x1.name = channel_name",
          "let x2 = /conversations.members_GET(channel=x1.id)",
          "x3 <- x2.members",
          "let x4 = /users.info_GET(user=x3)",
          "return x4.user.profile.email",
        "}"
      ],
      "max_length": 20
    },
    {
      "name": "1.2",
      "desc": "Send a message to some user given the email address",
      "landmarks": [],
      "input_args": {
        "email": "objs_user_profile.email"
      },
      "output": "objs_message",
      "solution": [
        "\\email => {",
          "let x0 = /users.lookupByEmail_GET(email=email)",
          "let x1 = /conversations.open_GET(users=x0.user.id)",
          "let x2 = /chat.postMessage_POST(channel=x1.channel.id)",
          "return x2.message",
          "}"
      ],
      "max_length": 10
    },
    {
      "name": "1.3",
      "desc": "Get all unread message for a user",
      "landmarks": [],
      "input_args": {
        "user_id": "defs_bot_id"
      },
      "output": "[objs_message]",
      "solution": [
        "\\user_id => {",
          "let x0 = /users.conversations_GET(user=user_id)",
          "x1 <- x0.channels",
          "let x2 = /conversations.info_GET(channel=x1.id)",
          "let x3 = x2.last_read",
          "let x5 = /conversations.history_GET(channel=x2.id, oldest=x3)",
          "return x5",
          "}"
      ],
      "max_length": 10
    }
  ]
}
